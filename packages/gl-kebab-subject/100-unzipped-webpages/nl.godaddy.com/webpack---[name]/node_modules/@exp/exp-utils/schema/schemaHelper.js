'use strict';

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var SchemaDefinitionBlock = require('./schemaDefinitionBlocks').SchemaDefinitionBlock;

var SchemaHelper = function() {
    function SchemaHelper(commandSchemaDefinitions) {
        _classCallCheck(this, SchemaHelper);

        this.commandSchemaDefinitions = commandSchemaDefinitions;
    }

    SchemaHelper.prototype.handleSchema = function handleSchema(name, type, version, inputData, extras, sinksOverride) {
        // An exception will be thrown if the schema does not exist
        var schemaDefinition = new SchemaDefinitionBlock(this.commandSchemaDefinitions, name, type, version);

        if (schemaDefinition.schema.handler) {
            var sinks = sinksOverride || schemaDefinition.schema.sinks || [];
            var data = schemaDefinition.parse(inputData, sinks);

            // Pass current helper into the handler so that the handler can call another schema, if needed
            var handler = new schemaDefinition.schema.handler(this);
            handler.load(schemaDefinition.type, sinks, data, extras);
        }
    };

    return SchemaHelper;
}();

module.exports = SchemaHelper;