const elements = {};
const customProps = /^(data-|aria-)|^role$|^on[A-Z]/;

function isValidProp(testElement, propName) {
    return propName in testElement || customProps.test(propName);
}

export default function filterProps(elementType, props) {
    if (!props) return {};
    if (typeof elementType !== 'string') return props;

    let testElement = elements[elementType];
    if (!testElement) {
        // If we don't have document, we can't test for props
        if (typeof document === 'undefined') return props;

        elements[elementType] = testElement = document.createElement(elementType);
    }

    return Object.keys(props).reduce((validProps, propName) => {
        if (isValidProp(testElement, propName)) {
            validProps[propName] = props[propName];
        }
        return validProps;
    }, {});
}



// WEBPACK FOOTER //
// ./node_modules/@ux/containers/filter-props.js