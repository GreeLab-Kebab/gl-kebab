import Component from '@ux/component';
import PropTypes from 'prop-types';
import React, {
    Children
} from 'react';

/**
 * Base Componenet for Accordion
 *
 * @public
 * @constructor
 */
export default class Base extends Component {
    constructor(props, ...args) {
        super(props, ...args);

        this.state.open = +this.props.open || -1; // eslint-disable-line react/no-direct-mutation-state
    }

    /**
     * Process the child elements so they can be orchestrated by the accordion
     * interface.
     *
     * @returns {Array} A set of children components that need to be rendered.
     * @param {Object} styles Optional Browser
     * @private
     */
    panels(styles = {}) {
        const open = this.state.open;
        const {
            children,
            startTabIndex
        } = this.props;

        if (!children) {
            return;
        }

        return Children.map(children, (child, index) => {
            if (!child || !child.props || !('title' in child.props)) return child;

            const onClick = child.props.onClick;

            //
            // Increase the index so it's no longer zero based. This makes
            // for a much more friendly developer interface.
            //
            index++;

            return React.cloneElement(child, {
                key: index,
                tabIndex: index + startTabIndex,
                open: index === open,
                styles,
                onClick: (e) => {
                    e.preventDefault();

                    let toggle = true;
                    if (typeof onClick === 'function') {
                        toggle = onClick(e, index);
                    }

                    if (this.state.open === index) {
                        index = -1;
                    }

                    if (toggle !== false) {
                        this.setState({
                            open: index
                        });
                    }
                }
            });
        });
    }
}


/**
 * Default properties
 * @type {Object}
 * @public
 */

Base.defaultProps = {
    open: -1,
    startTabIndex: 0
};

/**
 * Property validation.
 *
 * @type {Object}
 * @public
 */
Base.propTypes = {
    /** Which panel should be open by default. */
    open: PropTypes.number,
    /** The actual collapsible panels. */
    children: PropTypes.node.isRequired,
    /** The title for the accordion. */
    title: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.element
    ]),
    /** Developer indicates start index */
    startTabIndex: PropTypes.number
};



// WEBPACK FOOTER //
// ./node_modules/@ux/accordion/accordion.js