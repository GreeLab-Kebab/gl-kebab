/* jscs:disable requireSpacesInsideJsxExpressionContainers */

import React from 'react';
import PropTypes from 'prop-types';
import {
    golf
} from '../enums';
import {
    NamespaceConsumer,
    NamespaceShape,
    withNamespace
} from '@ux/namespace-component';
import {
    IntlProvider,
    FormattedMessage
} from 'react-intl';

/**
 * Render VIP information after login if required.
 *
 * @Constructor
 * @class VIP
 * @api public
 */
class VIP extends NamespaceConsumer {
    render() {
        const props = this.props;
        const vip = props.details;

        if (typeof vip !== 'object') {
            return null;
        }

        return ( <
            IntlProvider locale = {
                props.market
            }
            messages = {
                props.messages
            } >
            <
            ul className = {
                this.namespace('list-unstyled', 'vip-status')
            } >
            <
            li > < FormattedMessage id = {
                golf.vipRepName
            }
            />:</li >
            <
            li >
            <
            strong > {
                vip.repname
            } < /strong> <
            /li> <
            li >
            <
            FormattedMessage id = {
                golf.vipExecPhone
            }
            />: <a href={ `tel:${ vip.phone }` }>{ vip.phone }</a >
            <
            /li> <
            li >
            <
            FormattedMessage id = {
                golf.vipExecEmail
            }
            />: <a href={ `mailto:${ vip.email }` }>{ vip.email }</a >
            <
            /li> <
            /ul> <
            /IntlProvider>
        );
    }
}

/**
 * Property definitions.
 *
 * @type {Object}
 * @api private
 */
VIP.propTypes = {
    ...NamespaceShape,
    details: PropTypes.object,
    market: PropTypes.string.isRequired,
    messages: PropTypes.object.isRequired
};

export default withNamespace(VIP);