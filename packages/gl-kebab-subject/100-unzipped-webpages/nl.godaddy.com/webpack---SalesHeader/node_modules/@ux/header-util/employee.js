import User from './user';

/**
 * Employee details
 *
 * @Constructor Employee
 * @param {Object} options Optional configuration.
 * @api public
 */
export default class Employee extends User {
    /**
     * Update data from the idp cookie
     *
     * @api private
     */
    updateFromCookie() {
        this.cookies.updateRealm('jomax');

        this.set(this.getJomaxProperties(this.cookies.getJomaxProperties.bind(this.cookies)));
    }

    /**
     * Get properties from jomax information
     *
     * @param {Function} getJomaxPropertiesFn Function to call to get properties from jomax
     * @returns {Object} Extracted properties
     * @api private
     */
    getJomaxProperties(getJomaxPropertiesFn) {
        return getJomaxPropertiesFn([
            'firstname',
            'lastname',
            'info_accountName',
            'loggedIn'
        ].map(property => [property]).concat('jti'), {
            info_accountName: 'loginName'
        });
    }

    /**
     * Update user details from cookie
     *
     * @param {Object} url Request targets (not used for this subclass)
     * @param {Function} done Completion callback
     * @api public
     */
    fetch(url, done) {
        this.updateFromCookie();
        done(null, this.getAll());
    }

    /**
     * Always return a null shopper ID for Employees
     *
     * @returns {Undefined} null
     * @api public
     */
    get shopperId() {
        return null;
    }
}