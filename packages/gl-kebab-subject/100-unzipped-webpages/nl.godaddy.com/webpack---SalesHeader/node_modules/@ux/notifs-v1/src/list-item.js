import React from 'react';
import {
    NamespaceConsumer,
    NamespaceShape,
    withNamespace
} from '@ux/namespace-component';
import trfq from 'react-trfq';
import shapes from './shapes';

const trfqEventDesc = 'click';

class NotificationListItem extends NamespaceConsumer {
    constructor() {
        super(...arguments);
        this.onNotificationClick = this.onNotificationClick.bind(this);
    }

    onNotificationClick(e) {
        const {
            eids,
            _links: link
        } = this.props.notification;
        const {
            href
        } = link.resolve;

        if (eids && eids.click) {
            trfq.logEvent(eids.click, trfqEventDesc, {}, e);
        }

        if (href) {
            setTimeout(function notificationNavigate() {
                window.open(href, '_blank');
            }, 100);
        }
    }

    render() {
        const {
            notification
        } = this.props;
        const href = notification._links.resolve.href;
        const priorityLabelClassName = this.namespace('priority', notification.severity, notification.type);
        const classes = this.namespace('notifications-list-item', 'font-base');

        return ( <
            li className = {
                classes
            } >
            <
            a target = '_blank'
            rel = 'noopener noreferrer'
            href = {
                href
            }
            onClick = {
                this.onNotificationClick
            }
            className = {
                priorityLabelClassName
            } >
            <
            span > {
                notification.text
            } < /span> <
            /a> <
            /li>
        );
    }
}

NotificationListItem.propTypes = {
    ...NamespaceShape,
    notification: shapes.notification.isRequired
};

export default withNamespace(NotificationListItem);