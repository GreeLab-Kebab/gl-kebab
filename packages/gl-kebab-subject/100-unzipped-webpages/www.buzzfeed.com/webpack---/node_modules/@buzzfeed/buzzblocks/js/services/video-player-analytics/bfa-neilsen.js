export function neilsenMap(mapper) {
    const videoRouter = mapper.getOrCreateRouter('track/videoplayer');
    const videoConfig = videoRouter.createDefaultConfig();

    videoConfig.addMapTo('type', 'content');
    videoConfig.addMapTo('adloadtype', '2');
    videoConfig.addMapTo('title', '').mapFrom(src => `${src.data.video_title}`);
    videoConfig.addMapTo('assetid', '').mapFrom(src => `${(src.data.video_id || src.data.transcoder_path || '').replace(/\//g, '')}`);
    videoConfig.addMapTo('segB', '').mapFrom(src => `${src.data.platform}`);
    videoConfig.addMapTo('segC', '').mapFrom(src => `${src.data.page.country}`);
    videoConfig.addMapTo('program', '').mapFrom(src => `${src.data.author}`);
    videoConfig.addMapTo('isfullepisode', 'y');
    videoConfig.addMapTo('length', '').mapFrom(function(src) {
        return Math.round((src.data.length || 0) / 1000);
    });
    videoConfig.addMapTo('airdate', '').mapFrom(function(src) {
        if (!src.data.releasedAt) {
            return '';
        }
        return src.data.releasedAt.replace(/-/g, '').replace('T', ' ').replace('Z', '').replace(/\.[0-9]+/, '');
    });
    videoConfig.addMapTo('playheadPosition', '').mapFrom(function(src) {
        return Math.round((src.data.video_ts || 0) / 1000);
    });
    return videoRouter;
}