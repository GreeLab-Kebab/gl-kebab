/**
  @class CountdownClock
  a countdown clock
  @param {String} Date: YYYY-MM-DDThh:mm:ss
*/
import {
    Application
} from 't3js';
import dom from '../../js/services/dom';

class CountdownClock {
    constructor(context) {
        this.context = context;
        this.element = context.getElement();
        this.countdown = this.element.querySelector('.countdown');
        this.countdownEls = Array.from(this.countdown.children);
        this.config = context.getConfig() || {};
        this.end = this.config.date;
    }
    _calcTime() {
        const time = parseInt(this.end, 10) * 1000 - new Date().getTime();

        if (time <= 0) {
            return this.endTimer();
        }
        /* i stole this math, idk math */
        return {
            seconds: Math.floor((time / 1000) % 60),
            minutes: Math.floor((time / 1000 / 60) % 60),
            hours: Math.floor((time / (1000 * 60 * 60)) % 24),
            days: Math.floor(time / (1000 * 60 * 60 * 24))
        };
    }
    _renderTime(time) {
        // let templateData = {};
        for (let key in time) {
            /* throw if time is f'd */
            if (!isNaN(time[key])) {
                /* leading zeros trash hack 90000 */
                this.countdownEls.forEach(child => {
                    const num = child.querySelector('.num');
                    // leading zeros trash hack 90000
                    const lastNum = num.textContent;
                    const text = `0${time[key]}`.slice(-2);
                    if (child.classList.contains(key) && lastNum !== text) {
                        num.textContent = text;
                    }
                });
            } else {
                this.endTimer();
                throw new Error('Something is wrong with ur date string');
            }
        }
    }
    endTimer() {
        clearInterval(this.timer);
        this.module = null;
        this.timer = null;
        dom.remove(this.element);
    }
    init() {
        const now = this._calcTime();
        this._renderTime(now);

        this.timer = setInterval(() => {
            const time = this._calcTime();
            this._renderTime(time);
        }, 1000);
    }
}

Application.addModule('countdown-clock', context => new CountdownClock(context));