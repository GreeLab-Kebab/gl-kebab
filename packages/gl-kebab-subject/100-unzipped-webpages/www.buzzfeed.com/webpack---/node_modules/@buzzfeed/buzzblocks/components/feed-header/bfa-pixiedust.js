/**
 *
 * @param {Object} mapper - required - bf-analytics mapper object
 * @param {string} setCommonData - optional - function to set
 */
export function pixiedustMap(mapper, setCommonData) {
    if (!mapper) {
        console.log('Cannot bind pixiedust mapping for feed-header: No mapper defined');
    }

    const clickRouter = mapper.getOrCreateRouter('track/click');

    const feedHeaderBrandUrlMap = clickRouter.createConfigForRoute(src => src.l === 'FeedHeader' && src.n === 'FeedHeaderBrand');
    setCommonData(feedHeaderBrandUrlMap, [
        'mode',
        'page_url',
        'os',
        'content_id',
        'unit_client_id',
        'variation_id',
        'data_source',
        'treatment',
    ]);

    feedHeaderBrandUrlMap.addMapTo('unit', 'feed_header');
    feedHeaderBrandUrlMap.addMapTo('sub_unit', 'brand');
    feedHeaderBrandUrlMap.addMapTo('type', 'link_click_external');

    const feedHeaderSponsorUrlMap = clickRouter.createConfigForRoute(src => src.l === 'FeedHeader' && src.n === 'FeedHeaderSponsor');

    setCommonData(feedHeaderSponsorUrlMap, [
        'mode',
        'page_url',
        'os',
        'content_id',
        'unit_client_id',
        'variation_id',
        'data_source',
        'treatment',
    ]);

    feedHeaderSponsorUrlMap.addMapTo('unit', 'feed_header');
    feedHeaderSponsorUrlMap.addMapTo('sub_unit', 'sponsor');
    feedHeaderSponsorUrlMap.addMapTo('type', 'link_click_external');
}