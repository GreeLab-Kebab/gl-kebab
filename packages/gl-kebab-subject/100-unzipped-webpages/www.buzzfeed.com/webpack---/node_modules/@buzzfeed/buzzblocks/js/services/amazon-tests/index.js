import util from '../util/standalone';
import bzfd from '../bzfd';
import abeagle from '../abeagle';
import {
    includes
} from 'lodash';

var service = {};

/*
 * NOTE: This will be loaded on feedpager & bpager.
 * Ensure your isEligible function will fail safe!
 */

/*
  * A typical shopping test looks like this:
 {
    name: 'amazon_onelink',
    variations: ['control', 'on'],
    storeResponse: true,
    isEligible: () => {
      const { isBPage, isShopping, isAsIs } = bzfd;
      return isBPage && (isShopping || isAsIs);
    }
  }
 */
export const SHOPPING_TESTS = [{
        name: 'shopping_package_all_bpager',
        variations: ['control', 'on'],
        storeResponse: true,
        isEligible: () => {
            const isBpage = bzfd.isBPage;
            const isUs = includes(bzfd.allPageEditions, 'US');
            const isSensitive = bzfd.buzzFlags.sensitive || false;
            const isAd = bzfd.isAd;
            return isBpage && isUs && !isAd && !isSensitive;
        }
    },
    {
        name: 'SITE-6717-affiliate-image',
        variations: ['control', 'link'],
        storeResponse: true,
        isEligible: () => true,
    },
];
const TEST_NAMES = SHOPPING_TESTS.map(item => item.name);

service.getTestValues = function() {
    var testMetaData = abeagle.getExperimentMetaData(TEST_NAMES);
    var testData = [];

    if (testMetaData) {
        util.each(testMetaData, function(_, metaData) {
            if (typeof metaData === 'object' && metaData !== null && metaData.variant_id !== 'undefined' && metaData.id !== 'undefined') {
                testData.push({
                    'variantid': metaData.variant_id,
                    'experimentid': metaData.id
                });
            }
        });
    }

    return testData;
};

export default service;