const automuteVideos = [];
let globalMutedState = null;

/**
 * Update mute attributes on video
 * Then trigger mute on all videos in the list
 */
export function adjustVolume(event) {
    const currentVideo = event.target;

    // Means it's the clicked one and not a consequence of the forEach
    if (globalMutedState !== currentVideo.muted) {
        globalMutedState = currentVideo.muted;
        currentVideo.removeAttribute('data-automuted');
        automuteVideos.forEach(forceUpdateVolume);
    }
}

/**
 * Update the mute if it's different then current value
 * @param {Element} video - the video element to add automute to
 */
export function forceUpdateVolume(video) {
    if (video.muted !== globalMutedState) {
        // We set them to automuted, then when a mute event is trigered directly on the video,
        // we will remove it so we know the click was on THAT one
        video.dataset.automuted = '';
        video.muted = globalMutedState;
    }
}

/**
 * Adds smart automute functionality to a video Element
 * All video mute when one mute and the opposite
 * @param {Element} video - the video element to add automute to
 * @param {Bool} defaultMuted - by default, if videos should be muted
 */
export default function addAutomute(video, defaultMuted) {
    if (globalMutedState === null) {
        // First one of the page, we take the setting
        globalMutedState = defaultMuted;
    }
    automuteVideos.push(video);

    forceUpdateVolume(video);
    video.addEventListener('volumechange', adjustVolume);
}