import {
    path as instrumentationPath
} from './mapping';

const VALID_OPTIONS = ['samplingRate'];

/**
 * Increments metric on DataDog.
 * Metric name is constructed from target and value parameters (i.e. 'image.error').
 * @see https://github.com/buzzfeed/mono/blob/master/qr_website_metrics for available metrics and tags.
 * @export
 * @param {String} target - describes what caused metric report.
 * @param {String} value - describes what happened to the metric target.
 * @param {Object?} [tags] - keys and values are metric tag names and values respectively.
 * @param {Object?} [options] - tracking options.
 * @param {Boolean} [options.samplingRate] - forces event to be tracked regardless of sampling configuration.
 * @returns {void}
 * @example instrument('chunk', 'timeout', { name: 'quiz' })
 */
export function instrument(target, value, tags = {}, options = {}) {
    if (typeof window.bfa !== 'function') {
        if (typeof window.raven !== 'undefined') {
            window.raven.captureException(new Error('Instrumentation tracking issue: BFA is not available'));
        }
        return;
    }

    if (VALID_OPTIONS.some(opt => tags.hasOwnProperty(opt))) {
        options = tags;
        tags = {};
    }

    const {
        samplingRate,
        platform
    } = options;
    const trackingData = {
        data: {
            target,
            value,
            tags
        }
    };

    // allow override platform (e.g. for ads on asis pages)
    if (platform) {
        trackingData.data.platform = options.platform;
    }

    if (samplingRate) {
        if (samplingRate > 1) {
            if (window.BZFD.Config.env === 'dev') {
                console.error('Your sampling rate is above 100%.');
            }
        } else {
            Object.assign(trackingData, {
                opts: {
                    samplingRate
                }
            });
        }
    }

    window.bfa(instrumentationPath, trackingData);
}