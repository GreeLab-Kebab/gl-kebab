export function gaMap(mapper) {
    const videoRouter = mapper.getOrCreateRouter('track/videoplayer');
    const videoConfig = videoRouter.createDefaultConfig();
    const videoTemplate = mapper.createMapTemplate('videoTemplate');

    videoConfig.applyTemplateByName('videoTemplate');
    videoConfig.addMapTo('category', 'VideoPlayer');
    videoConfig.addMapTo('action', '').mapFrom(src => {
        return src.n === 'video_finish' ? 'video:playback' : src.n;
    });
    videoConfig.addMapTo('label', '').mapFrom(src => {
        return src.n === 'video_finish' ? '100%' : src.data.play_start_type;
    });

    videoTemplate.addMapTo('value', '').mapFrom(src => {
        return {
            dimension3: src.data.video_id,
            dimension4: src.data.video_title,
            dimension5: src.data.orientation,
            dimension14: src.data.duration || 0,
            dimension15: src.data.video_ts,
            dimension16: src.data.youtube_id
        };
    });

    return videoRouter;
}