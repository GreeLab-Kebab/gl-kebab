import {
    Application
} from 't3js';
import apiService from '../../js/services/component-api';
import carouselTemplate from './site-component-carousel.html';
import prepareTemplate from '../../js/services/nunjucks-env';
import solid from '../../js/services/solid';
import ScrollingCarousel from '../../js/services/scrolling-carousel';
import SiteComponentList from '../site-component-list/site-component-list';

const template = prepareTemplate(carouselTemplate);

/**
 * Extends from the SiteComponentList and adds in some scrolling-carousel
 * dependencies.
 *
 * Example usage:
 *
 *  <div data-module="site-component-carousel">
 *    <script type="text/x-config">
 *      {
 *        "unit": "trending",
 *        "unitType": "carousel",
 *        "unitName": "feed/trending",
 *        "color": "pink",
 *        "loadXsmall": true,
 *        "loadSmall": true,
 *        "loadMedium": true,
 *        "loadLarge": true
 *      }
 *    </script>
 *  </div>
 */
class SiteComponentCarousel extends SiteComponentList {
    /**
     * Returns the template contents
     * @returns {string} template
     * @override
     */
    loadTemplate() {
        return template;
    }

    /**
     * Renders the actual template, called from promise
     * @param {Object} data - Data from an XHR to the site_component_api
     * @override
     */
    renderTemplate(data) {
        //if no results from dataSource, return early
        if (!data.length) {
            return;
        }

        super.renderTemplate(data);

        // this timeout is to allow mobile safari to fully render the
        // highest element in the carousel before assembling it
        setTimeout(() => {
            if (this.element !== null) {
                new ScrollingCarousel(this.element).setSizes();
            }
        }, 200);
    }

    /**
     * @returns {Object} module - T3 module
     * @override
     */
    generateModule() {
        return ctx => new SiteComponentCarousel(this.apiService, this.solid, ctx);
    }
}

export default SiteComponentCarousel;

Application.addModule(
    'site-component-carousel',
    new SiteComponentCarousel(apiService, solid).generateModule()
);