/**
 * Calls the correct vendor-prefixed requestFullscreen method
 * @param {Element} element - the element to fill to screen
 */
export function requestFullscreen(element) {
    const prefixedMethods = [
        'requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'
    ];
    for (let i = 0; i < prefixedMethods.length; i++) {
        if (element[prefixedMethods[i]]) {
            element[prefixedMethods[i]]();
            return;
        }
    }
}

/**
 * Calls the correct vendor-prefixed exitFullscreen method
 */
export function exitFullscreen() {
    const prefixedMethods = [
        'exitFullscreen', 'webkitExitFullscreen', 'mozCancelFullScreen', 'msExitFullscreen'
    ];
    for (let i = 0; i < prefixedMethods.length; i++) {
        if (document[prefixedMethods[i]]) {
            document[prefixedMethods[i]]();
            return;
        }
    }
}

/**
 * Adds all vendor-prefixed fullscreenchange event listeners
 * @param {Function} callback
 */
export function addFullscreenChangeListener(callback) {
    ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange']
    .forEach(event => document.addEventListener(event, callback));
}

/**
 * Returns true if any of the vender-prefixed fullscreenElement properties are set
 */
export function isFullscreen() {
    return document.fullscreenElement || document.webkitFullscreenElement ||
        document.mozFullScreenElement || document.msFullscreenElement;
}