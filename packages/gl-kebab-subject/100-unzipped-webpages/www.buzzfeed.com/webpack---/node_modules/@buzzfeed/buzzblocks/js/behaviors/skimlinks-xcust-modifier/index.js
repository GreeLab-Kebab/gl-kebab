import {
    Application
} from 't3js';
import dom from '../../services/dom';
import alu from '../../services/affiliate-links';

class SkimlinksXcustModifier {

    constructor(context) {
        this.context = context;
        this._globalConfig = window.BZFD.Config;
    }

    /**
     * Modify <a>'s with hrefs that start with the skimlinks "domain"
     * example: go.redirecting
     * @returns {void}
     */
    _modifyHREF(targetEl) {
        if (!this._globalConfig || !this._globalConfig.linkConversion) {
            return;
        }

        var _href = dom.getAttr(targetEl, 'href');

        if (!dom.hasClass(targetEl, 'js-skimlink-subtag-modified') && _href) {
            _href = alu._modifySkimlinksURL(_href, this._globalConfig.linkConversion.skimlinks.url);
            dom.setAttr(targetEl, {
                'href': _href
            });
            dom.addClass(targetEl, 'js-skimlink-subtag-modified');
        }
    }

    /**
     * Handles onclick event.
     * @param {Event} ev - normalized DOM event.
     * @returns {void}
     */
    onclick(ev) {
        var targetAnchor = false;

        if (ev && ev.target) {
            //check target element for closest anchor element (ie. if clicked
            //element is a non-anchor nested within one; like a <span>)
            targetAnchor = dom.closest(ev.target, 'a');

            if (targetAnchor) {
                this._modifyHREF(targetAnchor);
            }
        }
    }


    /**
     * Cleanup.
     * @ignore
     * @return {void}
     */
    destroy() {}
}


Application.addBehavior('skimlinks-xcust-modifier', context => new SkimlinksXcustModifier(context));

export const name = 'skimlinks-xcust-modifier';

export default SkimlinksXcustModifier;