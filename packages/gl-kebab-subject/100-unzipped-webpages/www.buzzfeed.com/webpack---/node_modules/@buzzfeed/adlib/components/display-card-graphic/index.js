import {
    Application
} from 't3js';
import {
    objectToQueryString
} from '@buzzfeed/bf-utils/lib/query-string';
import solid from '@buzzfeed/buzzblocks/js/services/solid/standalone';
import {
    AdFormat
} from '../../core/base';
import {
    ZONE1_BFNEWS
} from '../../core/constants';
import moduleTemplate from './index.html';
import cardTemplate from './display-card-template.html';
import storyTemplate from './display-card-story-template.html';
import newsCardTemplate from '../../skins/news/display-card-graphic.html';

/**
 * DFP template: https://www.google.com/dfp/6556#delivery/CreateNativeAdFormatAndStyle/nativeStyleId=120930&creativeTemplateId=11732784
 */

class AdDisplayCard extends AdFormat {
    get template() {
        if (/^story/.test(this.config.adPos)) {
            return storyTemplate;
        }
        if (this.skin === ZONE1_BFNEWS) {
            return newsCardTemplate;
        }
        return cardTemplate;
    }

    buildFormat() {
        super.buildFormat();
        this.rootElement.classList.add('card');

        if (this.isMp4) {
            this.initializeControls();
        }
    }

    getTemplateData() {
        const templateData = Object.assign({}, this.ad);
        const originalAssetImage = templateData.assetImage;
        let cdnQuery = {};

        templateData.adPos = this.config.adPos; // for bfa tracking

        if (solid.isAny(['xs', 'sm'])) {
            cdnQuery.downsize = '320:*';
            cdnQuery['resize-quality'] = 80;
        } else {
            cdnQuery.downsize = '400:*';
            cdnQuery['resize-quality'] = 90;
        }

        if (originalAssetImage.indexOf('.gif') >= 0) {
            cdnQuery['output-format'] = 'mp4';
            cdnQuery['resize-quality'] = 95;
            templateData.isMp4 = true;
            templateData.assetCover = `${originalAssetImage}?output-format=jpg&output-quality=90`;
            // preload this image in attempt to mitigate video stagger
            const cover = new Image();
            cover.src = templateData.assetCover;
            this.isMp4 = true;
            this.controlsInitialized = false;
        }

        templateData.assetImage = originalAssetImage + decodeURIComponent(objectToQueryString(cdnQuery));
        return templateData;
    }

    initializeControls() {
        if (this.controlsInitialized) {
            return;
        }
        this.controlsInitialized = true;
        this.videoEl = this.element.querySelector('.js-video-player');
        this.control = this.element.querySelector('.js-control');
        this.playIcon = this.control.querySelector('.js-icon-play');
        this.pauseIcon = this.control.querySelector('.js-icon-pause');
        // set listeners
        this.control.addEventListener('click', this.swapControlState);
        this.swapControlState('play');
    }

    swapControlState = (forceState = null) => {
        const vid = this.videoEl;
        if (vid.paused || forceState === 'play') {
            vid.play();
            this.playIcon.classList.add('js-hidden');
            this.pauseIcon.classList.remove('js-hidden');
            // a11y
            this.control.setAttribute('aria-label', 'Pause animation');
            this.playIcon.setAttribute('aria-hidden', true);
            this.pauseIcon.setAttribute('aria-hidden', false);
        } else if (!vid.paused || forceState === 'pause') {
            vid.pause();
            this.pauseIcon.classList.add('js-hidden');
            this.playIcon.classList.remove('js-hidden');
            // a11y
            this.control.setAttribute('aria-label', 'Play animation');
            this.playIcon.setAttribute('aria-hidden', false);
            this.pauseIcon.setAttribute('aria-hidden', true);
        }
    }

    destroy() {
        super.destroy();
        this.control.removeEventListener('click');
    }
}

// must be the same as `type` property of DFP event data
AdDisplayCard.formatType = 'display_card';
AdDisplayCard.moduleTemplate = moduleTemplate;

Application.addModule('ad-display-card', AdDisplayCard.generateModule());


export {
    AdDisplayCard
};