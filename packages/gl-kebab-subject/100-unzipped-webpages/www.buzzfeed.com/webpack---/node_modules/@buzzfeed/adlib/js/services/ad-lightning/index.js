import {
    loadScript
} from '@buzzfeed/bf-utils';
import abeagle from '@buzzfeed/buzzblocks/js/services/abeagle';
import bzfd from '../bzfd';
import {
    Disabled
} from '../../../core/error';


// namespace for easier testing
const util = {
    loadScript
};


const FEATURE_FLAG = 'ads_ad_lightning';

const LIB_ORIGIN = 'https://tagan.adlightning.com';
const LIB_PATH = 'op.js';

let _initializing;


export default {
    init() {
        if (_initializing) {
            return _initializing;
        }

        return _initializing = abeagle.isOn(FEATURE_FLAG)
            .then((isOn) => isOn ? Promise.resolve(true) : Promise.reject(new Disabled()))
            .then(() => {
                // we want to _default_ to prod if BZFD.Config.env is not available
                const environment = (bzfd.isDev || bzfd.isStage) ?
                    'buzzfeed-staging' :
                    'buzzfeed';
                return util.loadScript(`${LIB_ORIGIN}/${environment}/${LIB_PATH}`);
            })
            .catch((error) => {
                if (!(error instanceof Disabled)) {
                    console.error(error);
                    return Promise.reject(error);
                }
                return null;
            });
    }
};