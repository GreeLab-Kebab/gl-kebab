import localization from '@buzzfeed/buzzblocks/js/services/localization';
import solid from '@buzzfeed/buzzblocks/js/services/solid/standalone';
import bzfd from '../bzfd';

/*
 * NOTE: This will be loaded on various xpager services (e.g. feedpager, bpager etc.).
 * Ensure your isEligible function will fail safe!
 */
export const AD_TESTS = [
    /***** Permanent feature flags *****/
    /*
     * Please make sure to update the doc as you add/remove feature flags here
     * https://buzzfeed.atlassian.net/wiki/spaces/ADS/pages/302022731/Ads+feature+flags
     */
    {
        name: 'ads_scroll_subscription',
        variations: ['off', 'on'],
        isEligible: () => true
    },
    {
        name: 'ads_prebid',
        variations: ['off', 'on'],
        isEligible: () => true
    },
    {
        name: 'ads_amazon_tam',
        variations: ['off', 'on'],
        isEligible: () => true
    },
    {
        name: 'ads_ad_lightning',
        variations: ['off', 'on'],
        isEligible: () => true
    },
    {
        name: 'ads_adrizer',
        variations: ['off', 'on'],
        isEligible: () => true
    },
    {
        name: 'ads_moat',
        variations: ['off', 'on'],
        isEligible: () => true
    },
    {
        name: 'ads_adomik',
        variations: ['off', 'on'],
        isEligible: () => {
            return bzfd.localizationCountry === 'ja-jp';
        }
    },
    {
        name: 'ads_arbvark',
        variations: ['off', 'on'],
        isEligible: () => {
            return (document.location.search && document.location.search.match('arbvark'));
        }
    },
    /*{
      name: 'ads_bounce_x',
      variations: ['control', 'on'],
      isEligible: () => true
    },*/
    /***********************************/

    /**
     * PROGRAMMATIC INLINE AD Experiment / Levers
     * https://buzzfeed.atlassian.net/browse/ADSGROUP-501
     * 250 = high, 350 = medium (control), 450 = low
     */
    {
        name: 'ads_inline_density_bfo',
        variations: ['control', 'density-250', 'density-450'],
        isEligible: () => bzfd.isBPage && bzfd.isBFO
    },
    {
        name: 'ads_inline_density_bfnews',
        variations: ['control', 'density-250', 'density-450'],
        isEligible: () => bzfd.isBPage && bzfd.isBFN
    },
    /***** MISC AD TESTS *****/
    {
        name: 'moat_dfp_native_video_tracking',
        variations: ['off', 'on'],
        isEligible: () => true
    },
    {
        name: 'advertise_international',
        variations: ['off', 'on'],
        isEligible: () => {
            // https://buzzfeed.atlassian.net/browse/SITE-5417
            const edition = localization.getEdition({
                useCountryCookie: false
            });
            const hiddenEditions = [
                'pt-br', 'es', 'ja-jp', 'es-mx'
            ];
            return !hiddenEditions.includes(edition);
        },
    },
    {
        name: 'non_us_ad_lookahead_adjustments',
        variations: ['control', 'on'],
        isEligible: () => true
    },
    {
        name: 'ADSGROUP-408_bouncex_bpager',
        variations: ['off', 'on'],
        isEligible: () => bzfd.isBPage
    },
    {
        name: 'ADSGROUP-408_bouncex_feedpager',
        variations: ['off', 'on'],
        isEligible: () => bzfd.isFeedPage
    },
    {
        name: 'ADSGROUP-442-permutive',
        variations: ['off', 'on'],
        isEligible: () => true
    },
    {
        name: 'ADSGROUP-143_new_ad_calls_structure',
        variations: ['off', 'on'],
        isEligible: () => true
    },
    {
        name: 'ADS-1141-prefetch3',
        variations: ['control', 'early', 'late'],
        isEligible: () => solid.isAny(['xs', 'sm'])
    },
    {
        name: 'ADS-951-outbrain-popin',
        variations: ['control', 'popin'],
        isEligible: () => {
            return bzfd.isBPage && bzfd.isBFO && !bzfd.isAdPost() && bzfd.localizationCountry === 'ja-jp';
        }
    },
    {
        name: 'ADS-951-popin-links',
        variations: ['off', 'on'],
        isEligible: () => {
            return bzfd.isBPage && bzfd.isBFO && !bzfd.isAdPost() && bzfd.localizationCountry === 'ja-jp';
        }
    },
    {
        name: 'ADS-1351_promo-inline-display-cards',
        variations: ['control', 'displaycards'],
        isEligible: () => solid.isXsmall() && bzfd.isBFO
    },
    {
        name: 'ADS-1367_civicscience',
        variations: ['control', 'civicscience'],
        isEligible: () => bzfd.hasQuiz
    }
];


export default {
    get tests() {
        return AD_TESTS;
    },
};