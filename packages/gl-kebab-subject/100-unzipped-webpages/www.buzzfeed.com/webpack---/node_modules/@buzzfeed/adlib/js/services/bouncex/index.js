import {
    loadScript
} from '@buzzfeed/bf-utils';
import abeagle from '@buzzfeed/buzzblocks/js/services/abeagle';
import {
    Disabled
} from '../../../core/error';


// namespace for easier testing
const util = {
    loadScript
};


// @todo Create the feature flag in ABeagle if we decide to keep BounceX after the A/B test
const FEATURE_FLAG = 'ads_bounce_x';

const BOUNCEX_URL = 'https://tag.bounceexchange.com/2893/i.js';

let _initializing;


export default {
    init() {
        if (_initializing) {
            return _initializing;
        }

        // @todo Use the feature flag after the A/B test
        return _initializing = (Promise.resolve(true) || abeagle.isOn(FEATURE_FLAG))
            .then((isOn) => isOn ? Promise.resolve(true) : Promise.reject(new Disabled()))
            .then(() => {
                return Promise.all([
                        'ADSGROUP-408_bouncex_bpager',
                        'ADSGROUP-408_bouncex_feedpager'
                    ].map((experiment) => abeagle.getExperimentVariant(experiment, {
                        rejectErrors: false
                    })))
                    .then((variants) => {
                        if (!variants.some((variant) => variant === 'on')) {
                            return null;
                        }
                        return util.loadScript(BOUNCEX_URL);
                    });
            })
            .catch((error) => {
                if (!(error instanceof Disabled)) {
                    console.error(error);
                    return Promise.reject(error);
                }
                return null;
            });
    }
};