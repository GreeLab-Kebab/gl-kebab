"use strict";

function BFPageExitHandler(executable) {
    this.visibilityProps = {
        hidden: null,
        visibilityChange: null,
    };
    this.trackedByVisibility = false;
    this.trackedByUnload = false;

    var _this = this;

    this.init = function() {
        this.visibilityProps = this.getVisibilityProps();
        if (this.visibilityProps.hidden && this.visibilityProps.visibilityChange) {
            document.addEventListener(this.visibilityProps.visibilityChange, this.visibilityHandler, false);
        }
        window.addEventListener("beforeunload", this.unloadHandler, false);
        window.addEventListener("unload", this.unloadHandler, false);
        window.addEventListener("pagehide", this.unloadHandler, false);
    };

    this.visibilityHandler = function() {
        if (!document[_this.visibilityProps.hidden] && !_this.trackedByVisibility) {
            _this.trackedByVisibility = true;
            window[executable].apply(this, ["track/page/exit", ]);
        }
    };

    this.unloadHandler = function() {
        if (!_this.trackedByUnload) {
            _this.trackedByUnload = true;
            window[executable].apply(this, ["track/page/exit", ]);
        }
    };

    this.getVisibilityProps = function() {
        var hidden = null;
        var visibilityChange = null;

        if (typeof document.hidden !== "undefined") { // Opera 12.10 and Firefox 18 and later support
            hidden = "hidden";
            visibilityChange = "visibilitychange";
        } else if (typeof document.mozHidden !== "undefined") {
            hidden = "mozHidden";
            visibilityChange = "mozvisibilitychange";
        } else if (typeof document.msHidden !== "undefined") {
            hidden = "msHidden";
            visibilityChange = "msvisibilitychange";
        } else if (typeof document.webkitHidden !== "undefined") {
            hidden = "webkitHidden";
            visibilityChange = "webkitvisibilitychange";
        }

        return {
            hidden: hidden,
            visibilityChange: visibilityChange,
        };
    };
}

export default BFPageExitHandler;