import logger from "../common/bfa_logger.js";
import {
    isString,
} from "lodash";
/**
 * Logger tracker plugin
 * @module  plugins/logger
 * @requires plugins/generalSettings
 * @exports logger
 */

"use strict";

/**
 * @classdesc
 * Plugin which extends BFACore and Sandbox with logging functionality (log.info(msg), log.warn(msg), log.error(msg))
 * Set up configured common bfa_logger instance to BFACore log property.
 * Extends Core with:
 * createLogger - method which returns logger instance. logger name has to be specified as a first argument.
 * Extends Sandbox with:
 * log property - which contains logger instance.
 * @memberof module:plugins/logger
 * @param {BFACore} core - bfa core instance
 * @returns {{modifySBInstance: modifySBInstance}} - object with modifySBInstance method
 * @constructor
 */
function LoggerPlugin(core) {
    core.log = logger("BFACore", core._generalSettings.logLevel);
    core._router.log = core.log

    core.createLogger = function(loggerName) {
        if (!isString(loggerName) || loggerName === "") {
            core.log.error("core.createLogger: `loggerName` argument must be a not empty string");
        }
        return logger(loggerName, core._generalSettings.logLevel);
    };

    core.log.enabled = function(enabled) {
        return logger.enabled(enabled);
    };

    function generalSettingsChangeHandler(generalSettings) {
        if (generalSettings.mode === core.defs.bfaMode.develop || generalSettings.debug === true) {
            if (core.log.enabled() !== true) {
                core.log.enabled(true);
            }
        } else {
            if (core.log.enabled() === true) {
                core.log.enabled(false);
            }
        }
    }
    generalSettingsChangeHandler(core._generalSettings);
    core._onGeneralSettingsChange.add(generalSettingsChangeHandler, this);
    return {
        modifySBInstance: function(sandboxInstance) {
            sandboxInstance.log = logger(sandboxInstance.instanceId, core._generalSettings.logLevel);
        },
    };
}
LoggerPlugin.defaultId = "logger";
LoggerPlugin.require = ["generalSettings", ];

export default LoggerPlugin;