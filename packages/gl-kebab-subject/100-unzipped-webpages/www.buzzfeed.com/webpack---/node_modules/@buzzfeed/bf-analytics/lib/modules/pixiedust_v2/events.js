import ROUTES from "./routes";
import {
    applyLayers,
    userLayer,
    NoDLayer,
    formatLayer,
    unitLayer
} from "./layers";

export const event = ({
    route,
    mapper,
    layers,
    shouldTrack = () => true
}) => {
    const mapping = mapper.getOrCreateRouter(route).createConfigForRoute(shouldTrack);
    return applyLayers({
        mapping,
        layers
    });
};

export const pageView = ({
    layers = [],
    ...args
}) => {
    return event({
        route: ROUTES.pageview,
        layers: [
            userLayer({
                eventType: "pageview"
            }),
            NoDLayer,
            formatLayer,
            ...layers
        ],
        ...args
    });
};

export const webClick = ({
    layers = [],
    ...args
}) => {
    return event({
        route: ROUTES.click,
        layers: [
            userLayer({
                eventType: "click"
            }),
            NoDLayer,
            formatLayer,
            unitLayer,
            ...layers
        ],
        ...args
    });
};

export const webRightClick = ({
    layers = [],
    ...args
}) => {
    return event({
        route: ROUTES.rightClick,
        layers: [
            userLayer({
                eventType: "right_click",
                type: "web_click"
            }),
            NoDLayer,
            formatLayer,
            unitLayer,
            ...layers
        ],
        ...args
    });
};

export const webImpression = ({
    layers = [],
    ...args
}) => {
    return event({
        route: ROUTES.impression,
        layers: [
            userLayer({
                eventType: "impression"
            }),
            NoDLayer,
            formatLayer,
            unitLayer,
            ...layers
        ],
        ...args
    });
};

export const webScroll = ({
    layers = [],
    ...args
}) => {
    return event({
        route: ROUTES.scroll,
        layers: [
            userLayer({
                eventType: "scroll"
            }),
            NoDLayer,
            formatLayer,
            () => [
                ["pixel_depth", "data.pixel_depth"],
                ["marker", "data.marker"]
            ],
            ...layers
        ],
        ...args
    });
};