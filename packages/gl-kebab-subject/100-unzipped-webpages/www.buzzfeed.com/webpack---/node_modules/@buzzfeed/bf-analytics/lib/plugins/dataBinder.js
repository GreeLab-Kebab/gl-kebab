import {
    merge,
} from "lodash";
import BinderBuilder from "../common/binder/data_binder_builder.js";
import AttributeParser from "../common/binder/bf_attribute_parser.js";

/**
 * DataBinder plugin
 * @module  plugins/dataBinder
 * @requires plugins/domi
 * @exports dataBinder
 */

"use strict";

// To make BFA attribute parser available even before BFA binder initialized. Needed for DFP tags tracking on webapp
// and must be refactored or removed.
window.bfaBinder = {
    parser: new AttributeParser(),
};

/**
 * Plugin that allows usage of BFA Data-binder in the BFA core functionality.
 * Notice: the plugin requires activation by route 'plugin/binder/activate'
 * with the main BFA Function name for initialization.
 *
 * @memberof module:plugins/dataBinder
 * @public
 * @param {BFACore} core BFA core.
 * @param {object} initSettings - settings
 * @example <caption>Settings example</caption>
 *  { bfaFunctionName: null,
 *  domBinder: { delegatedMapping: null, directMapping: null },
 *  scrollBinder: {
 *    pixelMode: { enabled: false },
 *    elementMode: { enabled: false, element: "", expected: 0 },
 *    checkpoints: [],
 *    bottomBounds: [] },
 *  socialBinder: { facebookMapping: null } }
 *
 * @returns {{}} Returns empty function.
 *
 * @constructor
 */
function BinderPlugin(core, initSettings) {
    this.settings = initSettings || {};
    this._binderBuilder = new BinderBuilder();
    var _this = this;

    core._router.sub("plugin/binder/activate", function(settings) {
        merge(_this.settings, settings || {});
        merge(_this._binderBuilder.buildConfig, _this.settings);

        core.domi.onDomReady(function() {
            var binder = _this._binderBuilder.build();
            if (binder !== null) {
                window.bfaBinder = binder;
                core._router.sub("plugin/binder/trigger", window.bfaBinder.trigger.bind(window.bfaBinder));
            }
        });
    }, this, null, true);

    return {};
}

BinderPlugin.defaultId = "binder";
BinderPlugin.require = ["domi", ];
export default BinderPlugin;