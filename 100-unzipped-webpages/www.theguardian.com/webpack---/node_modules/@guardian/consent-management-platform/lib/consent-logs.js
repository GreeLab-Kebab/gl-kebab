"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var Cookies = require("js-cookie");
var consent_string_1 = require("consent-string");
var config_1 = require("./config");
var cookies_1 = require("./cookies");
var cmp_1 = require("./cmp");
var DUMMY_BROWSER_ID = "No bwid available";
exports.logConsent = function(_a) {
    var iabVendorList = _a.iabVendorList,
        allowedPurposes = _a.allowedPurposes,
        allowedVendors = _a.allowedVendors,
        isProd = _a.isProd;
    var consentLogsURL = isProd ?
        'https://consent-logs.guardianapis.com/report' :
        'https://consent-logs.code.dev-guardianapis.com/report';
    var consentData = new consent_string_1.ConsentString();
    consentData.setGlobalVendorList(iabVendorList);
    consentData.setCmpId(config_1.IAB_CMP_ID);
    consentData.setCmpVersion(config_1.IAB_CMP_VERSION);
    consentData.setConsentScreen(config_1.IAB_CONSENT_SCREEN);
    consentData.setConsentLanguage(config_1.IAB_CONSENT_LANGUAGE);
    consentData.setPurposesAllowed(allowedPurposes);
    consentData.setVendorsAllowed(allowedVendors);
    var consentStr = consentData.getConsentString();
    cookies_1.writeIabCookie(consentStr);
    var latestIabState = {
        1: consentData.isPurposeAllowed(1),
        2: consentData.isPurposeAllowed(2),
        3: consentData.isPurposeAllowed(3),
        4: consentData.isPurposeAllowed(4),
        5: consentData.isPurposeAllowed(5),
    };
    cmp_1.updateStateOnSave(latestIabState);
    var pAdvertising = Object.keys(latestIabState).every(function(id) {
        return latestIabState[parseInt(id, 10)] === true;
    });
    var browserID = Cookies.get('bwid') || DUMMY_BROWSER_ID;
    if (isProd && browserID === DUMMY_BROWSER_ID) {
        throw new Error("Error getting browserID in PROD");
    }
    var logInfo = {
        version: '1',
        iab: consentStr,
        source: 'www',
        purposes: {
            personalisedAdvertising: pAdvertising,
        },
        browserId: browserID,
        variant: 'CmpUiIab-variant',
    };
    return fetch(consentLogsURL, {
        method: 'POST',
        mode: 'cors',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(logInfo),
    });
};