import React from 'react';
import PropTypes from 'prop-types';

import {
    NamespaceConsumer,
    NamespaceShape,
    withNamespace
} from '@ux/namespace-component';

import shapes from './shapes';
import NotificationsEmpty from './list-empty';
import NotificationListItem from './list-item';

class NotificationList extends NamespaceConsumer {
    render() {
        const {
            failed,
            notifications,
            sso,
            messages,
            closeList
        } = this.props;

        function stopPropagation(e) {
            e.stopPropagation();
        }

        const classes = this.namespace('notifications-list', 'dropdown-menu');

        const closeIconClasses = this.namespace('notifications-close', 'close');

        return (
            // eslint-disable-next-line  jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions
            <
            div className = {
                classes
            }
            onClick = {
                stopPropagation
            } >
            <
            button className = {
                closeIconClasses
            }
            onClick = {
                closeList
            } > < /button> <
            h4 className = {
                this.namespace('notifications-list-header')
            } > {
                messages.headerText
            } <
            /h4> <
            ul className = {
                this.namespace('notifications-list-items')
            } > {
                notifications && notifications.length > 0 ? notifications.map((n, c) => {
                    return <NotificationListItem key = {
                        c
                    }
                    notification = {
                        n
                    }
                    />;
                }) :
                    < NotificationsEmpty failed = {
                    failed
                }
                messages = {
                    messages
                }
                sso = {
                    sso
                }
                />
            } <
            /ul> <
            /div>
        );
    }
}

NotificationList.propTypes = {
    ...NamespaceShape,
    sso: shapes.sso.isRequired,
    messages: shapes.messages.isRequired,
    notifications: PropTypes.arrayOf(shapes.notification),
    closeList: PropTypes.func,
    failed: PropTypes.bool
};

export default withNamespace(NotificationList);