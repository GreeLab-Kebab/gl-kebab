/* jscs:disable requireSpacesInsideJsxExpressionContainers */

import React from 'react';
import PropTypes from 'prop-types';
import {
    TrayTitle
} from '@ux/tray-menu';
import {
    golf
} from '../enums';
import eidBuilder from '../eid';
import {
    NamespaceConsumer,
    NamespaceShape,
    withNamespace
} from '@ux/namespace-component';
import {
    IntlProvider,
    FormattedMessage
} from 'react-intl';
import Vip from './vip';
import Link from '@ux/link';

/**
 * Render UserDetails in account tray after login.
 *
 * @Constructor
 * @class UserDetails
 * @api public
 */
class UserDetails extends NamespaceConsumer {
    constructor(props) {
        super(...arguments);

        this.eids = {
            proDashboard: eidBuilder({
                key: golf.proDashboard,
                manifest: props.manifest
            }),
            visitMyAccount: eidBuilder({
                key: golf.visitMyAccount,
                manifest: props.manifest
            }),
            manageAccount: eidBuilder({
                key: golf.manageAccount,
                manifest: props.manifest
            }),
            accountSettings: eidBuilder({
                key: golf.accountSettings,
                manifest: props.manifest
            }),
            viewPin: eidBuilder({
                key: golf.viewPin,
                manifest: props.manifest
            }),
            products: eidBuilder({
                key: golf.myProducts,
                manifest: props.manifest
            }),
            renewals: eidBuilder({
                key: golf.renewals,
                manifest: props.manifest
            }),
            logout: eidBuilder({
                key: golf.logout,
                manifest: props.manifest
            }),
            accountHome: eidBuilder({
                key: golf.accountHome,
                manifest: props.manifest
            })
        };
    }
    /**
     * Show link for pro dashboard only added if a user is pro
     *
     * @returns {React.Component} Component
     * @api private
     */
    renderPro() {
        const props = this.props;
        const eids = this.eids;

        if (props.loggedIn && props.isPro) {
            return ( <
                li >
                <
                Link urlArgs = {
                    props.urlArgs
                } { ...props.urls.pro
                }
                data - eid = {
                    eids.proDashboard
                } >
                <
                FormattedMessage id = {
                    golf.proDashboard
                }
                /> <
                /Link> <
                /li>
            );
        }
        return null;
    }

    /**
     * Render link to Account Home (i.e. Go overview) if the user is in the Go cohort
     *
     * @returns {React.Component} Component for the link
     * @private
     */
    renderMyAccountHome() {
        const {
            props,
            eids
        } = this;

        if (props.loggedIn && props.isInGoCohort && props.privateLabelId === 1) {
            return ( <
                li >
                <
                Link urlArgs = {
                    props.urlArgs
                } { ...props.urls.accountHome
                }
                data - eid = {
                    eids.accountHome
                } >
                <
                FormattedMessage id = {
                    golf.accountHome
                }
                /> <
                /Link> <
                /li>
            );
        }
        return null;
    }

    render() {
        const props = this.props;
        const eids = this.eids;

        if (!props.loggedIn) {
            return null;
        }

        return ( <
            IntlProvider locale = {
                props.market
            }
            messages = {
                props.messages
            } >
            <
            div className = {
                this.namespace('account-info', 'collapse', 'in')
            } >
            <
            TrayTitle >
            <
            Link urlArgs = {
                props.urlArgs
            } { ...props.urls.products
            }
            data - eid = {
                eids.manageAccount
            }
            className = {
                `${this.namespace('font-primary-bold', 'name')} ctHidden`
            } > { /* props.name is the full name (e.g. "Jane Doe") */ } {
                props.name
            } <
            /Link> <
            /TrayTitle>

            <
            div className = {
                this.namespace('customer-number')
            } >
            <
            strong > < FormattedMessage id = {
                golf.shopperid
            }
            /></strong >
            <
            span className = {
                `${this.namespace('shopper-id')} ctHidden`
            } > {
                props.shopperId
            }  |   < /span> <
            strong > < FormattedMessage id = {
                golf.pinLabel
            }
            /></strong >
            <
            Link urlArgs = {
                props.urlArgs
            } { ...props.urls.viewPin
            }
            data - eid = {
                eids.viewPin
            }
            className = {
                `${this.namespace('customer-pin')} ctHidden`
            } >
            <
            FormattedMessage id = {
                golf.viewPin
            }
            /> <
            /Link> <
            /div>

            <
            Vip details = {
                props.vip
            }
            market = {
                props.market
            }
            messages = {
                props.messages
            }
            />

            <
            ul className = {
                this.namespace('list-unstyled', 'quick-links')
            } > {
                this.renderPro()
            } {
                this.renderMyAccountHome()
            } <
            li >
            <
            Link urlArgs = {
                props.urlArgs
            } { ...props.urls.products
            }
            data - eid = {
                eids.products
            } >
            <
            FormattedMessage id = {
                golf.products
            }
            /> <
            /Link> <
            /li> <
            li >
            <
            Link urlArgs = {
                props.urlArgs
            } { ...props.urls.account
            }
            data - eid = {
                eids.accountSettings
            } >
            <
            FormattedMessage id = {
                golf.accountSettings
            }
            /> <
            /Link> <
            /li> <
            li >
            <
            Link urlArgs = {
                props.urlArgs
            } { ...props.urls.renewals
            }
            data - eid = {
                eids.renewals
            } >
            <
            FormattedMessage id = {
                golf.renewals
            }
            /> <
            /Link> <
            /li> <
            /ul>

            <
            Link urlArgs = {
                props.urlArgs
            } { ...props.urls.products
            }
            data - eid = {
                eids.visitMyAccount
            }
            className = {
                this.namespace('btn', 'btn-purchase')
            } >
            <
            FormattedMessage id = {
                golf.visitMyAccount
            }
            /> <
            /Link> <
            Link urlArgs = {
                props.urlArgs
            } { ...props.urls.sso.logout
            }
            data - eid = {
                eids.logout
            }
            className = {
                this.namespace('logout-link')
            } >
            <
            FormattedMessage id = {
                golf.logout
            }
            /> <
            /Link> <
            /div> <
            /IntlProvider>
        );
    }
}

/**
 * Property definitions.
 *
 * @type {Object}
 * @api public
 */
UserDetails.propTypes = {
    ...NamespaceShape,
    name: PropTypes.string,
    shopperId: PropTypes.string,
    loggedIn: PropTypes.bool,
    isPro: PropTypes.bool,
    isInGoCohort: PropTypes.bool,
    vip: PropTypes.object,
    market: PropTypes.string.isRequired,
    messages: PropTypes.object.isRequired,
    privateLabelId: PropTypes.number
};

export default withNamespace(UserDetails);