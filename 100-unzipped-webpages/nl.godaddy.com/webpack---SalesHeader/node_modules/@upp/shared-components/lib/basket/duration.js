'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
            }
        }
    }
    return target;
};

var _createClass = function() {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _intlFormatter = require('@godaddy/intl-formatter');

var _dropdown = require('@ux/dropdown');

var _dropdown2 = _interopRequireDefault(_dropdown);

var _multiyearPrice = require('./multiyearPrice');

var _multiyearPrice2 = _interopRequireDefault(_multiyearPrice);

var _namespaceComponent = require('@ux/namespace-component');

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

/**
 * Duration renders duration dropdown.
 * @class Duration
 * @constructor
 */
var Duration = function(_NamespaceConsumer) {
    _inherits(Duration, _NamespaceConsumer);

    function Duration(props) {
        _classCallCheck(this, Duration);

        /* istanbul ignore next */

        var _this = _possibleConstructorReturn(this, (Duration.__proto__ || Object.getPrototypeOf(Duration)).apply(this, arguments));

        _this.state = {
            selectedValue: props.selectedValue
        };

        _this.curr = new _intlFormatter.Currency();

        _this.onDropdownChange = _this.onDropdownChange.bind(_this);
        return _this;
    }

    /**
     * @method onDropdownChange
     * @param {Object} dropdownValue - value dropdown passes in
     * @returns {void}
     */


    _createClass(Duration, [{
        key: 'onDropdownChange',
        value: function onDropdownChange(dropdownValue) {
            var _props = this.props,
                onChange = _props.onChange,
                disabled = _props.disabled;


            if (!disabled) {
                this.setState({
                    selectedValue: dropdownValue.value
                });
                onChange(dropdownValue);
            }
        }
    }, {
        key: 'getItemLabel',
        value: function getItemLabel(duration, periodUnit) {
            var language = this.props.language;


            var itemLabel = language.term;
            if (language.itemEditor) {
                var singleText = language.itemEditor[periodUnit.toLowerCase()];
                var pluralText = language.itemEditor[periodUnit.toLowerCase() + 's'];

                itemLabel = duration === 1 ? singleText : pluralText;
            }

            return itemLabel;
        }

        /**
         * @method render
         * @returns {XML} Duration
         */

    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props2 = this.props,
                currency = _props2.currency,
                item = _props2.item,
                disabled = _props2.disabled,
                eid = _props2.eid,
                language = _props2.language,
                market = _props2.market,
                hideLabel = _props2.hideLabel,
                hidePrice = _props2.hidePrice;


            if (!item) {
                return null;
            }

            var periodUnit = item.periodUnit,
                _item$periodOptions = item.periodOptions,
                periodOptions = _item$periodOptions === undefined ? [] : _item$periodOptions,
                pricing = item.pricing;

            var durations = periodOptions.length > 0 ? periodOptions.map(function(i) {
                return i.period;
            }) : [];
            var unitPrice = pricing && pricing.unit ? pricing.unit.subtotal : 0;
            var label = this.getItemLabel(item.period, periodUnit);
            var periodUnitLabel = language['per' + periodUnit.charAt(0) + periodUnit.substr(1).toLowerCase()];
            var placeholder = this.state.selectedValue + ' ' + this.getItemLabel(this.state.selectedValue, periodUnit);
            var wrapperClasses = this.classNames({
                "editor-input-group": true,
                "disabled-text": disabled
            });

            return _react2.default.createElement(
                'div', {
                    className: wrapperClasses
                }, !hideLabel && _react2.default.createElement(
                    'div', {
                        className: this.namespace('editor-label h6')
                    },
                    label
                ),
                _react2.default.createElement(
                    'div', {
                        className: this.namespace('editor-left-col')
                    },
                    _react2.default.createElement(
                        _dropdown2.default, {
                            type: 'select',
                            enableFullscreen: false,
                            onChange: this.onDropdownChange,
                            placeholder: placeholder
                        },
                        durations.map(function(duration) {
                            return _react2.default.createElement(
                                _dropdown.DropdownItem, {
                                    key: duration,
                                    value: duration,
                                    'data-eid': eid + '.duration.drowpdown.select',
                                    disabled: disabled
                                },
                                ' ',
                                duration,
                                ' ',
                                _this2.getItemLabel(duration, periodUnit)
                            );
                        })
                    )
                ),
                _react2.default.createElement(
                    'div', {
                        className: this.namespace('editor-right-col')
                    }, !hidePrice && _react2.default.createElement(_multiyearPrice2.default, {
                        item: item,
                        currency: currency,
                        itemPricing: item.pricing,
                        market: market,
                        language: language
                    }), !hidePrice && unitPrice > 0 && this.curr.formatMicrounits(unitPrice, market, currency), !hidePrice && _react2.default.createElement(
                        'span', {
                            className: this.namespace('price-desc')
                        },
                        periodUnitLabel
                    )
                )
            );
        }
    }]);

    return Duration;
}(_namespaceComponent.NamespaceConsumer);

Duration.propTypes = _extends({}, _namespaceComponent.NamespaceShape, {
    currency: _propTypes2.default.string.isRequired,
    item: _propTypes2.default.object,
    onChange: _propTypes2.default.func.isRequired,
    disabled: _propTypes2.default.bool,
    selectedValue: _propTypes2.default.number,
    eid: _propTypes2.default.string,
    language: _propTypes2.default.object.isRequired,
    market: _propTypes2.default.string.isRequired,
    hideLabel: _propTypes2.default.bool,
    hidePrice: _propTypes2.default.bool
});

exports.default = (0, _namespaceComponent.withNamespace)(Duration);