"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
/*!
 * All equations are adapted from Thomas Fuchs'
 * [Scripty2](https://github.com/madrobby/scripty2/blob/master/src/effects/transitions/penner.js).
 *
 * Based on Easing Equations (c) 2003 [Robert
 * Penner](http://www.robertpenner.com/), all rights reserved. This work is
 * [subject to terms](http://www.robertpenner.com/easing_terms_of_use.html).
 */

/*!
 *  TERMS OF USE - EASING EQUATIONS
 *  Open source under the BSD License.
 *  Easing Equations (c) 2003 Robert Penner, all rights reserved.
 */
var linear = exports.linear = function linear(pos) {
    return pos;
};

var easeInQuad = exports.easeInQuad = function easeInQuad(pos) {
    return Math.pow(pos, 2);
};

var easeOutQuad = exports.easeOutQuad = function easeOutQuad(pos) {
    return -(Math.pow(pos - 1, 2) - 1);
};

var easeInOutQuad = exports.easeInOutQuad = function easeInOutQuad(pos) {
    return (pos /= 0.5) < 1 ? 0.5 * Math.pow(pos, 2) : -0.5 * ((pos -= 2) * pos - 2);
};

var easeInCubic = exports.easeInCubic = function easeInCubic(pos) {
    return Math.pow(pos, 3);
};

var easeOutCubic = exports.easeOutCubic = function easeOutCubic(pos) {
    return Math.pow(pos - 1, 3) + 1;
};

var easeInOutCubic = exports.easeInOutCubic = function easeInOutCubic(pos) {
    return (pos /= 0.5) < 1 ? 0.5 * Math.pow(pos, 3) : 0.5 * (Math.pow(pos - 2, 3) + 2);
};

var easeInQuart = exports.easeInQuart = function easeInQuart(pos) {
    return Math.pow(pos, 4);
};

var easeOutQuart = exports.easeOutQuart = function easeOutQuart(pos) {
    return -(Math.pow(pos - 1, 4) - 1);
};

var easeInOutQuart = exports.easeInOutQuart = function easeInOutQuart(pos) {
    return (pos /= 0.5) < 1 ? 0.5 * Math.pow(pos, 4) : -0.5 * ((pos -= 2) * Math.pow(pos, 3) - 2);
};

var easeInQuint = exports.easeInQuint = function easeInQuint(pos) {
    return Math.pow(pos, 5);
};

var easeOutQuint = exports.easeOutQuint = function easeOutQuint(pos) {
    return Math.pow(pos - 1, 5) + 1;
};

var easeInOutQuint = exports.easeInOutQuint = function easeInOutQuint(pos) {
    return (pos /= 0.5) < 1 ? 0.5 * Math.pow(pos, 5) : 0.5 * (Math.pow(pos - 2, 5) + 2);
};

var easeInSine = exports.easeInSine = function easeInSine(pos) {
    return -Math.cos(pos * (Math.PI / 2)) + 1;
};

var easeOutSine = exports.easeOutSine = function easeOutSine(pos) {
    return Math.sin(pos * (Math.PI / 2));
};

var easeInOutSine = exports.easeInOutSine = function easeInOutSine(pos) {
    return -0.5 * (Math.cos(Math.PI * pos) - 1);
};

var easeInExpo = exports.easeInExpo = function easeInExpo(pos) {
    return pos === 0 ? 0 : Math.pow(2, 10 * (pos - 1));
};

var easeOutExpo = exports.easeOutExpo = function easeOutExpo(pos) {
    return pos === 1 ? 1 : -Math.pow(2, -10 * pos) + 1;
};

var easeInOutExpo = exports.easeInOutExpo = function easeInOutExpo(pos) {
    if (pos === 0) {
        return 0;
    }

    if (pos === 1) {
        return 1;
    }

    if ((pos /= 0.5) < 1) {
        return 0.5 * Math.pow(2, 10 * (pos - 1));
    }

    return 0.5 * (-Math.pow(2, -10 * --pos) + 2);
};

var easeInCirc = exports.easeInCirc = function easeInCirc(pos) {
    return -(Math.sqrt(1 - pos * pos) - 1);
};

var easeOutCirc = exports.easeOutCirc = function easeOutCirc(pos) {
    return Math.sqrt(1 - Math.pow(pos - 1, 2));
};

var easeInOutCirc = exports.easeInOutCirc = function easeInOutCirc(pos) {
    return (pos /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - pos * pos) - 1) : 0.5 * (Math.sqrt(1 - (pos -= 2) * pos) + 1);
};

var easeOutBounce = exports.easeOutBounce = function easeOutBounce(pos) {
    if (pos < 1 / 2.75) {
        return 7.5625 * pos * pos;
    } else if (pos < 2 / 2.75) {
        return 7.5625 * (pos -= 1.5 / 2.75) * pos + 0.75;
    } else if (pos < 2.5 / 2.75) {
        return 7.5625 * (pos -= 2.25 / 2.75) * pos + 0.9375;
    } else {
        return 7.5625 * (pos -= 2.625 / 2.75) * pos + 0.984375;
    }
};

var easeInBack = exports.easeInBack = function easeInBack(pos) {
    var s = 1.70158;
    return pos * pos * ((s + 1) * pos - s);
};

var easeOutBack = exports.easeOutBack = function easeOutBack(pos) {
    var s = 1.70158;
    return (pos = pos - 1) * pos * ((s + 1) * pos + s) + 1;
};

var easeInOutBack = exports.easeInOutBack = function easeInOutBack(pos) {
    var s = 1.70158;
    if ((pos /= 0.5) < 1) {
        return 0.5 * (pos * pos * (((s *= 1.525) + 1) * pos - s));
    }
    return 0.5 * ((pos -= 2) * pos * (((s *= 1.525) + 1) * pos + s) + 2);
};

var elastic = exports.elastic = function elastic(pos) {
    return -1 * Math.pow(4, -8 * pos) * Math.sin((pos * 6 - 1) * (2 * Math.PI) / 2) + 1;
};

var swingFromTo = exports.swingFromTo = function swingFromTo(pos) {
    var s = 1.70158;
    return (pos /= 0.5) < 1 ? 0.5 * (pos * pos * (((s *= 1.525) + 1) * pos - s)) : 0.5 * ((pos -= 2) * pos * (((s *= 1.525) + 1) * pos + s) + 2);
};

var swingFrom = exports.swingFrom = function swingFrom(pos) {
    var s = 1.70158;
    return pos * pos * ((s + 1) * pos - s);
};

var swingTo = exports.swingTo = function swingTo(pos) {
    var s = 1.70158;
    return (pos -= 1) * pos * ((s + 1) * pos + s) + 1;
};

var bounce = exports.bounce = function bounce(pos) {
    if (pos < 1 / 2.75) {
        return 7.5625 * pos * pos;
    } else if (pos < 2 / 2.75) {
        return 7.5625 * (pos -= 1.5 / 2.75) * pos + 0.75;
    } else if (pos < 2.5 / 2.75) {
        return 7.5625 * (pos -= 2.25 / 2.75) * pos + 0.9375;
    } else {
        return 7.5625 * (pos -= 2.625 / 2.75) * pos + 0.984375;
    }
};

var bouncePast = exports.bouncePast = function bouncePast(pos) {
    if (pos < 1 / 2.75) {
        return 7.5625 * pos * pos;
    } else if (pos < 2 / 2.75) {
        return 2 - (7.5625 * (pos -= 1.5 / 2.75) * pos + 0.75);
    } else if (pos < 2.5 / 2.75) {
        return 2 - (7.5625 * (pos -= 2.25 / 2.75) * pos + 0.9375);
    } else {
        return 2 - (7.5625 * (pos -= 2.625 / 2.75) * pos + 0.984375);
    }
};

var easeFromTo = exports.easeFromTo = function easeFromTo(pos) {
    return (pos /= 0.5) < 1 ? 0.5 * Math.pow(pos, 4) : -0.5 * ((pos -= 2) * Math.pow(pos, 3) - 2);
};

var easeFrom = exports.easeFrom = function easeFrom(pos) {
    return Math.pow(pos, 4);
};

var easeTo = exports.easeTo = function easeTo(pos) {
    return Math.pow(pos, 0.25);
};


// WEBPACK FOOTER //
// ./node_modules/@godaddy/shifty/easing-functions.js