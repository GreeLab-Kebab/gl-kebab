'use strict';

var environmentHelper = require('./environment');
var browserHelper = require('./browser');
var object = require('./object');

function _logInit() {
    var _arguments = arguments;

    var console = browserHelper.getWindow().console;
    if (!environmentHelper.isProduction() && console && console.log) {
        if (Function.prototype.bind) {
            return Function.prototype.bind.call(console.log, console);
        }
        return function() {
            Function.prototype.apply.call(console.log, console, _arguments);
        };
    }
    return function() {};
}

var log = _logInit();

function debug() {
    if (environmentHelper.isDebug()) {
        log.apply(null, arguments);
    }
}

function _errorInit() {
    var _arguments2 = arguments;

    var console = browserHelper.getWindow().console;
    if (!environmentHelper.isProduction() && console && console.error) {
        if (Function.prototype.bind) {
            return Function.prototype.bind.call(console.error, console);
        }
        return function() {
            Function.prototype.apply.call(console.error, console, _arguments2);
        };
    }
    return function() {};
}

var error = _errorInit();

var internalExports = {};
if (process.env.NODE_ENV !== 'production') {
    internalExports = {
        _logInit: _logInit,
        _errorInit: _errorInit
    };
}

module.exports = object.merge({
    log: log,
    debug: debug,
    info: log,
    error: error
}, internalExports);