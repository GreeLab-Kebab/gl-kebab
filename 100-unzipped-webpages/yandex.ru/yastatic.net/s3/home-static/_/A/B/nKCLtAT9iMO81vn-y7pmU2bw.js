home.loadManager.subscribe('suggest', function() {
    if (window.Ya && Ya.Rum) {
        Ya.Rum.sendTimeMark('2095.2154');
    }
    window.home = window.home || {}, home.bundles = home.bundles || {}, home.bundles.staticURL = home.bundles.staticURL || {}, home.bundles.staticURL.stream = {
        js: '//yastatic.net/s3/home-static/_/b/h/1dWDQg8j-6OEvW-ibened5q3M.js',
        css: '//yastatic.net/s3/home-static/_/m/5/XyZbc_X7p-6X-mqHocw4Byp8A.css',
        'js.gen': '//yastatic.net/s3/home-static/_/i/X/e7GsXHZ5k5LfGfMZHL3-VKztA.js',
        'css.gen': '//yastatic.net/s3/home-static/_/m/5/XyZbc_X7p-6X-mqHocw4Byp8A.css'
    }, home.bundles.staticURL.timeshift = {
        js: '//yastatic.net/s3/home-static/_/j/_/7kkecDma4LGYNJDWcdPWQviU4.js',
        css: '//yastatic.net/s3/home-static/_/3/W/vJM8Pomob5xa2jP_M9a1Kj2B8.css',
        'js.gen': '//yastatic.net/s3/home-static/_/V/f/0xjBWN_cxo9CzQOelfzzEvmUY.js',
        'css.gen': '//yastatic.net/s3/home-static/_/3/W/vJM8Pomob5xa2jP_M9a1Kj2B8.css'
    }, home.bundles.staticURL['direct-touch-modern'] = {
        js: '//yastatic.net/s3/home-static/_/K/F/M1xwtuuNIJwdwJ0B0gjVwnUFQ.js',
        css: '//yastatic.net/s3/home-static/_/4/W/n2SOLUq0pqjfesD0NX8PlIux8.css',
        'js.gen': '//yastatic.net/s3/home-static/_/q/o/VaTvfI4Dj_5hI6yCh3EBaVpVs.js',
        'css.gen': '//yastatic.net/s3/home-static/_/V/0/AkTSuGjBZ9xalKSubYrJYKdKI.css'
    }, home.bundles.staticURL['direct-touch-feed_refresh'] = {
        js: '//yastatic.net/s3/home-static/_/5/3/Zt7Nb7wnfSfHO6JWDz55mm4Pg.js',
        css: '//yastatic.net/s3/home-static/_/I/8/pvsazrU_MCSW0hFwpAPLs8zPA.css',
        'js.gen': '//yastatic.net/s3/home-static/_/x/S/ps59jyGKXEUowbimcbEfZe1OY.js',
        'css.gen': '//yastatic.net/s3/home-static/_/I/8/pvsazrU_MCSW0hFwpAPLs8zPA.css'
    }, home.bundles.staticURL['direct-touch-scene'] = {
        js: '//yastatic.net/s3/home-static/_/I/P/w_RzxMoSVLu9FQ6WSTEPVBRZI.js',
        css: '//yastatic.net/s3/home-static/_/1/P/jlHhefniLn5QuGuloReFoAMnk.css',
        'js.gen': '//yastatic.net/s3/home-static/_/C/C/iUnSB_H86HQYrQR3pId8id_BQ.js',
        'css.gen': '//yastatic.net/s3/home-static/_/S/d/b39gEBmPu6XQx5XZA428EhoFw.css'
    }, home.bundles.staticURL['direct-touch-gradient'] = {
        js: '//yastatic.net/s3/home-static/_/6/F/wFhXjYXhZNC8pR5n6Xc0VLL-g.js',
        css: '//yastatic.net/s3/home-static/_/c/-/LOQjHImH8ix3JMGA1ddpEb56s.css',
        'js.gen': '//yastatic.net/s3/home-static/_/R/r/ptey7PM6RFIWqY2oUWA04IO2E.js',
        'css.gen': '//yastatic.net/s3/home-static/_/6/m/JRRciFk3xuPPD4MFSXTDgpQbI.css'
    }, home.bundles.staticURL.afisha2 = {
        js: '//yastatic.net/s3/home-static/_/h/J/IVrHVIG7BZPWODgNytcmc1O_s.js',
        css: '//yastatic.net/s3/home-static/_/N/g/Rx5oNu-sZ97jeFWg1FK4p3JsU.css',
        'js.gen': '//yastatic.net/s3/home-static/_/3/w/19pGJOIYBTAt_PXgYxDcqCVzs.js',
        'css.gen': '//yastatic.net/s3/home-static/_/N/g/Rx5oNu-sZ97jeFWg1FK4p3JsU.css'
    }, home.bundles.staticURL['the-feed'] = {
        js: '//yastatic.net/s3/home-static/_/c/r/EYa70OyjlKYYIzKvMiDSVim3g.js',
        css: '//yastatic.net/s3/home-static/_/T/v/tDKEgbUEB0YmUreVu2smPLvj4.css',
        'js.gen': '//yastatic.net/s3/home-static/_/7/j/GERdm1LrmCP_e5N7RKX952g54.js',
        'css.gen': '//yastatic.net/s3/home-static/_/T/v/tDKEgbUEB0YmUreVu2smPLvj4.css'
    }, home.bundles.staticURL['zen-lib'] = {
        js: '//yastatic.net/s3/home-static/_/d/W/p-wQ4EWjvTuRmLYpLfTK4hJy4.js',
        css: '//yastatic.net/s3/home-static/_/Y/W/rwgzJyd9SUgLxri_i2tYIPQXE.css',
        'js.gen': '//yastatic.net/s3/home-static/_/3/F/GEsrWWJunaKz42ixz-xsSy1gw.js',
        'css.gen': '//yastatic.net/s3/home-static/_/Y/W/rwgzJyd9SUgLxri_i2tYIPQXE.css'
    }, home.bundles.staticURL.collections2 = {
        js: '//yastatic.net/s3/home-static/_/8/S/FV3_4L8jmj_mLlprE5lNnk0T4.js',
        css: '//yastatic.net/s3/home-static/_/5/g/4Tv1Ka3i93RZXww6suMzmpYQo.css',
        'js.gen': '//yastatic.net/s3/home-static/_/s/T/FcHbfWjFnPQ85Q6CWX-yvXXUI.js',
        'css.gen': '//yastatic.net/s3/home-static/_/5/g/4Tv1Ka3i93RZXww6suMzmpYQo.css'
    }, home.bundles.staticURL['geo-collections'] = {
        js: '//yastatic.net/s3/home-static/_/L/U/NMBc7Cu1EPMdsWw7ERd2T85k0.js',
        css: '//yastatic.net/s3/home-static/_/C/J/3G0xTTjfSrJHthI91TiVQzzSY.css',
        'js.gen': '//yastatic.net/s3/home-static/_/_/9/D_ECywuke64bO54pbosT0MO-8.js',
        'css.gen': '//yastatic.net/s3/home-static/_/C/J/3G0xTTjfSrJHthI91TiVQzzSY.css'
    };
    var bundle = function(t) {
        var e;
        ! function(t) {
            var e = function() {
                    return '_';
                }.toString().indexOf('_') > -1,
                i = function() {},
                n = Object.create || function(t) {
                    var e = function() {};
                    return e.prototype = t, new e();
                },
                o = Object.keys,
                s = t.extend,
                r = Array.isArray,
                a = t.isFunction,
                c = !0,
                h = {
                    toString: ''
                };
            for (var l in h) h.hasOwnProperty(l) && (c = !1);
            var u = c ? ['toString', 'valueOf'] : null;

            function d(i, n, s) {
                for (var r, h, l = function(t) {
                        var e = o(t);
                        if (c)
                            for (var i, n = 0; i = u[n++];) t.hasOwnProperty(i) && e.push(i);
                        return e;
                    }(s), d = 0, m = l.length; d < m;) '__self' !== (r = l[d++]) && (h = s[r], a(h) && (!e || h.toString().indexOf('.__base') > -1) ? n[r] = function(e, o) {
                    var s = function() {
                        var t = this.__base;
                        this.__base = s.__base;
                        var e = o.apply(this, arguments);
                        return this.__base = t, e;
                    };
                    return s.__base = i[e] || ('__constructor' === e ? n.__self.__parent : t.noop), s;
                }(r, h) : n[r] = h);
            }

            function m(e, i) {
                for (var n, o = 1; n = e[o++];) i ? a(n) ? t.inheritSelf(i, n.prototype, n) : t.inheritSelf(i, n) : i = a(n) ? t.inherit(e[0], n.prototype, n) : t.inherit(e[0], n);
                return i || e[0];
            }
            t.inherit = function() {
                var t = arguments,
                    e = r(t[0]),
                    o = e || a(t[0]),
                    c = o ? e ? m(t[0]) : t[0] : i,
                    h = t[o ? 1 : 0] || {},
                    l = t[o ? 2 : 1],
                    u = h.__constructor || o && c.prototype.__constructor ? function() {
                        return this.__constructor.apply(this, arguments);
                    } : o ? function() {
                        return c.apply(this, arguments);
                    } : function() {};
                if (!o) return u.prototype = h, u.prototype.__self = u.prototype.constructor = u, s(u, l);
                s(u, c), u.__parent = c;
                var f = c.prototype,
                    p = u.prototype = n(f);
                return p.__self = p.constructor = u, h && d(f, p, h), l && d(c, u, l), u;
            }, t.inheritSelf = function() {
                var t = arguments,
                    e = r(t[0]) ? m(t[0], t[0][0]) : t[0],
                    i = t[1],
                    n = t[2],
                    o = e.prototype;
                return i && d(o, o, i), n && d(e, e, n), e;
            }, t.inherit.self = t.inheritSelf;
        }(jQuery),
        function(t) {
            var e = 0,
                i = '__' + Number(new Date()),
                n = function() {
                    return 'uniq' + ++e;
                };
            t.identify = function(t, e) {
                if (!t) return n();
                var o = 'uniqueID' in t ? 'uniqueID' : i;
                return e || o in t ? t[o] : t[o] = n();
            };
        }(jQuery),
        function(t) {
            var e = '__' + Number(new Date()) + 'storage',
                i = function(e, i) {
                    return t.identify(e) + (i ? t.identify(i) : '');
                },
                n = {
                    buildEventName: function(t) {
                        return t;
                    },
                    on: function(n, o, s, r, a) {
                        if ('string' == typeof n) {
                            t.isFunction(o) && (r = s, s = o, o = undefined);
                            for (var c, h = i(s, r), l = this[e] || (this[e] = {}), u = n.split(' '), d = 0; n = u[d++];)
                                if (!(h in (c = l[n = this.buildEventName(n)] || (l[n] = {
                                        ids: {},
                                        list: {}
                                    })).ids)) {
                                    var m = c.list,
                                        f = {
                                            fn: s,
                                            data: o,
                                            ctx: r,
                                            special: a
                                        };
                                    m.last ? (m.last.next = f, f.prev = m.last) : m.first = f, c.ids[h] = m.last = f;
                                }
                        } else {
                            var p = this;
                            t.each(n, function(t, e) {
                                p.on(t, e, o, a);
                            });
                        }
                        return this;
                    },
                    onFirst: function(t, e, i, n) {
                        return this.on(t, e, i, n, {
                            one: !0
                        });
                    },
                    un: function(n, o, s) {
                        if ('string' == typeof n || void 0 === n) {
                            var r = this[e];
                            if (r)
                                if (n) {
                                    for (var a, c = n.split(' '), h = 0; n = c[h++];)
                                        if (a = r[n = this.buildEventName(n)])
                                            if (o) {
                                                var l = i(o, s),
                                                    u = a.ids;
                                                if (l in u) {
                                                    var d = a.list,
                                                        m = u[l],
                                                        f = m.prev,
                                                        p = m.next;
                                                    f ? f.next = p : m === d.first && (d.first = p), p ? p.prev = f : m === d.last && (d.last = f), delete u[l];
                                                }
                                            } else delete this[e][n];
                                } else delete this[e];
                        } else {
                            var _ = this;
                            s = o, t.each(n, function(t, e) {
                                _.un(t, e, s);
                            });
                        }
                        return this;
                    },
                    trigger: function(i, n) {
                        var o = this[e],
                            s = 'string' == typeof i,
                            r = s ? i : i.type,
                            a = this.buildEventName(r);
                        if (s || (i.type = a, i.target || (i.target = this)), o && (o = o[a])) {
                            var c, h = o.list.first;
                            for (h && s && ((i = t.Event(a)).target = this); h;) i.data = h.data, void 0 !== (c = h.fn.call(h.ctx || this, i, n)) && (i.result = c, !1 === c && (i.preventDefault(), i.stopPropagation())), h.special && h.special.one && this.un(r, h.fn, h.ctx), h = h.next;
                        }
                        return this;
                    }
                };
            t.observable = t.inherit(n, n);
        }(jQuery), e = Array.prototype.slice, Function.prototype.bind || (Function.prototype.bind = function(t) {
                var i = this,
                    n = e.call(arguments, 1);
                return function() {
                    return i.apply(t, n.concat(e.call(arguments)));
                };
            }),
            function(t, e) {
                var i = [],
                    n = t.inherit,
                    o = t.isFunction,
                    s = Function.prototype.call.bind(Object.prototype.hasOwnProperty),
                    r = {},
                    a = {};

                function c(t, e, i) {
                    return (t ? '__elem_' + t : '') + '__mod' + (e ? '_' + e : '') + (i ? '_' + i : '');
                }

                function h(t, e, i) {
                    var n, r, a;
                    if (o(t)) e[c(i, '*', '*')] = t;
                    else
                        for (n in t)
                            if (s(t, n))
                                if (a = t[n], o(a)) e[c(i, n, '*')] = a;
                                else
                                    for (r in a) s(a, r) && (e[c(i, n, r)] = a[r]);
                }

                function l(t) {
                    var e;
                    if (t.onSetMod && (h(t.onSetMod, t), delete t.onSetMod), t.onElemSetMod) {
                        for (e in t.onElemSetMod) s(t.onElemSetMod, e) && h(t.onElemSetMod[e], t, e);
                        delete t.onElemSetMod;
                    }
                }
                this.BEM = n(t.observable, {
                    __constructor: function(t, e, i) {
                        var n = this;
                        n._modCache = t || {}, n._processingMods = {}, n._params = e, n.params = null, !1 !== i ? n._init() : n.afterCurrentEvent(function() {
                            n._init();
                        });
                    },
                    _init: function() {
                        return this._initing || this.hasMod('js', 'inited') || (this._initing = !0, this.params || (this.params = t.extend(this.getDefaultParams(), this._params), delete this._params), this.setMod('js', 'inited'), delete this._initing, this.hasMod('js', 'inited') && this.trigger('init')), this;
                    },
                    changeThis: function(t, e) {
                        return t.bind(e || this);
                    },
                    afterCurrentEvent: function(t, e) {
                        this.__self.afterCurrentEvent(t.bind(e || this));
                    },
                    on: function(e, i, n, o) {
                        return 'object' == typeof e && (t.isFunction(i) || t.isFunction(n)) && (e = this.__self._buildModEventName(e)), this.__base.apply(this, arguments);
                    },
                    un: function(e, i, n) {
                        return 'object' == typeof e && t.isFunction(i) && (e = this.__self._buildModEventName(e)), this.__base.apply(this, arguments);
                    },
                    trigger: function(e, i) {
                        var n = !0;
                        return 'object' != typeof e || e instanceof t.Event || (n = 'js' === e.modName || this.hasMod('js'), e = this.__self._buildModEventName(e)), n && (this.__base(e = this.buildEvent(e), i), this._trigger(e, i)), this;
                    },
                    _trigger: function(t, e) {
                        this.__self.trigger(t, e);
                    },
                    buildEvent: function(e) {
                        return 'string' == typeof e && (e = t.Event(e)), e.block = this, e;
                    },
                    hasMod: function(t, e, i) {
                        var n = arguments.length,
                            o = !1;
                        1 == n ? (i = '', e = t, t = void 0, o = !0) : 2 == n && ('string' == typeof t ? (i = e, e = t, t = void 0) : (i = '', o = !0));
                        var s = this.getMod(t, e) === i;
                        return o ? !s : s;
                    },
                    getMod: function(t, e) {
                        var i = typeof t;
                        if ('string' === i || 'undefined' === i) {
                            e = t || e;
                            var n = this._modCache;
                            return e in n ? n[e] : n[e] = this._extractModVal(e);
                        }
                        return this._getElemMod(e, t);
                    },
                    _getElemMod: function(t, e, i) {
                        return this._extractModVal(t, e, i);
                    },
                    getMods: function(t) {
                        var e = t && 'string' != typeof t,
                            i = this._modCache,
                            n = [].slice.call(arguments, e ? 1 : 0);
                        return n.length ? n.reduce(function(t, e) {
                            return e in i && (t[e] = i[e]), t;
                        }, {}) : i;
                    },
                    setMod: function(e, i, n) {
                        void 0 === n && ('string' == typeof e ? (n = void 0 === i || i, i = e, e = void 0) : n = !0);
                        var o = this;
                        if (!e || e[0]) {
                            !1 === n || null === n ? n = '' : !0 !== n && (n = n.toString());
                            var s = (e && e[0] ? t.identify(e[0]) : '') + '_' + i;
                            if (this._processingMods[s]) return o;
                            var r, a = e ? o._getElemMod(i, e, r = o.__self._extractElemNameFrom(e)) : o.getMod(i);
                            if (a === n) return o;
                            this._processingMods[s] = !0;
                            var c = !0,
                                h = [i, n, a];
                            e && h.unshift(e), [
                                ['*', '*'],
                                [i, '*'],
                                [i, n]
                            ].forEach(function(t) {
                                c = !1 !== o._callModFn(r, t[0], t[1], h) && c;
                            }), !e && c && (o._modCache[i] = n), c && o._afterSetMod(i, n, a, e, r), delete this._processingMods[s];
                        }
                        return o;
                    },
                    _afterSetMod: function(t, e, i, n, o) {
                        var s = {
                            modName: t,
                            modVal: e,
                            oldModVal: i
                        };
                        n && (s.elem = n), this.trigger({
                            modName: t,
                            modVal: '*',
                            elem: o
                        }, s).trigger({
                            modName: t,
                            modVal: e,
                            elem: o
                        }, s);
                    },
                    toggleMod: function(t, e, i, n, o) {
                        'string' == typeof t && (o = n, n = i, i = e, e = t, t = void 0), void 0 === n ? n = '' : 'boolean' == typeof n && (o = n, n = '');
                        var s = this.getMod(t, e);
                        return (s == i || s == n) && this.setMod(t, e, 'boolean' == typeof o ? o ? i : n : this.hasMod(t, e, i) ? n : i), this;
                    },
                    delMod: function(t, e) {
                        return e || (e = t, t = void 0), this.setMod(t, e, '');
                    },
                    _callModFn: function(t, e, i, n) {
                        var o = c(t, e, i);
                        return this[o] ? this[o].apply(this, n) : void 0;
                    },
                    _extractModVal: function(t, e) {
                        return '';
                    },
                    channel: function(t, e) {
                        return this.__self.channel(t, e);
                    },
                    getDefaultParams: function() {
                        return {};
                    },
                    del: function(t) {
                        var e = [].slice.call(arguments);
                        return 'string' == typeof t && e.unshift(this), this.__self.del.apply(this.__self, e), this;
                    },
                    destruct: function() {
                        var t = {
                            modName: 'js',
                            modVal: '',
                            oldModVal: 'inited'
                        };
                        this.trigger({
                            modName: t.modName,
                            modVal: t.modVal
                        }, t);
                    }
                }, t.extend(this.BEM, {
                    _name: 'i-bem',
                    blocks: r,
                    decl: function(e, i, s) {
                        'string' == typeof e ? e = {
                            block: e
                        } : e.name && (e.block = e.name), l(i || (i = {}));
                        var a, c, h = r[e.baseBlock || e.block] || this;
                        if (e.modName) {
                            var u = (a = e.modName, (c = e.modVal) ? Array.isArray(c) ? function(t) {
                                for (var e = 0, i = c.length; e < i;)
                                    if (t.hasMod(a, c[e++])) return !0;
                                return !1;
                            } : function(t) {
                                return t.hasMod(a, c);
                            } : function(t) {
                                return t.hasMod(a);
                            });
                            t.each(i, function(t, e) {
                                o(e) && (i[t] = function() {
                                    var n;
                                    if (u(this)) n = e;
                                    else {
                                        var o = h.prototype[t];
                                        o && o !== i[t] && (n = this.__base);
                                    }
                                    return n ? n.apply(this, arguments) : void 0;
                                });
                            });
                        }
                        if (s && 'boolean' == typeof s.live) {
                            var d = s.live;
                            s.live = function() {
                                return d;
                            };
                        }
                        var m, f = h;
                        return e.baseMix && (f = [f], e.baseMix.forEach(function(t) {
                            f.push(r[t]);
                        })), e.block == h._name ? (m = n.self(f, i, s))._processLive(!0) : ((m = r[e.block] = n(f, i, s))._name = e.block, delete m._liveInitable), m;
                    },
                    declMix: function(t, e, i) {
                        return l(e || (e = {})), t = r[t] = n(e, i);
                    },
                    _processLive: function(t) {
                        return !1;
                    },
                    create: function(t, e) {
                        return 'string' == typeof t && (t = {
                            block: t
                        }), new r[t.block](t.mods, e);
                    },
                    getName: function() {
                        return this._name;
                    },
                    on: function(e, i, n, o) {
                        return 'object' == typeof e && (t.isFunction(i) || t.isFunction(n)) && (e = this._buildModEventName(e)), this.__base.apply(this, arguments);
                    },
                    un: function(e, i, n) {
                        return 'object' == typeof e && t.isFunction(i) && (e = this._buildModEventName(e)), this.__base.apply(this, arguments);
                    },
                    _buildModEventName: function(t) {
                        var e = '_' + t.modName + '_' + (!1 === t.modVal ? '' : t.modVal);
                        return t.elem && (e = '__' + t.elem + e), e;
                    },
                    _extractElemNameFrom: function(t) {},
                    afterCurrentEvent: function(t, e) {
                        1 == i.push({
                            fn: t,
                            ctx: e
                        }) && setTimeout(this._runAfterCurrentEventFns, 0);
                    },
                    _runAfterCurrentEventFns: function() {
                        var t = i.length;
                        t && i.splice(0, t).forEach(function(t) {
                            t.fn.call(t.ctx || this);
                        }, this);
                    },
                    changeThis: function(t, e) {
                        return t.bind(e || this);
                    },
                    del: function(t) {
                        var e = 'string' == typeof t,
                            i = e ? 0 : 1,
                            n = arguments.length;
                        for (e && (t = this); i < n;) delete t[arguments[i++]];
                        return this;
                    },
                    channel: function(e, i) {
                        if ('boolean' == typeof e && (i = e, e = void 0), e || (e = 'default'), !i) return a[e] || (a[e] = new t.observable());
                        a[e] && (a[e].un(), delete a[e]);
                    }
                }));
            }(jQuery),
            function(t, e, i) {
                var n, o = '_',
                    s = '__';

                function r(t) {
                    var e = typeof t;
                    return 'string' === e || 'number' === e || 'boolean' === e;
                }

                function a(t, e, i) {
                    null != e && !1 !== e && (i.push(o, t), !0 !== e && i.push(o, e));
                }

                function c(t, e, i, n) {
                    n.push(t), a(e, i, n);
                }

                function h(t, e, i, o, r) {
                    c(t, n, n, r), r.push(s, e), a(i, o, r);
                }
                t.INTERNAL = {
                    NAME_PATTERN: '[a-zA-Z0-9-]+',
                    MOD_DELIM: o,
                    ELEM_DELIM: s,
                    buildModPostfix: function(t, e, i) {
                        var n = i || [];
                        return a(t, e, n), i ? n : n.join('');
                    },
                    buildClass: function(t, e, i, o, s) {
                        if (r(i) ? r(o) || (s = o, o = i, i = e, e = n) : void 0 !== i ? (s = i, i = n) : e && 'string' != typeof e && (s = e, e = n), !e && void 0 === i && !s) return t;
                        var a = s || [];
                        return e ? h(t, e, i, o, a) : c(t, i, o, a), s ? a : a.join('');
                    },
                    buildClasses: function(t, i, n, o) {
                        i && 'string' != typeof i && (o = n, n = i, i = void 0);
                        var s = o || [];
                        return i ? h(t, i, void 0, void 0, s) : c(t, void 0, void 0, s), n && e.each(n, function(e, n) {
                            n && (s.push(' '), i ? h(t, i, e, n, s) : c(t, e, n, s));
                        }), o ? s : s.join('');
                    }
                };
            }(BEM, jQuery),
            function(t, e, i) {
                var n = {
                        bubbles: !1,
                        cancelable: !1,
                        view: null,
                        detail: null,
                        screenX: 0,
                        screenY: 0,
                        clientX: 0,
                        clientY: 0,
                        ctrlKey: !1,
                        altKey: !1,
                        shiftKey: !1,
                        metaKey: !1,
                        button: 0,
                        relatedTarget: null,
                        buttons: 0,
                        pointerId: 0,
                        width: 0,
                        height: 0,
                        pressure: 0,
                        tiltX: 0,
                        tiltY: 0,
                        pointerType: '',
                        hwTimestamp: 0,
                        isPrimary: !1,
                        target: null,
                        currentTarget: null,
                        which: 0,
                        pageX: 0,
                        pageY: 0,
                        timeStamp: 0
                    },
                    o = Object.keys(n),
                    s = o.map(function(t) {
                        return n[t];
                    }),
                    r = o.length,
                    a = !1,
                    c = [0, 1, 4, 2];
                try {
                    a = 1 === new MouseEvent('test', {
                        buttons: 1
                    }).buttons;
                } catch (v) {}

                function h(t, e) {
                    var i = {},
                        n = t.originalEvent || {};
                    e || (e = {});
                    for (var h, l = 0; l < r; l++) i[h = o[l]] = e[h] || t[h] || n[h] || s[l];
                    return i.x = i.clientX, i.y = i.clientY, i.pressure = i.pressure || (i.buttons ? 0.5 : 0), i.buttons || a || (i.buttons = c[i.which] || 0), i.originalEvent = t.originalEvent || null, e.preventDefault ? i.preventDefault = function() {
                        e.preventDefault(), t.preventDefault();
                    } : (i.preventDefault = function() {
                        t.preventDefault();
                    }, i._preventScroll = function() {}), i;
                }
                var l = t.Map && t.Map.prototype.forEach ? new t.Map() : {
                        array: [],
                        size: 0,
                        set: function(t, e) {
                            if (e === undefined) return this['delete'](t);
                            this.has(t) || this.size++, this.array[t] = e;
                        },
                        has: function(t) {
                            return this.array[t] !== undefined;
                        },
                        'delete': function(t) {
                            this.has(t) && (delete this.array[t], this.size--);
                        },
                        get: function(t) {
                            return this.array[t];
                        },
                        clear: function() {
                            this.array.length = 0, this.size = 0;
                        },
                        forEach: function(t, e) {
                            return this.array.forEach(function(i, n) {
                                t.call(e, i, n, this);
                            }, this);
                        }
                    },
                    u = {
                        eventMap: {},
                        captureInfo: {},
                        eventSourceList: [],
                        registerSource: function(t, e) {
                            var i = e.events;
                            i && (i.forEach(function(t) {
                                e[t] && (this.eventMap[t] = e[t].bind(e));
                            }, this), this.eventSourceList.push(e));
                        },
                        register: function(t) {
                            for (var e, i = this.eventSourceList.length, n = 0; n < i && (e = this.eventSourceList[n]); n++) e.register.call(e, t);
                        },
                        unregister: function(t) {
                            for (var e, i = this.eventSourceList.length, n = 0; n < i && (e = this.eventSourceList[n]); n++) e.unregister.call(e, t);
                        },
                        contains: function(t, e) {
                            return !!t.contains && t.contains(e);
                        },
                        getCommonAncestor: function(t, i) {
                            for (; t && t !== e.documentElement;) {
                                if (t.contains && t.contains(i)) return t;
                                t = t.parentNode;
                            }
                            return null;
                        },
                        down: function(t) {
                            t.bubbles = !0, this.fireEvent('pointerdown', t);
                        },
                        move: function(t) {
                            t.bubbles = !0, this.fireEvent('pointermove', t);
                        },
                        up: function(t) {
                            t.bubbles = !0, this.fireEvent('pointerup', t);
                        },
                        enter: function(t) {
                            var e = [],
                                i = t.target,
                                n = this.getCommonAncestor(i, t.relatedTarget);
                            for (t.bubbles = !1; i && i !== n;) e.push(i), i = i.parentNode;
                            for (; e.length;) t.target = e.pop(), this.fireEvent('pointerenter', t);
                        },
                        leave: function(t) {
                            var e = [],
                                i = t.target,
                                n = this.getCommonAncestor(i, t.relatedTarget);
                            for (t.bubbles = !1; i && i !== n;) e.push(i), i = i.parentNode;
                            for (; e.length;) t.target = e.shift(), this.fireEvent('pointerleave', t);
                        },
                        over: function(t) {
                            t.bubbles = !0, this.fireEvent('pointerover', t);
                        },
                        out: function(t) {
                            t.bubbles = !0, this.fireEvent('pointerout', t);
                        },
                        cancel: function(t) {
                            t.bubbles = !0, this.fireEvent('pointercancel', t);
                        },
                        leaveOut: function(t) {
                            this.out(t), this.contains(t.target, t.relatedTarget) || this.leave(t);
                        },
                        enterOver: function(t) {
                            this.over(t), this.contains(t.target, t.relatedTarget) || this.enter(t);
                        },
                        listen: function(t, e) {
                            e.forEach(function(e) {
                                this.addEvent(t, e);
                            }, this);
                        },
                        unlisten: function(t, e) {
                            e.forEach(function(e) {
                                this.removeEvent(t, e);
                            }, this);
                        },
                        addEvent: function(t, e) {
                            i(t).on(e, this.boundHandler);
                        },
                        removeEvent: function(t, e) {
                            i(t).off(e, this.boundHandler);
                        },
                        eventHandler: function(t) {
                            var e = this.eventMap[t.type];
                            e && e(t, t.originalEvent);
                        },
                        makeEvent: function(t, e) {
                            this.captureInfo[e.pointerId] && (e.relatedTarget = null);
                            var n = function(t, e) {
                                var n = i.Event(t),
                                    o = e.preventDefault,
                                    s = n.preventDefault.bind(n);
                                return jQuery.extend(n, e), n.preventDefault = function() {
                                    o(), s();
                                }, n;
                            }(t, e);
                            return n._target = n._target || e.target, n;
                        },
                        fireEvent: function(t, e) {
                            var i = this.makeEvent(t, e);
                            return this.dispatchEvent(i);
                        },
                        getTarget: function(t) {
                            return this.captureInfo[t.pointerId] || t._target;
                        },
                        setCapture: function(t, n) {
                            this.captureInfo[t] && this.releaseCapture(t), this.captureInfo[t] = n, this.implicitRelease = this.releaseCapture.bind(this, t), i(e).on('pointerup pointercancel', this.implicitRelease), this.asyncDispatchEvent(i.Event('gotpointercapture', {
                                bubbles: !0,
                                cancelable: !1,
                                pointerId: t,
                                _target: n
                            }));
                        },
                        releaseCapture: function(t) {
                            var n = this.captureInfo[t];
                            n && (this.captureInfo[t] = undefined, i(e).off('pointerup pointercancel', this.implicitRelease), this.asyncDispatchEvent(i.Event('lostpointercapture', {
                                bubbles: !0,
                                cancelable: !1,
                                pointerId: t,
                                _target: n
                            })));
                        },
                        dispatchEvent: function(t) {
                            var e = this.getTarget(t);
                            if (e) return i.event.trigger(t, null, e, !t.bubbles);
                        },
                        asyncDispatchEvent: function(e) {
                            (t.requestAnimationFrame || setTimeout)(this.dispatchEvent.bind(this, e));
                        }
                    };
                u.boundHandler = u.eventHandler.bind(u);
                var d, m, f = {
                        POINTER_ID: 1,
                        POINTER_TYPE: 'mouse',
                        DEDUP_DIST: 25,
                        events: ['mousedown', 'mousemove', 'mouseup', 'mouseover', 'mouseout'],
                        register: function(t) {
                            u.listen(t, this.events);
                        },
                        unregister: function(t) {
                            u.unlisten(t, this.events);
                        },
                        lastTouches: [],
                        isEventSimulatedFromTouch: function(t) {
                            for (var e, i = this.lastTouches, n = t.clientX, o = t.clientY, s = 0, r = i.length; s < r && (e = i[s]); s++) {
                                var a = Math.abs(n - e.x),
                                    c = Math.abs(o - e.y);
                                if (a <= this.DEDUP_DIST && c <= this.DEDUP_DIST) return !0;
                            }
                        },
                        prepareEvent: function(t) {
                            return h(t, {
                                pointerId: this.POINTER_ID,
                                isPrimary: !0,
                                pointerType: this.POINTER_TYPE
                            });
                        },
                        mousedown: function(t) {
                            this.isEventSimulatedFromTouch(t) || (l.has(this.POINTER_ID) && this.cancel(t), l.set(this.POINTER_ID, t), u.down(this.prepareEvent(t)));
                        },
                        mousemove: function(t) {
                            this.isEventSimulatedFromTouch(t) || u.move(this.prepareEvent(t));
                        },
                        mouseup: function(t) {
                            if (!this.isEventSimulatedFromTouch(t)) {
                                var e = l.get(this.POINTER_ID);
                                e && e.button === t.button && (u.up(this.prepareEvent(t)), this.cleanupMouse());
                            }
                        },
                        mouseover: function(t) {
                            this.isEventSimulatedFromTouch(t) || u.enterOver(this.prepareEvent(t));
                        },
                        mouseout: function(t) {
                            this.isEventSimulatedFromTouch(t) || u.leaveOut(this.prepareEvent(t));
                        },
                        cancel: function(t) {
                            u.cancel(this.prepareEvent(t)), this.cleanupMouse();
                        },
                        cleanupMouse: function() {
                            l['delete'](this.POINTER_ID);
                        }
                    },
                    p = {
                        POINTER_TYPE: 'touch',
                        DEDUP_TIMEOUT: 2500,
                        CLICK_COUNT_TIMEOUT: 200,
                        events: ['touchstart', 'touchmove', 'touchend', 'touchcancel'],
                        register: function(t) {
                            u.listen(t, this.events);
                        },
                        unregister: function(t) {
                            u.unlisten(t, this.events);
                        },
                        firstTouch: null,
                        isPrimaryTouch: function(t) {
                            return this.firstTouch === t.identifier;
                        },
                        setPrimaryTouch: function(t) {
                            (0 === l.size || 1 === l.size && l.has(1)) && (this.firstTouch = t.identifier, this.firstTouchTarget = t.target, this.scrolling = !1, this.firstXY = {
                                X: t.clientX,
                                Y: t.clientY
                            }, this.cancelResetClickCount());
                        },
                        removePrimaryPointer: function(t) {
                            t.isPrimary && (this.firstTouch = null, this.firstTouchTarget = null, this.firstXY = null, this.shouldScrollCache = undefined, this.resetClickCount());
                        },
                        clickCount: 0,
                        resetId: null,
                        resetClickCount: function() {
                            var t = function() {
                                this.clickCount = 0, this.resetId = null;
                            }.bind(this);
                            this.resetId = setTimeout(t, this.CLICK_COUNT_TIMEOUT);
                        },
                        cancelResetClickCount: function() {
                            this.resetId && clearTimeout(this.resetId);
                        },
                        typeToButtons: function(t) {
                            return 'touchstart' === t || 'touchmove' === t ? 1 : 0;
                        },
                        findTarget: function(t) {
                            return e.elementFromPoint(t.clientX, t.clientY);
                        },
                        touchToPointer: function(t) {
                            var e = this,
                                n = this.currentTouchEvent,
                                o = t.identifier + 2;
                            return h(n, i.extend({}, t, {
                                pointerId: o,
                                target: u.captureInfo[o] || this.findTarget(t),
                                bubbles: !0,
                                cancelable: !0,
                                detail: this.clickCount,
                                button: 0,
                                buttons: this.typeToButtons(n.type),
                                width: t.webkitRadiusX || t.radiusX || 0,
                                height: t.webkitRadiusY || t.radiusY || 0,
                                pressure: t.webkitForce || t.force || 0.5,
                                isPrimary: this.isPrimaryTouch(t),
                                pointerType: this.POINTER_TYPE,
                                preventDefault: function() {
                                    e.scrolling = !1, e.shouldScrollCache = !1, e.firstXY = null;
                                }
                            }));
                        },
                        processTouches: function(t, e) {
                            var i = t.originalEvent.changedTouches;
                            this.currentTouchEvent = t;
                            for (var n, o = 0; o < i.length; o++) n = i[o], e.call(this, this.touchToPointer(n));
                        },
                        scrollTypes: {
                            EMITTER: 'none',
                            XSCROLLER: 'pan-x',
                            YSCROLLER: 'pan-y',
                            SCROLLER: /^(?:pan-x pan-y)|(?:pan-y pan-x)|auto$/
                        },
                        touchActionToScrollType: function(t) {
                            var e, i = this.scrollTypes;
                            return t === i.EMITTER ? e = 'none' : t === i.XSCROLLER ? e = 'X' : t === i.YSCROLLER ? e = 'Y' : i.SCROLLER.exec(t) && (e = 'XY'), e;
                        },
                        shouldScroll: function(t) {
                            if (this.shouldScrollCache !== undefined) return this.shouldScrollCache;
                            if (!this.firstXY) return !0;
                            var e, i, n = this.firstTouchTarget;
                            do {
                                if (null !== (e = n.getAttribute('touch-action'))) break;
                                n = n.parentNode;
                            } while (n !== document);
                            var o = this.touchActionToScrollType(e);
                            if ('none' === o) i = !1;
                            else if ('XY' === o || o === undefined) i = !0;
                            else {
                                var s = t.originalEvent.changedTouches[0],
                                    r = o,
                                    a = 'Y' === o ? 'X' : 'Y';
                                i = Math.abs(s['client' + r] - this.firstXY[r]) >= Math.abs(s['client' + a] - this.firstXY[a]);
                            }
                            return this.shouldScrollCache = i, this.firstXY = null, this.firstTouchTarget = null, this.shouldScrollCache;
                        },
                        findTouch: function(t, e) {
                            for (var i, n = 0, o = t.length; n < o && (i = t[n]); n++)
                                if (i.identifier === e) return !0;
                        },
                        vacuumTouches: function(t) {
                            var e = t.originalEvent.touches;
                            if (l.size >= e.length) {
                                var i = [];
                                l.forEach(function(t, n) {
                                    if (1 !== n && !this.findTouch(e, n - 2)) {
                                        var o = t.out;
                                        i.push(o);
                                    }
                                }, this), i.forEach(this.cancelOut, this);
                            }
                        },
                        touchstart: function(t) {
                            var e = t.originalEvent.changedTouches[0];
                            this.vacuumTouches(t), this.setPrimaryTouch(e), this.dedupSynthMouse(e), this.scrolling || (this.clickCount++, this.processTouches(t, this.overDown));
                        },
                        overDown: function(t) {
                            l.set(t.pointerId, {
                                target: t.target,
                                out: t,
                                outTarget: t.target
                            }), u.over(t), u.enter(t), u.down(t);
                        },
                        touchmove: function(t) {
                            this.scrolling || (this.shouldScroll(t) ? (this.scrolling = !0, this.touchcancel(t)) : (t.preventDefault(), this.processTouches(t, this.moveOverOut)));
                        },
                        moveOverOut: function(t) {
                            var e = l.get(t.pointerId);
                            if (e) {
                                var i = e.out,
                                    n = e.outTarget;
                                u.move(t), i && n !== t.target && (i.relatedTarget = t.target, t.relatedTarget = n, i.target = n, t.target ? (u.leaveOut(i), u.enterOver(t)) : (t.target = n, t.relatedTarget = null, this.cancelOut(t))), e.out = t, e.outTarget = t.target;
                            }
                        },
                        touchend: function(t) {
                            this.dedupSynthMouse(t.originalEvent.changedTouches[0]), this.processTouches(t, this.upOut);
                        },
                        upOut: function(t) {
                            this.scrolling || (u.up(t), u.out(t), u.leave(t)), this.cleanUpPointer(t);
                        },
                        touchcancel: function(t) {
                            this.processTouches(t, this.cancelOut);
                        },
                        cancelOut: function(t) {
                            u.cancel(t), u.out(t), u.leave(t), this.cleanUpPointer(t);
                        },
                        cleanUpPointer: function(t) {
                            l['delete'](t.pointerId), this.removePrimaryPointer(t);
                        },
                        dedupSynthMouse: function(t) {
                            var e = f.lastTouches;
                            if (this.isPrimaryTouch(t)) {
                                var i = {
                                    x: t.clientX,
                                    y: t.clientY
                                };
                                e.push(i);
                                var n = function(t, e) {
                                    var i = t.indexOf(e);
                                    i > -1 && t.splice(i, 1);
                                }.bind(null, e, i);
                                setTimeout(n, this.DEDUP_TIMEOUT);
                            }
                        }
                    },
                    _ = {
                        POINTER_TYPES: ['', 'unavailable', 'touch', 'pen', 'mouse'],
                        HAS_BITMAP_TYPE: t.MSPointerEvent && 'number' == typeof t.MSPointerEvent.MSPOINTER_TYPE_MOUSE,
                        events: ['MSPointerDown', 'MSPointerMove', 'MSPointerUp', 'MSPointerOut', 'MSPointerOver', 'MSPointerCancel', 'MSGotPointerCapture', 'MSLostPointerCapture'],
                        register: function(t) {
                            u.listen(t, this.events);
                        },
                        unregister: function(t) {
                            u.unlisten(t, this.events);
                        },
                        prepareEvent: function(t) {
                            var e = h(t);
                            return this.HAS_BITMAP_TYPE && (e.pointerType = this.POINTER_TYPES[e.pointerType]), e;
                        },
                        cleanup: function(t) {
                            l['delete'](t);
                        },
                        MSPointerDown: function(t) {
                            l.set(t.originalEvent.pointerId, t), u.down(this.prepareEvent(t));
                        },
                        MSPointerMove: function(t) {
                            u.move(this.prepareEvent(t));
                        },
                        MSPointerUp: function(t) {
                            u.up(this.prepareEvent(t)), this.cleanup(t.originalEvent.pointerId);
                        },
                        MSPointerOut: function(t) {
                            u.leaveOut(this.prepareEvent(t));
                        },
                        MSPointerOver: function(t) {
                            u.enterOver(this.prepareEvent(t));
                        },
                        MSPointerCancel: function(t) {
                            u.cancel(this.prepareEvent(t)), this.cleanup(t.originalEvent.pointerId);
                        },
                        MSGotPointerCapture: function(t) {
                            u.fireEvent('gotpointercapture', this.prepareEvent(t));
                        },
                        MSLostPointerCapture: function(t) {
                            u.fireEvent('lostpointercapture', this.prepareEvent(t));
                        }
                    },
                    g = function(t) {
                        if (!l.has(t)) throw new Error('InvalidPointerId');
                    };
                t.Element && Element.prototype.setPointerCapture ? (d = function(t, e) {
                    t.setPointerCapture(e);
                }, m = function(t, e) {
                    t.releasePointerCapture(e);
                }) : t.navigator.msPointerEnabled ? (d = function(t, e) {
                    g(e), t.msSetPointerCapture(e);
                }, m = function(t, e) {
                    g(e), t.msReleasePointerCapture(e);
                }) : (d = function(t, e) {
                    g(e), u.setCapture(e, t);
                }, m = function(t, e) {
                    g(e), u.releaseCapture(e, t);
                }), i.fn.extend({
                    setPointerCapture: function(t) {
                        d(this[0], t);
                    },
                    releasePointerCapture: function(t) {
                        m(this[0], t);
                    }
                }), t._pointerPolyfillInited || (t._pointerPolyfillInited = !0, t.PointerEvent ? ['move', 'down', 'up', 'over', 'out', 'enter', 'leave', 'cancel'].forEach(function(t) {
                    var e = jQuery.event.fixHooks,
                        i = 'pointer' + t;
                    e[i] || (e[i] = {}), e[i].props = o.concat(e[i].props || []);
                }) : (delete i.event.special.pointerenter, delete i.event.special.pointerleave, t.navigator.msPointerEnabled ? u.registerSource('ms', _) : (u.registerSource('mouse', f), t.ontouchstart !== undefined && u.registerSource('touch', p)), u.register(document)));
            }(window, document, jQuery),
            function(t, e) {
                if (!e.event.special.pointerclick) {
                    var i, n = t.ontouchstart !== undefined || navigator.msMaxTouchPoints > 0,
                        o = 10,
                        s = 25,
                        r = 900,
                        a = [],
                        c = [],
                        h = null,
                        l = null,
                        u = 'touchAction' in document.documentElement.style ? function(t) {
                            return function e(t) {
                                return !(!t || t === document.documentElement) && ('manipulation' === getComputedStyle(t)['touch-action'] || e(t.parentElement));
                            }(t);
                        } : function() {
                            return !1;
                        };
                    n ? (i = {
                        click: function(t) {
                            var e = Object(t.originalEvent)._sourcePoint;
                            if (!e) return d.apply(this, arguments);
                            e.isDefaultPrevented() && t.preventDefault();
                        },
                        'pointerdown pointermove pointerleave pointercancel pointerup': function(t) {
                            var e, i, n = t.type;
                            if ('mouse' !== t.pointerType && ('pointerdown' !== n && 'pointerup' !== n || !u(t.target)))
                                if ('pointerdown' === n) l = t;
                                else if ('pointermove' === n && l && (l.target !== t.target || (e = l, i = t, Math.abs(e.clientX - i.clientX) > o || Math.abs(e.clientY - i.clientY) > o))) l = null;
                            else if ('pointerleave' === n || 'pointercancel' === n) l = null;
                            else if ('pointerup' === n) {
                                if (function(t) {
                                        if (!t.isPrimary) return;
                                        a.push(t), setTimeout(Array.prototype.shift.bind(a), r);
                                    }(t), !l) return;
                                if (!(t.timeStamp - l.timeStamp > 250)) return h || (h = setTimeout(function() {
                                    h = l = null;
                                })), d.apply(this, arguments);
                                l = null;
                            }
                        }
                    }, ['mousedown', 'click'].forEach(function(e) {
                        t.addEventListener(e, function(t) {
                            ! function(t) {
                                var e = t.clientX,
                                    i = t.clientY,
                                    n = '_compat' + t.type;
                                if (t._sourcePoint) return;
                                for (var o = 0; o < a.length; o++) {
                                    var h = a[o],
                                        l = h.target === t.target;
                                    if (!h[n] && ((l || !(Math.abs(e - h.clientX) > s || Math.abs(i - h.clientY) > s)) && (l || document.elementFromPoint(h.clientX, h.clientY) !== h.target))) {
                                        t._sourcePoint = h, h[n] = t;
                                        break;
                                    }
                                }
                                c.push(t), setTimeout(Array.prototype.shift.bind(c), r);
                            }(t),
                            function(t) {
                                var e = function(t) {
                                    for (var e = 0; e < c.length; e++)
                                        if (c[e] === t) return c[e]._sourcePoint;
                                }(t);
                                return Boolean(e) && e.target !== t.target;
                            }(t) && (t.preventDefault(), t.stopPropagation());
                        }, !0);
                    })) : i = {
                        click: function(t) {
                            return d.apply(this, arguments);
                        }
                    }, e.event.special.pointerclick = {
                        setup: function() {
                            e(this).on(i);
                        },
                        teardown: function() {
                            e(this).off(i);
                        }
                    };
                }

                function d(t) {
                    var i, n = t.type;
                    return t.button || (t.type = 'pointerclick', i = e.event.dispatch.apply(this, arguments), t.type = n), i;
                }
            }(window, jQuery);
        var i = 'undefined' != typeof window ? window : 'undefined' != typeof global ? global : 'undefined' != typeof self ? self : {};
        var n, o, s, r, a, c, h, l, u, d, m, f, p, _, g, v, b, y, w, E, k, M, S, T, C, P, D, B, x = (function(t) {
                /*
                 * @preserve FastClick: polyfill to remove click delays on browsers with touch UIs.
                 *
                 * @version 1.0.3
                 * @codingstandard ftlabs-jsv2
                 * @copyright The Financial Times Limited [All Rights Reserved]
                 * @license MIT License (see LICENSE.txt)
                 */
                window.FastClick = function a(t, i) {
                    var n;
                    if (i = i || {}, this.trackingClick = !1, this.trackingClickStart = 0, this.targetElement = null, this.touchStartX = 0, this.touchStartY = 0, this.lastTouchIdentifier = 0, this.touchBoundary = i.touchBoundary || 10, this.layer = t, this.tapDelay = i.tapDelay || 200, !a.notNeeded(t)) {
                        for (var o = ['onMouse', 'onClick', 'onTouchStart', 'onTouchMove', 'onTouchEnd', 'onTouchCancel'], s = 0, r = o.length; s < r; s++) this[o[s]] = c(this[o[s]], this);
                        e && (t.addEventListener('mouseover', this.onMouse, !0), t.addEventListener('mousedown', this.onMouse, !0), t.addEventListener('mouseup', this.onMouse, !0)), t.addEventListener('click', this.onClick, !0), t.addEventListener('touchstart', this.onTouchStart, !1), t.addEventListener('touchmove', this.onTouchMove, !1), t.addEventListener('touchend', this.onTouchEnd, !1), t.addEventListener('touchcancel', this.onTouchCancel, !1), Event.prototype.stopImmediatePropagation || (t.removeEventListener = function(e, i, n) {
                            var o = Node.prototype.removeEventListener;
                            'click' === e ? o.call(t, e, i.hijacked || i, n) : o.call(t, e, i, n);
                        }, t.addEventListener = function(e, i, n) {
                            var o = Node.prototype.addEventListener;
                            'click' === e ? o.call(t, e, i.hijacked || (i.hijacked = function(t) {
                                t.propagationStopped || i(t);
                            }), n) : o.call(t, e, i, n);
                        }), 'function' == typeof t.onclick && (n = t.onclick, t.addEventListener('click', function(t) {
                            n(t);
                        }, !1), t.onclick = null);
                    }

                    function c(t, e) {
                        return function() {
                            return t.apply(e, arguments);
                        };
                    }
                };
                var e = navigator.userAgent.indexOf('Android') > 0,
                    i = /iP(ad|hone|od)/.test(navigator.userAgent),
                    n = i && /OS 4_\d(_\d)?/.test(navigator.userAgent),
                    o = i && /OS ([6-9]|\d{2})_\d/.test(navigator.userAgent),
                    s = navigator.userAgent.indexOf('BB10') > 0;

                function r() {
                    setTimeout(function() {
                        FastClick.attach(document);
                    }, 0);
                }
                FastClick.prototype.needsClick = function(t) {
                    switch (t.nodeName.toLowerCase()) {
                        case 'button':
                        case 'select':
                        case 'textarea':
                            return !0;
                        case 'input':
                            if (i && 'file' === t.type || e && 'checkbox' === t.type || t.disabled) return !0;
                            break;
                        case 'label':
                        case 'video':
                            return !0;
                    }
                    return /\bneedsclick\b/.test(t.className);
                }, FastClick.prototype.needsFocus = function(t) {
                    switch (t.nodeName.toLowerCase()) {
                        case 'textarea':
                            return !1;
                        case 'select':
                            return !e;
                        case 'input':
                            switch (t.type) {
                                case 'button':
                                case 'checkbox':
                                case 'file':
                                case 'image':
                                case 'radio':
                                case 'submit':
                                    return !1;
                            }
                            return !t.disabled && !t.readOnly;
                        default:
                            return /\bneedsfocus\b/.test(t.className);
                    }
                }, FastClick.prototype.sendClick = function(t, e) {
                    var i, n, o;
                    document.activeElement && document.activeElement !== t && document.activeElement.blur(), n = e.changedTouches[0], (o = document.createEvent('MouseEvents')).initMouseEvent('mousedown', !0, !0, window, 1, n.screenX, n.screenY, n.clientX, n.clientY, !1, !1, !1, !1, 0, null), o.forwardedTouchEvent = !0, t.dispatchEvent(o), (i = document.createEvent('MouseEvents')).initMouseEvent('click', !0, !0, window, 1, n.screenX, n.screenY, n.clientX, n.clientY, !1, !1, !1, !1, 0, null), i.forwardedTouchEvent = !0, t.dispatchEvent(i);
                }, FastClick.prototype.focus = function(t) {
                    var e;
                    i && t.setSelectionRange && 0 !== t.type.indexOf('date') && 'time' !== t.type ? (e = t.value.length, t.setSelectionRange(e, e)) : t.focus();
                }, FastClick.prototype.updateScrollParent = function(t) {
                    var e, i;
                    if (!(e = t.fastClickScrollParent) || !e.contains(t)) {
                        i = t;
                        do {
                            if (i.scrollHeight > i.offsetHeight) {
                                e = i, t.fastClickScrollParent = i;
                                break;
                            }
                            i = i.parentElement;
                        } while (i);
                    }
                    e && (e.fastClickLastScrollTop = e.scrollTop);
                }, FastClick.prototype.getTargetElementFromEventTarget = function(t) {
                    return t.nodeType === Node.TEXT_NODE ? t.parentNode : t;
                }, FastClick.prototype.onTouchStart = function(t) {
                    var e, o, s;
                    if (t.targetTouches.length > 1) return !0;
                    if (e = this.getTargetElementFromEventTarget(t.target), o = t.targetTouches[0], i) {
                        if ((s = window.getSelection()).rangeCount && !s.isCollapsed) return !0;
                        if (!n) {
                            if (o.identifier && o.identifier === this.lastTouchIdentifier) return t.preventDefault(), !1;
                            this.lastTouchIdentifier = o.identifier, this.updateScrollParent(e);
                        }
                    }
                    return this.trackingClick = !0, this.trackingClickStart = t.timeStamp, this.targetElement = e, this.touchStartX = o.pageX, this.touchStartY = o.pageY, t.timeStamp - this.lastClickTime < this.tapDelay && t.preventDefault(), !0;
                }, FastClick.prototype.touchHasMoved = function(t) {
                    var e = t.changedTouches[0],
                        i = this.touchBoundary;
                    return Math.abs(e.pageX - this.touchStartX) > i || Math.abs(e.pageY - this.touchStartY) > i;
                }, FastClick.prototype.onTouchMove = function(t) {
                    return !this.trackingClick || ((this.targetElement !== this.getTargetElementFromEventTarget(t.target) || this.touchHasMoved(t)) && (this.trackingClick = !1, this.targetElement = null), !0);
                }, FastClick.prototype.findControl = function(t) {
                    return t.control !== undefined ? t.control : t.htmlFor ? document.getElementById(t.htmlFor) : t.querySelector('button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea');
                }, FastClick.prototype.onTouchEnd = function(t) {
                    var s, r, a, c, h, l = this.targetElement;
                    if (!this.trackingClick || t.defaultPrevented) return this.targetElement = null, this.trackingClick = !1, !0;
                    if (t.timeStamp - this.lastClickTime < this.tapDelay) return this.cancelNextClick = !0, !0;
                    if (this.cancelNextClick = !1, this.lastClickTime = t.timeStamp, r = this.trackingClickStart, this.trackingClick = !1, this.trackingClickStart = 0, o && (h = t.changedTouches[0], (l = document.elementFromPoint(h.pageX - window.pageXOffset, h.pageY - window.pageYOffset) || l).fastClickScrollParent = this.targetElement.fastClickScrollParent), 'label' === (a = l.tagName.toLowerCase())) {
                        if (s = this.findControl(l)) {
                            if (this.focus(l), e) return !1;
                            l = s;
                        }
                    } else if (this.needsFocus(l)) return t.timeStamp - r > 100 || i && window.top !== window && 'input' === a ? (this.targetElement = null, !1) : (this.focus(l), this.sendClick(l, t), i && 'select' === a || (this.targetElement = null, t.preventDefault()), !1);
                    return !(!i || n || !(c = l.fastClickScrollParent) || c.fastClickLastScrollTop === c.scrollTop) || (this.shortClick = t.timeStamp - r < 500, this.shortClick && !this.needsClick(l) && (t.preventDefault(), this.sendClick(l, t)), !1);
                }, FastClick.prototype.onTouchCancel = function() {
                    this.trackingClick = !1, this.targetElement = null;
                }, FastClick.prototype.onMouse = function(t) {
                    return !this.targetElement || (!!t.forwardedTouchEvent || (!t.cancelable || (!this.shortClick || (!(!this.needsClick(this.targetElement) || this.cancelNextClick) || (t.stopImmediatePropagation ? t.stopImmediatePropagation() : t.propagationStopped = !0, t.stopPropagation(), t.preventDefault(), !1)))));
                }, FastClick.prototype.onClick = function(t) {
                    var e;
                    return this.trackingClick ? (this.targetElement = null, this.trackingClick = !1, !0) : 'submit' === t.target.type && 0 === t.detail || ((e = this.onMouse(t)) || (this.targetElement = null), e);
                }, FastClick.prototype.destroy = function() {
                    var t = this.layer;
                    e && (t.removeEventListener('mouseover', this.onMouse, !0), t.removeEventListener('mousedown', this.onMouse, !0), t.removeEventListener('mouseup', this.onMouse, !0)), t.removeEventListener('click', this.onClick, !0), t.removeEventListener('touchstart', this.onTouchStart, !1), t.removeEventListener('touchmove', this.onTouchMove, !1), t.removeEventListener('touchend', this.onTouchEnd, !1), t.removeEventListener('touchcancel', this.onTouchCancel, !1);
                }, FastClick.notNeeded = function(t) {
                    var i, n, o;
                    if ('undefined' == typeof window.ontouchstart) return !0;
                    if (n = +(/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [, 0])[1]) {
                        if (!e) return !0;
                        if (i = document.querySelector('meta[name=viewport]')) {
                            if (-1 !== i.content.indexOf('user-scalable=no')) return !0;
                            if (n > 31 && document.documentElement.scrollWidth <= window.outerWidth) return !0;
                        }
                    }
                    if (s && (o = navigator.userAgent.match(/Version\/([0-9]*)\.([0-9]*)/))[1] >= 10 && o[2] >= 3 && (i = document.querySelector('meta[name=viewport]'))) {
                        if (-1 !== i.content.indexOf('user-scalable=no')) return !0;
                        if (document.documentElement.scrollWidth <= window.outerWidth) return !0;
                    }
                    var r = getComputedStyle(document.body);
                    return 'none' === r.msTouchAction || 'manipulation' === r.msTouchAction || (!!(+(/Firefox\/([0-9]+)/.exec(navigator.userAgent) || [0, 0])[1] >= 27 && (i = document.querySelector('meta[name=viewport]')) && (-1 !== i.content.indexOf('user-scalable=no') || document.documentElement.scrollWidth <= window.outerWidth)) || ('none' === r.touchAction || 'manipulation' === r.touchAction));
                }, FastClick.attach = function(t, e) {
                    return new FastClick(t, e);
                }, t.exports ? (t.exports = FastClick.attach, t.exports.FastClick = FastClick) : window.FastClick = FastClick, 'complete' === document.readyState || 'loading' !== document.readyState && !document.documentElement.doScroll ? r() : (document.addEventListener('DOMContentLoaded', r, !1), document.addEventListener('load', r, !1))
                /*
                 * @license end
                 */
                ;
            }(n = {
                exports: {}
            }, n.exports), n.exports),
            I = x.FastClick;
        FastClick.attach = function(t) {
                var e = navigator.userAgent.indexOf('IEMobile') > 0,
                    i = navigator.userAgent.indexOf('Bada') > 0,
                    n = home.getData('i-ua2.data.isAndroidNative2'),
                    o = home.getData('i-ua2.data.isOperaClassic');
                if (!(e || i || n || o)) return new FastClick(t);
            }, window.home = window.home || {},
            function(t) {
                t.getData = function(e, i) {
                    var n, o, s, r = 'export',
                        a = e.split('.'),
                        c = a.length;
                    if (c > 1) {
                        for (n = t[r] || {}, o = 0; o < c; o++)
                            if (void 0 === (n = n[a[o]])) return void 0 === n ? i : n;
                        return void 0 === n ? i : n;
                    }
                    return r = 'export', void 0 === (s = t && t[r] && t[r][e]) ? i : s;
                }, t.dataCallbacks = t.dataCallbacks || [], t.subscribeData = function(e) {
                    t['export'] ? e() : t.dataCallbacks.push(e);
                };
            }(home),
            function(t) {
                t.event.special.pointerpress || t.each({
                    pointerpress: 'pointerdown',
                    pointerrelease: 'pointerup pointercancel'
                }, function(e, i) {
                    function n(i) {
                        var n, o = i.type;
                        return 'mouse' === i.pointerType && 1 !== i.which || (i.type = e, n = t.event.dispatch.apply(this, arguments), i.type = o), n;
                    }
                    t.event.special[e] = {
                        setup: function() {
                            t(this).on(i, n);
                        },
                        teardown: function() {
                            t(this).off(i, n);
                        }
                    };
                });
            }(jQuery),
            function(t, e, i) {
                var n = e(window),
                    o = e(document),
                    s = {},
                    r = {},
                    a = {},
                    c = {},
                    h = {},
                    l = t.blocks,
                    u = t.INTERNAL,
                    d = u.NAME_PATTERN,
                    m = u.MOD_DELIM,
                    f = u.ELEM_DELIM,
                    p = RegExp('[^' + m + ']' + m + '(' + d + ')(?:' + m + '(' + d + '))?$'),
                    _ = u.buildModPostfix,
                    g = u.buildClass,
                    v = Array.prototype.slice,
                    b = Array.prototype.reverse;

                function y(t, n, o, a, c) {
                    'boolean' == typeof o && (c = a, a = o, o = i);
                    var h = n[0];
                    if (h.dataset === i || 'react' !== h.dataset.lego) {
                        var u = (o = w(o || k(h)[t], h, t)).uniqId;
                        if (r[u]) return r[u]._init();
                        s[u] = s[u] ? s[u].add(n) : n;
                        var d = h.parentNode;
                        d && 11 !== d.nodeType || e.unique(s[u]);
                        var m = l[t] || C.decl(t, {}, {
                            live: !0
                        });
                        if (!(m._liveInitable = Boolean(m._processLive())) || a || !1 === o.live) {
                            a && n.addClass('i-bem');
                            var f = new m(s[u], o, Boolean(a));
                            return delete s[u], c && c.apply(f, v.call(arguments, 4)), f;
                        }
                    }
                }

                function w(t, i, n, o) {
                    (t || (t = {})).uniqId || (t.uniqId = (t.id ? n + '-id-' + t.id : e.identify()) + (o || e.identify()));
                    var s = e.identify(i),
                        r = a[s] || (a[s] = {});
                    return r[n] || (r[n] = t), t;
                }

                function E(t, e, i) {
                    var n = t.find(e);
                    return i ? n : n.add(t.filter(e));
                }

                function k(t) {
                    var i = e.identify(t);
                    return a[i] || (a[i] = M(t));
                }

                function M(t) {
                    var e = t.getAttribute('data-bem');
                    return e ? JSON.parse(e) : {};
                }

                function S(t) {
                    delete a[e.identify(t)];
                }

                function T(t, e) {
                    1 === t.domElem.length ? t.destruct(!0) : t.domElem = t.domElem.not(e);
                }
                e.fn.bem = function(t, e) {
                    return y(t, this, e, !0);
                };
                var C = t.DOM = t.decl('i-bem__dom', {
                    __constructor: function(t, i, n) {
                        this.domElem = t, this._eventNameCache = {}, this._elemCache = {}, this._blockInsideCache = {}, r[this._uniqId = i.uniqId || e.identify(this)] = this, this._needSpecialUnbind = !1, this.__base(null, i, n);
                    },
                    findBlocksInside: function(t, e) {
                        return this._findBlocks('find', t, e);
                    },
                    findBlockInside: function(t, e) {
                        var i = this._buildBlockCacheKey(t, e),
                            n = this._findBlocks('find', t, e, !0);
                        return this._blockInsideCache[i] = n, n;
                    },
                    blockInside: function(t, e) {
                        var i = this._buildBlockCacheKey(t, e),
                            n = this._blockInsideCache[i];
                        return n || (n = this.findBlockInside(t, e)), n;
                    },
                    dropBlockInsideCache: function(t, e) {
                        t || e ? this._blockInsideCache[this._buildBlockCacheKey(t, e)] = null : this._blockInsideCache = {};
                    },
                    _buildBlockCacheKey: function(t, e) {
                        e || (e = t, t = '');
                        var i = 'string' == typeof e ? e : g(e.block, e.modName, e.modVal);
                        return ('string' == typeof t ? t : t.__bemElemName) + ':' + i;
                    },
                    findBlocksOutside: function(t, e) {
                        return this._findBlocks('parents', t, e);
                    },
                    findBlockOutside: function(t, e) {
                        return this._findBlocks('closest', t, e)[0] || null;
                    },
                    findBlocksOn: function(t, e) {
                        return this._findBlocks('', t, e);
                    },
                    findBlockOn: function(t, e) {
                        return this._findBlocks('', t, e, !0);
                    },
                    _findBlocks: function(t, n, o, s) {
                        if (!this.domElem) return s ? null : [];
                        o || (o = n, n = i);
                        var r = n ? 'string' == typeof n ? this.findElem(n) : n : this.domElem,
                            a = 'string' == typeof o,
                            c = a ? o : o.block || o.blockName,
                            h = '.' + (a ? c : g(c, o.modName, o.modVal)) + (s ? ':first' : ''),
                            l = r.filter(h);
                        if (t && (l = l.add(r[t](h))), s) return l[0] ? y(c, l.eq(0), !0) : null;
                        var u = [],
                            d = {};
                        return e.each(l, function(t, i) {
                            var n = y(c, e(i), !0);
                            d[n._uniqId] || (d[n._uniqId] = !0, u.push(n));
                        }), u;
                    },
                    bindToDomElem: function(t, n, o, s) {
                        e.isFunction(o) && (s = o, o = i);
                        var r = this,
                            a = function(t) {
                                return (t.data || (t.data = {})).domElem = e(this), s.apply(r, arguments);
                            };
                        return s ? t.bind(r._buildEventName(n), o, (a.guid = s.guid = s.guid || e.guid++, a)) : e.each(n, function(e, i) {
                            r.bindToDomElem(t, e, o, i);
                        }), r;
                    },
                    bindToDoc: function(t, e, i) {
                        return this._needSpecialUnbind = !0, this.bindToDomElem(o, t, e, i);
                    },
                    bindToWin: function(t, o, s) {
                        return e.isFunction(o) && (s = o, o = i), this._needSpecialUnbind = !0, this.bindToDomElem(n, t, o, s);
                    },
                    bindTo: function(t, i, n, o) {
                        switch (arguments.length) {
                            case 3:
                                e.isFunction(n) && (o = n, 'object' == typeof i && (n = i, i = t, t = this.domElem));
                                break;
                            case 2:
                                e.isFunction(i) ? (o = i, i = t, t = this.domElem) : 'string' == typeof t || t instanceof e || (n = i, i = t, t = this.domElem);
                                break;
                            case 1:
                                i = t, t = this.domElem;
                        }
                        return 'string' == typeof t && (t = this.elem(t)), this.bindToDomElem(t, i, n, o);
                    },
                    unbindFromDomElem: function(t, e, i) {
                        return t.unbind(this._buildEventName(e), i), this;
                    },
                    unbindFromDoc: function(t, e) {
                        return this.unbindFromDomElem(o, t, e);
                    },
                    unbindFromWin: function(t, e) {
                        return this.unbindFromDomElem(n, t, e);
                    },
                    unbindFrom: function(t, i, n) {
                        var o = arguments.length;
                        return 1 === o ? (i = t, t = this.domElem) : 2 === o && e.isFunction(i) ? (n = i, i = t, t = this.domElem) : 'string' == typeof t && (t = this.elem(t)), this.unbindFromDomElem(t, i, n);
                    },
                    _buildEventName: function(t) {
                        var e = this;
                        return t.indexOf(' ') > 1 ? t.split(' ').map(function(t) {
                            return e._buildOneEventName(t);
                        }).join(' ') : e._buildOneEventName(t);
                    },
                    _buildOneEventName: function(t) {
                        var e = this._eventNameCache;
                        if (t in e) return e[t];
                        var i = '.' + this._uniqId;
                        if (-1 === t.indexOf('.')) return e[t] = t + i, e[t];
                        var n = '.bem_' + this.__self._name;
                        return e[t] = t.split('.').map(function(t, e) {
                            return 0 === e ? t + n : n + '_' + t;
                        }).join('') + i, e[t];
                    },
                    _trigger: function(t, e) {
                        this.__base.apply(this, arguments), this._ctxTrigger(t, e);
                    },
                    _ctxTrigger: function(t, i) {
                        var n = this,
                            o = c[n.__self._buildCtxEventName(t.type)],
                            s = {};
                        o && n.domElem.each(function() {
                            for (var r = this, a = o.counter; r && a;) {
                                var c = e.identify(r, !0);
                                if (c) {
                                    if (s[c]) break;
                                    var h = o.ctxs[c];
                                    h && (e.each(h, function(e, o) {
                                        o.fn.call(o.ctx || n, t, i);
                                    }), a--), s[c] = !0;
                                }
                                r = r.parentNode;
                            }
                        });
                    },
                    getMods: function(t) {
                        var e = t && 'string' != typeof t,
                            n = this._modCache,
                            o = [].slice.call(arguments, e ? 1 : 0),
                            s = this._extractMods(o, e ? t : i);
                        return e || (o.length ? o.forEach(function(t) {
                            n[t] = s[t];
                        }) : n = s), s;
                    },
                    setMod: function(t, i, n) {
                        if (t && void 0 !== n && t.length > 1) {
                            var o = this;
                            return t.each(function() {
                                var s = e(this);
                                s.__bemElemName = t.__bemElemName, o.setMod(s, i, n);
                            }), o;
                        }
                        return this.__base(t, i, n);
                    },
                    _extractModVal: function(t, e, i) {
                        var n, o = (e || this.domElem)[0];
                        return o && (n = o.getAttribute('class').match(this.__self._buildModValRE(t, i || e))), n ? n[2] || !0 : '';
                    },
                    _extractMods: function(t, e) {
                        var i = {},
                            n = !t.length,
                            o = 0;
                        return ((e || this.domElem).eq(0).attr('class').match(this.__self._buildModValRE('(' + (n ? d : t.join('|')) + ')', e, 'g')) || []).forEach(function(t) {
                            var e = t.match(p);
                            i[e[1]] = e[2] || !0, ++o;
                        }), o < t.length && t.forEach(function(t) {
                            t in i || (i[t] = '');
                        }), i;
                    },
                    _afterSetMod: function(t, i, n, o, s) {
                        if (this._isDestructing) return this.__base.apply(this, arguments);
                        var r = this.__self,
                            a = r._buildModClassPrefix(t, s),
                            c = r._buildModValRE(t, s, 'g'),
                            h = '' === i || !1 === i;
                        (o || this.domElem).each(function() {
                            var t = e(this),
                                o = t.attr('class'),
                                s = a;
                            !0 !== i && (s += m + i), (!0 === n ? c.test(o) : (' ' + o).indexOf(' ' + a + m) > -1) ? t.attr('class', o.replace(c, h ? '' : '$1' + s)) : h || t.addClass(s);
                        }), s && this.dropElemCache(s, t, n).dropElemCache(s, t, i), this.__base.apply(this, arguments);
                    },
                    findElem: function(t, e, i, n) {
                        arguments.length % 2 ? (n = i, i = e, e = t, t = this.domElem) : 'string' == typeof t && (t = this.findElem(t)), e = e.split(' ');
                        var o = this.__self.getName(),
                            s = _(i, n),
                            r = [],
                            a = e.map(function(t) {
                                return r.push('.' + g(o, t, i, n)), t + s;
                            }),
                            c = 1 === a.length,
                            h = E(t, r.join(','));
                        return t === this.domElem && r.forEach(function(t, i) {
                            (this._elemCache[a[i]] = c ? h : h.filter(t)).__bemElemName = e[i];
                        }, this), h;
                    },
                    _elem: function(t, e, i) {
                        return this._elemCache[t + _(e, i)] || this.findElem(t, e, i);
                    },
                    elem: function(t, i, n) {
                        if (2 === arguments.length && (n = !0), i && 'string' != typeof i) return i.__bemElemName = t, i;
                        if (t.indexOf(' ') < 0) return this._elem(t, i, n);
                        var o = e([]);
                        return t.split(' ').forEach(function(t) {
                            o = o.add(this._elem(t, i, n));
                        }, this), o;
                    },
                    dropElemCache: function(t, e, i) {
                        if (t) {
                            var n = _(e, i);
                            t.indexOf(' ') < 0 ? delete this._elemCache[t + n] : t.split(' ').forEach(function(t) {
                                delete this._elemCache[t + n];
                            }, this);
                        } else this._elemCache = {};
                        return this;
                    },
                    elemParams: function(t) {
                        var e;
                        return 'string' == typeof t ? (e = t, t = this.elem(t)) : e = this.__self._extractElemNameFrom(t), M(t[0])[g(this.__self.getName(), e)] || {};
                    },
                    elemify: function(t, i) {
                        return (t = e(t)).__bemElemName = i, t;
                    },
                    containsDomElem: function(t) {
                        var e = !1;
                        return this.domElem.each(function() {
                            return !(e = t.parents().andSelf().index(this) > -1);
                        }), e;
                    },
                    buildSelector: function(t, e, i) {
                        return this.__self.buildSelector(t, e, i);
                    },
                    destruct: function(t) {
                        var i = this.__self;
                        this._isDestructing || (this._isDestructing = !0, this._needSpecialUnbind && i.doc.add(i.win).unbind('.' + this._uniqId), this.dropElemCache().domElem.each(function(t, i) {
                            var n = k(i);
                            e.each(n, function(t, e) {
                                var n = r[e.uniqId];
                                n ? n._isDestructing || T(n, i) : delete s[e.uniqId];
                            }), S(i);
                        }), t || this.domElem.remove(), this.__base(), delete r[this.un()._uniqId], delete this.domElem, delete this._elemCache);
                    }
                }, {
                    scope: null,
                    doc: o,
                    win: n,
                    html: e(document.documentElement),
                    _processLive: function(t) {
                        var e = this._liveInitable;
                        if ('live' in this && void 0 === e ^ t) {
                            e = !1 !== this.live();
                            var i = this.getName(),
                                n = this.live;
                            this.live = function() {
                                return this.getName() === i ? e : n.apply(this, arguments);
                            };
                        }
                        return e;
                    },
                    init: function(t, i, n) {
                        !t || e.isFunction(t) ? (n = i, i = t, t = o) : 'string' == typeof t && (t = e(t));
                        var s = e.identify();
                        return E(t, '.i-bem').each(function() {
                            ! function(t, i) {
                                var n = t[0];
                                e.each(k(n), function(o, s) {
                                    w(s, n, o, i);
                                    var a = r[s.uniqId];
                                    a ? a.domElem.index(n) < 0 && (a.domElem = a.domElem.add(t), e.extend(a._params, s)) : y(o, t, s);
                                });
                            }(e(this), s);
                        }), i && this.afterCurrentEvent(function() {
                            i.call(n || this, t);
                        }), this._runAfterCurrentEventFns(), t;
                    },
                    destruct: function(t, n, o) {
                        'boolean' != typeof t && (o = n, n = t, t = i), n && (b.call(E(n, '.i-bem', o)).each(function(t, i) {
                            var n = k(this);
                            e.each(n, function(t, e) {
                                if (e.uniqId) {
                                    var n = r[e.uniqId];
                                    n ? T(n, i) : delete s[e.uniqId];
                                }
                            }), S(this);
                        }), t || (o ? n.empty() : n.remove()));
                    },
                    update: function(t, e, i, n) {
                        return this.destruct(t, !0), this.init(t.html(e), i, n);
                    },
                    replace: function(t, i) {
                        return this.destruct(!0, t), this.init(e(i).replaceAll(t));
                    },
                    append: function(t, i) {
                        return this.init(e(i).appendTo(t));
                    },
                    prepend: function(t, i) {
                        return this.init(e(i).prependTo(t));
                    },
                    before: function(t, i) {
                        return this.init(e(i).insertBefore(t));
                    },
                    after: function(t, i) {
                        return this.init(e(i).insertAfter(t));
                    },
                    _buildCtxEventName: function(t) {
                        return this._name + ':' + t;
                    },
                    _liveClassBind: function(t, i, n, s) {
                        var r = this;
                        if (i.indexOf(' ') > -1) i.split(' ').forEach(function(e) {
                            r._liveClassBind(t, e, n, s);
                        });
                        else {
                            var a = h[i],
                                c = e.identify(n);
                            a || (a = h[i] = {}, o.bind(i, r._liveClassTrigger.bind(r))), c in (a = a[t] || (a[t] = {
                                uniqIds: {},
                                fns: []
                            })).uniqIds || (a.fns.push({
                                uniqId: c,
                                fn: r._buildLiveEventFn(n, s)
                            }), a.uniqIds[c] = a.fns.length - 1);
                        }
                        return this;
                    },
                    _liveClassUnbind: function(t, i, n) {
                        var o = h[i];
                        if (o)
                            if (n) {
                                if (o = o[t]) {
                                    var s = e.identify(n);
                                    if (s in o.uniqIds) {
                                        var r = o.uniqIds[s],
                                            a = o.fns.length - 1;
                                        for (o.fns.splice(r, 1); r < a;) o.uniqIds[o.fns[r++].uniqId] = r - 1;
                                        delete o.uniqIds[s];
                                    }
                                }
                            } else delete o[t];
                        return this;
                    },
                    _liveClassTrigger: function(t) {
                        var i = h[t.type];
                        if (i) {
                            var n = t.target,
                                o = Object.keys(i);
                            do {
                                for (var s, r = ' ' + n.className + ' ', a = 0; s = o[a++];)
                                    if (-1 !== r.indexOf(' ' + s + ' ')) {
                                        for (var c = !1, l = i[s].fns, u = 0; u < l.length; u++) !1 === l[u].fn.apply(e(n), arguments) && (c = !0);
                                        if (c && t.preventDefault(), c || t.isPropagationStopped()) return;
                                        o.splice(--a, 1);
                                    }
                            } while (o.length && (n = n.parentNode));
                        }
                    },
                    _buildLiveEventFn: function(t, i) {
                        var n = this;
                        return function(o) {
                            var s = [n._name, ((o.data || (o.data = {})).domElem = e(this)).closest(n.buildSelector()), !0],
                                r = y.apply(null, i ? s.concat([t, o]) : s);
                            if (r && !i && t) return t.apply(r, arguments);
                        };
                    },
                    liveInitOnEvent: function(t, e, i) {
                        return this.liveBindTo(t, e, i, !0);
                    },
                    liveBindTo: function(t, n, o, s) {
                        n && !e.isFunction(n) || (o = n, n = t, t = i), t && 'string' != typeof t || (t = {
                            elem: t
                        }), t.elemName && (t.elem = t.elemName);
                        var r = this;
                        return t.elem && t.elem.indexOf(' ') > 0 ? (t.elem.split(' ').forEach(function(e) {
                            r._liveClassBind(g(r._name, e, t.modName, t.modVal), n, o, s);
                        }), r) : r._liveClassBind(g(r._name, t.elem, t.modName, t.modVal), n, o, s);
                    },
                    liveUnbindFrom: function(t, n, o) {
                        n && !e.isFunction(n) || (o = n, n = t, t = i);
                        var s = this;
                        return t && t.indexOf(' ') > 1 ? (t.split(' ').forEach(function(t) {
                            s._liveClassUnbind(g(s._name, t), n, o);
                        }), s) : s._liveClassUnbind(g(s._name, t), n, o);
                    },
                    _liveInitOnBlockEvent: function(t, e, i, n) {
                        var o = this._name;
                        return l[e].on(t, function(t) {
                            if (t.block.domElem) {
                                var e = arguments,
                                    s = t.block[n](o);
                                i && s.forEach(function(t) {
                                    i.apply(t, e);
                                });
                            }
                        }), this;
                    },
                    liveInitOnBlockEvent: function(t, e, i) {
                        return this._liveInitOnBlockEvent(t, e, i, 'findBlocksOn');
                    },
                    liveInitOnBlockInsideEvent: function(t, e, i) {
                        return this._liveInitOnBlockEvent(t, e, i, 'findBlocksOutside');
                    },
                    on: function(t, e, i, n, o) {
                        return t.jquery ? this._liveCtxBind(t, e, i, n, o) : this.__base(t, e, i, n, o);
                    },
                    un: function(t, e, i, n) {
                        return t.jquery ? this._liveCtxUnbind(t, e, i, n) : this.__base(t, e, i);
                    },
                    liveCtxBind: function(t, e, i, n, o) {
                        return this._liveCtxBind(t, e, i, n, o);
                    },
                    _liveCtxBind: function(t, n, o, s, r) {
                        var a = this;
                        if ('object' == typeof n && (e.isFunction(o) || e.isFunction(s)) && (n = this._buildModEventName(n)), 'string' == typeof n)
                            if (e.isFunction(o) && (r = s, s = o, o = i), n.indexOf(' ') > -1) n.split(' ').forEach(function(e) {
                                a._liveCtxBind(t, e, o, s, r);
                            });
                            else {
                                var h = a._buildCtxEventName(n),
                                    l = c[h] || (c[h] = {
                                        counter: 0,
                                        ctxs: {}
                                    });
                                t.each(function() {
                                    var t = e.identify(this),
                                        i = l.ctxs[t];
                                    i || (i = l.ctxs[t] = {}, ++l.counter), i[e.identify(s) + (r ? e.identify(r) : '')] = {
                                        fn: s,
                                        data: o,
                                        ctx: r
                                    };
                                });
                            }
                        else e.each(n, function(e, i) {
                            a._liveCtxBind(t, e, i, o);
                        });
                        return a;
                    },
                    liveCtxUnbind: function(t, e, i, n) {
                        return this._liveCtxUnbind(t, e, i, n);
                    },
                    _liveCtxUnbind: function(t, i, n, o) {
                        'object' == typeof i && e.isFunction(n) && (i = this._buildModEventName(i));
                        var s = c[i = this._buildCtxEventName(i)];
                        return s && (t.each(function() {
                            var t, i = e.identify(this, !0);
                            i && (t = s.ctxs[i]) && (n && delete t[e.identify(n) + (o ? e.identify(o) : '')], n && !e.isEmptyObject(t) || (s.counter--, delete s.ctxs[i]));
                        }), s.counter || delete c[i]), this;
                    },
                    _extractElemNameFrom: function(t) {
                        if (t.__bemElemName) return t.__bemElemName;
                        var e = t.eq(0).attr('class').match(this._buildElemNameRE());
                        return e ? e[1] : i;
                    },
                    extractParams: M,
                    _buildModClassPrefix: function(t, e) {
                        return this._name + (e ? f + ('string' == typeof e ? e : this._extractElemNameFrom(e)) : '') + m + t;
                    },
                    _buildModValRE: function(t, e, i) {
                        return new RegExp('(\\s|^)' + this._buildModClassPrefix(t, e) + '(?:' + m + '(' + d + '))?(?=\\s|$)', i);
                    },
                    _buildElemNameRE: function() {
                        return new RegExp(this._name + f + '(' + d + ')(?:\\s|$)');
                    },
                    buildSelector: function(t, e, i) {
                        return '.' + g(this._name, t, e, i);
                    },
                    getBlockByUniqId: function(t) {
                        return r[t];
                    },
                    getWindowSize: function() {
                        return {
                            width: n.width(),
                            height: n.height()
                        };
                    }
                });
                e(function() {
                    t.DOM.scope = e('body');
                });
            }(BEM, jQuery),
            function(t) {
                var e = t(window),
                    i = o(),
                    n = s();

                function o() {
                    return window.innerHeight | 0 + e.outerHeight();
                }

                function s() {
                    return window.innerWidth | 0 + e.outerWidth();
                }(t.event.special.resize || (t.event.special.resize = {})).preDispatch = function(t) {
                    var e = o(),
                        r = s();
                    if (n === r && i === e) return !1;
                    i = e, n = r;
                };
            }(jQuery), $.extend({
                debounce: function(t, e, i, n) {
                    var o, s = function() {
                        var s = arguments;
                        n = n || this, i && !o && t.apply(n, s), clearTimeout(o), o = setTimeout(function() {
                            i || t.apply(n, s), o = null;
                        }, e);
                    };
                    return 3 === arguments.length && 'boolean' != typeof i && (n = i, i = !1), s.stop = function() {
                        clearTimeout(o), o = null;
                    }, s;
                },
                throttle: function(t, e, i) {
                    var n, o, s, r = function() {
                        o = arguments, s = !0, i = i || this, n || function() {
                            s ? (t.apply(i, o), s = !1, n = setTimeout(arguments.callee, e)) : n = null;
                        }();
                    };
                    return r.stop = function() {
                        clearTimeout(n), n = null;
                    }, r;
                }
            }), home.throttle = function(t, e, i) {
                var n, o, s, r = null,
                    a = 0;
                i || (i = {});
                var c = function() {
                    a = !1 === i.leading ? 0 : new Date().getTime(), r = null, s = t.apply(n, o), r || (n = o = null);
                };
                return function() {
                    var h = new Date().getTime();
                    a || !1 !== i.leading || (a = h);
                    var l = e - (h - a);
                    return n = this, o = arguments, l <= 0 || l > e ? (r && (clearTimeout(r), r = null), a = h, s = t.apply(n, o), r || (n = o = null)) : r || !1 === i.trailing || (r = setTimeout(c, l)), s;
                };
            }, home.cls = {
                full: function(t) {
                    return t;
                },
                part: function(t) {
                    return t;
                }
            }, BEM.decl('i-sight', {}, {
                THROTTLE_VIEW_PORT_CHECK: 200,
                DEBOUNCE_COUNTER_TIMEOUT: 200,
                TIMEOUT_TO_FIRST_CHECK: 250,
                BEFORE_EDGE_TYPE: 'BEFORE_EDGE_TYPE',
                FULL_EDGE_TYPE: 'FULL_EDGE_TYPE',
                COUNTER_EDGE_TYPE: 'COUNTER_EDGE_TYPE',
                BEFORE_BLOCK_CLASSES: ['imageloader', 'places', 'video-ads', 'block_viewed_no', 'infinity-zen'],
                FULL_BLOCK_CLASSES: ['news', 'tv', 'teaser_type_service', 'teaser_type_general', 'login-promo-card', 'login-promo-teaser', 'imageloader_tracking_yes', 'Fh_oJ_pB', 'Fh_oJ_s6'],
                FULL_BLOCKS_CLASSES_RATIO: {
                    news: 0.4,
                    tv: 0.4
                },
                BEFORE_GAP: 300,
                MIN_BLOCK_VISIBLE_TIME: 400,
                IGNORED_BLOCKS: {
                    header: 1,
                    logo: 1,
                    search: 1,
                    tab: 1,
                    informer: 1,
                    notif: 1,
                    'video-ads': 1,
                    'plus-promo': 1
                },
                _sentCache: {},
                _blocksToLog: [],
                _blocksToShow: [],
                _blockBecameVisible: {},
                _blockShowMark: {},
                _firstUsageTime: 0,
                _maxBlockHeight: 0,
                initBlock: function(t) {
                    this._counterActive = home.getData('statlog.config.enabled', !1), this._verticalEdges = null, this._isActive = !0, this._updateFirstUsageTime(), this._addListeners(), t && this._setFirstCheck();
                },
                destruct: function() {
                    clearTimeout(this.initialTimeout), this._removeListeners();
                },
                _setFirstCheck: function() {
                    this.initialTimeout = setTimeout(function() {
                        var t = $(window).scrollTop();
                        this._throttleCheckSight(t);
                    }.bind(this), this.TIMEOUT_TO_FIRST_CHECK);
                },
                _addListeners: function() {
                    this._debounceSendLogScroll = $.debounce(this._sendLogScroll, this.DEBOUNCE_COUNTER_TIMEOUT), this._debounceSetMarkShow = $.debounce(this._setMarkShow, this.MIN_BLOCK_VISIBLE_TIME), this._throttleCheckSight = home.throttle(this._checkSight.bind(this), this.THROTTLE_VIEW_PORT_CHECK, {
                        leading: !1
                    }), this.enableListener = function() {
                        this._isActive = !0, this._verticalEdges = null, this._onShow();
                    }, this.disableListener = function() {
                        this._isActive = !1, this._onHide();
                    }, BEM.channel('i-sight').on({
                        enable: this.enableListener,
                        disable: this.disableListener
                    }, this), this.heightListener = function() {
                        this._updateFirstUsageTime(), this._verticalEdges = null, this._throttleCheckSight(BEM.DOM.win.scrollTop());
                    }, BEM.channel('i-height-event').on('change', this.heightListener, this), this.edgesListener = function() {
                        this._verticalEdges = null, this._throttleCheckSight(BEM.DOM.win.scrollTop());
                    }, BEM.channel('i-sight').on('edges-update', this.edgesListener, this), this.scrollListener = function(t, e) {
                        this._updateFirstUsageTime(), this._throttleCheckSight(e);
                    }, BEM.channel('i-scroll-event').on('scroll', this.scrollListener, this), this.unloadListener = this._onHide.bind(this), BEM.DOM.win.on('beforeunload', this.unloadListener), BEM.DOM.win.on('unload', this.unloadListener), BEM.channel('sys').on('visibilitychange', this._onVisibilityChange, this);
                },
                _removeListeners: function() {
                    BEM.channel('i-sight').un('enable', this.enableListener, this), BEM.channel('i-sight').un('disable', this.disableListener, this), BEM.channel('i-height-event').un('change', this.heightListener, this), BEM.channel('i-sight').un('edges-update', this.edgesListener, this), BEM.channel('i-scroll-event').un('scroll', this.scrollListener, this), BEM.DOM.win.off('beforeunload', this.unloadListener), BEM.DOM.win.off('unload', this.unloadListener), BEM.channel('sys').un('hidden', this._onVisibilityChange, this), this._counterActive = this._debounceSendLogScroll = this._throttleCheckSight = this._verticalEdges = this.initialTimeout = undefined, this.enableListener = this.disableListener = this.heightListener = this.edgesListener = this.scrollListener = this.unloadListener = undefined;
                },
                _updateFirstUsageTime: function() {
                    0 === this._firstUsageTime && (this._firstUsageTime = Date.now());
                },
                _getBlocksFromNames: function() {
                    var t = 'Fh_oJ_pB',
                        e = 'Fh_oJ_s6',
                        i = [],
                        n = this;
                    return $('[data-blockname], .' + t + ', .' + e).each(function() {
                        var o = $(this);
                        (o.hasClass(e) ? 'directfeed_2.card' : o.hasClass(t) ? 'directfeed.card' : o.data('blockname')) in n.IGNORED_BLOCKS || i.push({
                            domElem: o
                        });
                    }), i;
                },
                _getBlocksFromClasses: function(t) {
                    var e = [];
                    return t.forEach(function(t) {
                        $('.' + t).each(function() {
                            e.push({
                                triggerCls: t,
                                domElem: $(this)
                            });
                        });
                    }), e;
                },
                _getEdgesFromBlocks: function(t, e) {
                    var i = [];
                    return t.forEach(function(t) {
                        var n = t.domElem,
                            o = n.attr('data-blockname'),
                            s = t.triggerCls,
                            r = $.identify(n[0]);
                        o || s || (o = n.hasClass('Fh_oJ_pB') ? 'directfeed.card' : 'directfeed_2.card');
                        var a = s + e + r,
                            c = n.offset().top,
                            h = c + n.outerHeight(!0);
                        if (c !== h && n.is(':visible')) {
                            e === this.BEFORE_EDGE_TYPE && (c -= this.BEFORE_GAP, h += this.BEFORE_GAP);
                            var l = {
                                hashKey: a,
                                type: e,
                                height: h - c,
                                trigger: s || o,
                                domElem: n,
                                top: c,
                                bottom: h
                            };
                            i.push({
                                data: l,
                                top: c
                            }), i.push({
                                data: l,
                                bottom: h
                            }), this._maxBlockHeight = Math.max(this._maxBlockHeight, h - c);
                        }
                    }, this), i;
                },
                _compareEdgesSearch: function(t, e) {
                    return t - (e.top || e.bottom || 0);
                },
                _lowerBound: function(t, e, i) {
                    for (var n = 0, o = t.length - 1 - n; o > 0;) {
                        var s = Math.floor(o / 2),
                            r = n + s;
                        i(e, t[r]) > 0 ? (n = r + 1, o -= s + 1) : o = s;
                    }
                    return n;
                },
                _handleIntersectEdges: function(t, e) {
                    var i = this._maxBlockHeight,
                        n = BEM.blocks['i-globalstate'].height(),
                        o = e + n,
                        s = i > n ? e + i : o,
                        r = Date.now(),
                        a = this._lowerBound(t, e, this._compareEdgesSearch),
                        c = this._lowerBound(t, s, this._compareEdgesSearch);
                    c === t.length - 1 && (c = t.length), this._blocksToShow = [];
                    var h = this._blockBecameVisible;
                    for (var l in this._blockBecameVisible = {}, t.slice(a, c).forEach(function(t) {
                            var i = t.data.trigger,
                                n = Math.min(o, t.data.bottom) - Math.max(e, t.data.top);
                            n <= 0 || (t.data.intersectRatio = n / t.data.height, t.data.type === this.COUNTER_EDGE_TYPE && t.data.intersectRatio >= 0.5 && !this._blockBecameVisible[i] && (this._blockBecameVisible[i] = h[i] || r, this._blockShowMark[i] || (r - this._blockBecameVisible[i] > this.MIN_BLOCK_VISIBLE_TIME ? (this._blockShowMark[i] = !0, this._debounceLogScroll({
                                type: 'realshow',
                                trigger: i
                            })) : this._debounceMarkShowed(i))), this._tryTriggerEvent(t));
                        }, this), h) {
                        if (h.hasOwnProperty(l)) this._blockBecameVisible.hasOwnProperty(l) || (this._logBlockHide(l, h[l]), h[l] = 0);
                    }
                },
                _sendLogScroll: function() {
                    this._blocksToLog.forEach(function(t) {
                        'realshow' === t.type ? home.stat.logPath('show', t.trigger + '.realshow') : home.stat.logPath('watch', t.trigger + '.longwatch(timems=' + t.visibleTime + ')');
                    }), home.stat.flushQueue(), this._blocksToLog = [];
                },
                _debounceLogScroll: function(t) {
                    this._blocksToLog.push(t), this._debounceSendLogScroll();
                },
                _debounceMarkShowed: function(t) {
                    this._blocksToShow.push(t), this._debounceSetMarkShow();
                },
                _setMarkShow: function() {
                    if (this._blocksToShow.length) {
                        for (var t = 0; t < this._blocksToShow.length; ++t) {
                            var e = this._blocksToShow[t];
                            this._blockShowMark[e] || (this._blockShowMark[e] = !0, this._blocksToLog.push({
                                type: 'realshow',
                                trigger: e
                            }));
                        }
                        this._blocksToShow = [], this._debounceSendLogScroll();
                    }
                },
                _tryTriggerEvent: function(t) {
                    var e = t.data.hashKey,
                        i = t.data.type,
                        n = t.data.intersectRatio,
                        o = t.data.trigger;
                    if (!this._sentCache[e]) switch (i) {
                        case this.BEFORE_EDGE_TYPE:
                            if (0 === n) break;
                            BEM.channel('i-sight').trigger(o + ':before', t.data.domElem), this._sentCache[e] = !0;
                            break;
                        case this.FULL_EDGE_TYPE:
                            if (n < (this.FULL_BLOCKS_CLASSES_RATIO[o] || 0.9)) break;
                            BEM.channel('i-sight').trigger(o + ':full', t.data.domElem), this._sentCache[e] = !0;
                    }
                },
                _compareEdges: function(t, e) {
                    var i = (t.top || t.bottom || 0) - (e.top || e.bottom || 0);
                    return i || (t.hasOwnProperty('top') ? 1 : -1);
                },
                _getVerticalEdges: function(t) {
                    var e = [],
                        i = this._getBlocksFromClasses(this.FULL_BLOCK_CLASSES),
                        n = this.BEFORE_BLOCK_CLASSES,
                        o = this._getBlocksFromClasses(n),
                        s = t ? this._getBlocksFromNames() : [];
                    return this._maxBlockHeight = 0, e = e.concat(this._getEdgesFromBlocks(i, this.FULL_EDGE_TYPE), this._getEdgesFromBlocks(o, this.BEFORE_EDGE_TYPE), this._getEdgesFromBlocks(s, this.COUNTER_EDGE_TYPE));
                },
                _checkSight: function(t) {
                    this._verticalEdges || (this._verticalEdges = this._getVerticalEdges(this._counterActive).sort(this._compareEdges)), this._isActive && this._handleIntersectEdges(this._verticalEdges, t);
                },
                _onHide: function() {
                    for (var t in this._blockBecameVisible) this._blockBecameVisible.hasOwnProperty(t) && this._logBlockHide(t, this._blockBecameVisible[t]);
                    this._sendLogScroll(), this._blockBecameVisible = {}, this._firstUsageTime = 0;
                },
                _onShow: function() {
                    this._updateFirstUsageTime(), this._throttleCheckSight(BEM.DOM.win.scrollTop());
                },
                _logBlockHide: function(t, e) {
                    if (this._blockShowMark[t]) {
                        var i = Date.now() - Math.max(e, this._firstUsageTime);
                        i < this.MIN_BLOCK_VISIBLE_TIME || this._debounceLogScroll({
                            type: 'longwatch',
                            trigger: t,
                            visibleTime: i
                        });
                    }
                },
                _onVisibilityChange: function(t, e) {
                    e && e.hidden ? this._onHide() : this._onShow();
                }
            }), BEM.blocks['i-sight'].initBlock(!0), r = function() {
                var t;
                o === undefined && (t = $(window), o = t.width(), s = t.height(), t.on('mresize', function() {
                    var e = t.width(),
                        i = t.height();
                    e !== o && (o = e, BEM.channel('i-globalstate').trigger('width', o)), i !== s && (s = i, BEM.channel('i-globalstate').trigger('height', s));
                }));
            }, BEM.decl('i-globalstate', {}, {
                width: function() {
                    return r(), o;
                },
                height: function() {
                    return r(), s;
                }
            }),
            function() {
                var t = $(window),
                    e = 0,
                    i = 0,
                    n = $('html'),
                    o = s();

                function s() {
                    return n.hasClass('i-ua_orient_portrait') ? 0 : 1;
                }
                t.on('resize orientationchange', function() {
                    var n = window.innerWidth,
                        r = window.innerHeight,
                        a = s();
                    n === e && r === i || (e = n, i = r, t.trigger('mresize', {
                        width: e,
                        height: i
                    })), a !== o && (o = a, t.trigger('morientationchange', {
                        orientation: o
                    }));
                });
            }(),
            function() {
                var t = !1;
                try {
                    var e = Object.defineProperty({}, 'passive', {
                        get: function() {
                            t = !0;
                        }
                    });
                    window.addEventListener('test', null, e);
                } catch (i) {}
                BEM.DOM.decl('i-ua', {}, {
                    passiveEvents: t
                });
            }(), a = home.getData('i-ua2.data', {}), c = a.osVersion, BEM.DOM.decl('i-ua', {}, {
                ios: !!a.isIOS && c,
                android: !!a.isAndroid && c,
                wp: !!a.isWP && c,
                opera: window.opera ? parseInt(window.opera.version(), 10) : undefined
            }), BEM.decl('i-scroll-event', {}, {
                init: function() {
                    var t = BEM.channel('i-scroll-event'),
                        e = home.throttle(function() {
                            var e = $(n).scrollTop();
                            t.trigger('scroll', e);
                        }, 100),
                        i = !!BEM.blocks['i-ua'].passiveEvents && {
                            passive: !0
                        },
                        n = this.getScrollElem(),
                        o = function(t) {
                            var o = 'scroll' === t ? n : window;
                            'addEventListener' in window ? o.addEventListener(t, e, i) : o.attachEvent('on' + t, e);
                        };
                    o('scroll'), o('resize'), o('orientationchange');
                },
                getScrollElem: function() {
                    return window;
                }
            }), setTimeout(function() {
                BEM.blocks['i-scroll-event'].init();
            }, 0), Date.now || (Date.now = function() {
                return new Date().getTime();
            }),
            function(t) {
                BEM.decl('i-visibilitychange', {
                    init: function() {
                        var e = t.document,
                            i = this.changeThis(this.normalize);
                        this.hiddenProp = 'hidden', this.hiddenProp in e ? e.addEventListener('visibilitychange', this.changeThis(function() {
                            this.change(e.hidden);
                        })) : (this.hiddenProp = 'mozHidden') in e ? e.addEventListener('mozvisibilitychange', i) : (this.hiddenProp = 'webkitHidden') in e ? e.addEventListener('webkitvisibilitychange', i) : (this.hiddenProp = 'msHidden') in e ? e.addEventListener('msvisibilitychange', i) : 'onfocusin' in e ? e.onfocusin = e.onfocusout = i : t.onpageshow = t.onpagehide = t.onfocus = t.onblur = i;
                    },
                    normalize: function(e) {
                        var i, n = t.document,
                            o = {
                                focus: !1,
                                focusin: !1,
                                pageshow: !1,
                                blur: !0,
                                focusout: !0,
                                pagehide: !0
                            };
                        i = (e = e || t.event).type in o ? o[e.type] : n[this.hiddenProp], n.hidden = i, $(t).trigger('visibilitychange'), this.change(i);
                    },
                    change: function(t) {
                        this.channel('sys').trigger('visibilitychange', {
                            hidden: t
                        }), this.channel('sys').trigger(t ? 'hidden' : 'visible');
                    }
                }), BEM.create('i-visibilitychange').init();
            }(window), $(function() {
                var t = $('.i-delayed-bem');
                if (t.length) {
                    var e = window.requestIdleCallback || function(t) {
                            setTimeout(t, 0);
                        },
                        i = {
                            timeout: 200
                        },
                        n = function() {
                            var o;
                            t.length ? $(window).scrollTop() > 300 ? (t.addClass('i-bem'), BEM.DOM.init(t), Ya.Rum.sendTimeMark('2295.2938'), t = $()) : (o = t.eq(0), t = t.slice(1), o.addClass('i-bem'), BEM.DOM.init(o), e(n, i)) : Ya.Rum.sendTimeMark('2295.2938');
                        };
                    e(n, i);
                }
            }),
            function() {
                var t, e, i = {},
                    n = {},
                    o = /([^.(]+)(?:\(([^)]*)\))?\.?/g,
                    s = /^([^=]+)=(.+)$/,
                    r = {
                        show: !0
                    };
                home.stat = {}, home.stat.attr = 'data-statlog', home.stat.brfix = 1, home.stat.getCustomPageParams = function() {
                    var t = home && home.getData && home.getData('redir-stats.data') || '',
                        e = '',
                        i = '';
                    window.Ya && Ya.Rum && (e += '/timefs=' + Math.floor(Ya.Rum.getTime()));
                    var n = home.getData ? home.getData('timing.vars') : '';
                    return n && (n[1964] ? i = '/mexp=0' : n[1965] && (i = '/mexp=1')), t + e + i;
                };
                home.stat._sendPost = function(e, i, n) {
                    var o;
                    if ('XDomainRequest' in window ? o = new XDomainRequest() : 'XMLHttpRequest' in window && (o = new XMLHttpRequest()), o) {
                        o.open('post', n || t, !0), o.withCredentials = !0;
                        try {
                            o.setRequestHeader('Accept', 'text/plain, */*; q=0.01'), o.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
                        } catch (s) {}
                        i && ('onreadystatechange' in o ? o.onreadystatechange = function() {
                            4 === o.readyState && i();
                        } : o.onload = o.onerror = i), o.send(e);
                    }
                };
                var a, c = function(t) {
                        return '/dtype=clck' + home.stat.getCustomPageParams() + '/session_id=' + i.showId + '/events=' + encodeURIComponent(JSON.stringify(t.map(function(t) {
                            return {
                                event: t.type,
                                url: t.url,
                                'parent-path': i.statRoot,
                                blocks: t.array
                            };
                        }))).replace(/\*/g, '%2A') + '/*';
                    },
                    h = function(n) {
                        if (clearTimeout(a), e) {
                            var o = c(e);
                            ! function(e) {
                                if (i.useBeacon && 'sendBeacon' in navigator) return navigator.sendBeacon(t, e);
                            }(o) ? home.stat._sendPost(o, n): n && n(), e = null;
                        }
                    };
                home.stat.flushQueue = h;
                var l = function(t, e) {
                    var i = e,
                        n = [];
                    t.replace(o, function(t, e, i) {
                        n.push({
                            key: e,
                            params: i ? i.split(';') : []
                        });
                    });
                    for (var r = 0; r < n.length; ++r) {
                        var a, c = n[r].params,
                            h = n[r].key;
                        !i.some(function(t) {
                            if (t.ctag === h) return a = t, !0;
                        }) && (a = {
                            ctag: h
                        }, i.push(a)), c.length && c.forEach(function(t) {
                            var e = t.match(s);
                            a[e[1]] = decodeURIComponent(e[2]);
                        }), r + 1 < n.length && (i = a.children = a.children || []);
                    }
                    return e;
                };
                home.stat.logPath = function(t, o, s) {
                    var c, u, d;
                    if (s && 'clean' === s.mode && function(t) {
                            t && e && e.length && 0 === (e = e.filter(function(e) {
                                return e.type !== t;
                            })).length && (e = null);
                        }(t), s && s.customParams && (o += function(t) {
                            var e = [];
                            for (var i in t) t.hasOwnProperty(i) && e.push(i + '=' + encodeURIComponent(t[i]));
                            return e.length ? '(' + e.join(';') + ')' : '';
                        }(s.customParams)), i.enabled && t && o) {
                        if (e || (e = []), 'show' === t) {
                            if (o in n) return;
                            n[o] = !0;
                        }
                        r[t] && (d = function(t) {
                            if (!r[t]) throw new Error(t + ' is not mergeable type');
                            for (var i = 0; i < e.length; ++i)
                                if (e[i].type === t) return e[i];
                        }(t)), d = d || (e[e.length] = {
                            type: t,
                            url: s && s.url,
                            array: []
                        }), l(o, d.array), s && s.callback ? (h(c = function() {
                            u || (u = !0, s.callback());
                        }), s.callbackTimeout !== undefined && setTimeout(c, s.callbackTimeout)) : (clearTimeout(a), a = setTimeout(h, 0));
                    } else s && s.callback && setTimeout(s.callback, 0);
                }, home.stat.redirect = function(e, n) {
                    if (!i.enabled || !n) return !0;
                    var o, s, r = e.href;
                    if (i.useBeacon && 'sendBeacon' in navigator && (s = c([{
                            type: 'click',
                            url: r,
                            array: l(n, [])
                        }]), navigator.sendBeacon(t, s))) return !0;
                    if (i.delayedSend !== undefined) return home.stat.logPath('click', n, {
                        url: r,
                        callbackTimeout: i.delayedSend,
                        callback: function() {
                            location.href = r;
                        }
                    }), !1;
                    if ('_blank' === e.target) return s = c([{
                        type: 'click',
                        url: r,
                        array: l(n, [])
                    }]), home.stat._sendPost(s), !0;
                    if (!e.getAttribute('data-statlog-timeout') && -1 === r.indexOf('/lid=' + i.statRoot)) {
                        if (o = e.getAttribute('data-statlog-url')) e.href = o;
                        else {
                            var a = function(t) {
                                var e = [];
                                return {
                                    counter: t.replace(/\(([^)]+)\)/g, function(t, i) {
                                        return e.push(i.replace(/;/g, ',')), '';
                                    }),
                                    vars: e = e.length ? '/vars=' + e.join(',') : ''
                                };
                            }(n);
                            e.href = i.redirHost + 'redir/dtype=clck' + home.stat.getCustomPageParams() + '/lid=' + i.statRoot + '.' + a.counter + '/sid=' + i.showId + a.vars + '/rnd=' + (new Date().getTime() + Math.round(100 * Math.random())) + '/*data=' + encodeURIComponent('url=' + encodeURIComponent(r.match(/^http/) ? r : location.protocol + '//' + location.host + (r.match('^/') ? r : '/' + r)));
                        }
                        e.setAttribute('data-statlog-orig-href', r), e.setAttribute('data-statlog-timeout', setTimeout(function() {
                            e.href = r, e.removeAttribute('data-statlog-timeout'), e.removeAttribute('data-statlog-orig-href');
                        }, 500));
                    }
                    return !0;
                };
                var u = function(t) {
                    var e;
                    if (!t.getAttribute && 'length' in t) {
                        e = new Array(t.length);
                        for (var i = 0; i < t.length; ++i) e[i] = t[i];
                        return e;
                    }
                    return [t];
                };
                home.stat.collectShows = function(t, e) {
                    var i = [],
                        o = [];
                    return u(t).forEach(function(t) {
                        i = i.concat(u(t.querySelectorAll('[' + home.stat.attr + '], [data-stat-select]'))), (t.getAttribute(home.stat.attr) || t.getAttribute('data-stat-select')) && i.push(t);
                    }), i.forEach(function(t) {
                        var i = t.getAttribute(home.stat.attr) || t.getAttribute('data-stat-select'),
                            s = t.getAttribute('data-statlog-showed') || i in n,
                            r = !!t.getAttribute('data-statlog-precise');
                        i && !s && (!r || e && e.precise) && (e && !1 === e.visibilityCheck || function(t) {
                            return t && (0 !== t.offsetWidth || 0 !== t.offsetHeight);
                        }(t)) && o.push(i);
                    }), o;
                }, home.stat.logDOMShow = function(t, e) {
                    i.enabled && home.stat.collectShows(t, e).forEach(function(t) {
                        home.stat.logPath('show', t);
                    });
                }, home.stat._countShows = function(t) {
                    i.enabled && t.forEach(function(t) {
                        n[t] = !0;
                    });
                }, home.stat.clearShows = function() {
                    i.enabled && (n = {});
                }, home.stat.getRoot = function() {
                    return i.enabled && i.statRoot || '';
                }, home.stat.setCounter = function(t, e) {
                    u(t).forEach(function(t) {
                        t.setAttribute(home.stat.attr, e);
                    });
                };
                var d = function(t) {
                        var e, i = t.target || t.srcElement;
                        if ((t.which || t.button) < 2) {
                            for (; i && i !== document && !(e = i.getAttribute(home.stat.attr));) i = i.parentNode;
                            if (e && i) '0' !== i.getAttribute('data-statlog-redir') && i.href ? i.href && 'click' === t.type && !t.defaultPrevented && !1 !== t.returnValue && (home.stat.redirect(i, e) || ('preventDefault' in t ? t.preventDefault() : t.returnValue = !1)) : 'mousedown' === t.type && home.stat.logPath('click', e);
                        }
                    },
                    m = function(t, e) {
                        'addEventListener' in document ? document.addEventListener(t, e, !1) : document.attachEvent('on' + t, e);
                    },
                    f = function() {
                        i.enabled && (m('mousedown', d), m('click', d));
                    };
                home.subscribeData(function(e) {
                    i = e || home.getData('statlog.config', {}), t = i.clckDemonHost + 'counter', 'querySelectorAll' in document || (i.enabled = !1), f();
                }), home.stat.replaceBrackets = function(t) {
                    return t.replace(/\(/g, '%28').replace(/\)/g, '%29');
                }, home.stat._processClicks = d, home.stat._setConfig = function(e) {
                    t = (i = e).clckDemonHost + 'counter', n = {}, f();
                };
            }(),
            function() {
                var t = /^(?:(.*?):)?\/\/([^/?#\s]+)(\/?.*)$/,
                    e = /^(\/?[^?#\s]*)(?:\?([^#]+))?(?:#(.*))?$/;

                function i(t) {
                    var e = [];
                    if (!t) return '';
                    for (var i in t)
                        if (t.hasOwnProperty(i) && t[i] !== undefined && null !== t[i]) {
                            var n = t[i];
                            'object' != typeof n && (n = [n]);
                            for (var o = 0; o < n.length; ++o) e.push(encodeURIComponent(i) + ('' !== n[o] ? '=' + encodeURIComponent(n[o]) : ''));
                        }
                    return e.length ? '?' + e.join('&') : '';
                }
                home.parseSearch = function(t, e) {
                    return t.split('&').reduce(function(t, i) {
                        if (!i) return {};
                        var n, o, s = i.match(/([^=]*)=(.*)/);
                        return s ? (n = decodeURIComponent(s[1]), o = decodeURIComponent(s[2])) : (n = decodeURIComponent(i), o = ''), n in t && e ? ('string' == typeof t[n] && (t[n] = [t[n]]), t[n].push(o)) : t[n] = o, t;
                    }, {});
                }, home.parseUrl = function(i, n) {
                    var o, s = i.match(t);
                    if (s ? o = s[3].match(e) : (s = [], o = i.match(e)), !s && !o) throw new TypeError('Invalid url "' + i + '"');
                    var r = {
                        scheme: s[1] || '',
                        host: s[2] || '',
                        path: o && o[1] || '',
                        search: o && o[2] || '',
                        hash: o && o[3] || '',
                        query: {}
                    };
                    return r.query = home.parseSearch(r.search, n && n.multi), r;
                }, home.makeUrl = function(t) {
                    var e = '';
                    return !t.scheme || !t.host && t.path || (e += t.scheme + '://'), t.host && (t.scheme || (e += '//'), e += t.host), e && (t.path && 0 !== t.path.indexOf('/') || !t.path) && '/' !== e.charAt(e.length - 1) && (e += '/'), e += t.path || '', e += i(t.query), t.hash && (e += '#' + t.hash), e;
                }, home.addQueryToUrl = function(t, n) {
                    return t.replace(e, function(t, e, o, s) {
                        var r = o ? home.parseSearch(o) : {};
                        for (var a in n) n.hasOwnProperty(a) && (r[a] = n[a]);
                        return e + i(r) + (s ? '#' + s : '');
                    });
                };
            }(), h = Object.prototype.toString, home.ltgtFilter = function(t) {
                return String(t).replace(/</g, '&lt;').replace(/>/g, '&gt;');
            }, home.jsonFilter = function(t) {
                return String(t).replace(/[<>&\u2028\u2029]/g, function(t) {
                    switch (t) {
                        case '<':
                            return '\\u003c';
                        case '>':
                            return '\\u003e';
                        case '&':
                            return '\\u0026';
                        case '\u2028':
                            return '\\u2028';
                        case '\u2029':
                            return '\\u2029';
                    }
                    return '';
                });
            }, home.capitalize = function(t) {
                return t ? t[0].toUpperCase() + t.substr(1) : '';
            }, home.isXivaSupported = function(t) {
                return !t.EditMode && t.XivaUrl && !t.isOldIE && !t.isMSIE9;
            }, home.encodeParams = function(t) {
                return JSON.stringify(t).replace(/"/g, '\'');
            }, home.getJPathValue = function(t, e) {
                for (var i = t, n = e.split('.'), o = 0; i && i[n[o]] !== undefined;) i = i[n[o++]];
                return 'object' == typeof i ? '' : i;
            }, home.formatNumber = function(t, e, i) {
                if (isNaN(t)) return t;
                t += '', e = e || ',', i = i || '&nbsp;';
                var n = t.lastIndexOf('.'),
                    o = [],
                    s = '',
                    r = 0,
                    a = '';
                for (-1 !== n ? s = e + t.substr(n + 1) : n = t.length; --n > -1;) a = t[n] + a, 3 == ++r && (o.push(a), a = '', r = 0);
                return a && o.push(a), o.reverse().join(i) + s;
            }, home.deepExtend = function(t, e) {
                for (var i in e)
                    if ('__proto__' !== i && e.hasOwnProperty(i)) {
                        var n = e[i];
                        Array.isArray(n) ? (t[i] = Array.isArray(t[i]) ? t[i] : [], home.deepExtend(t[i], n)) : '[object Date]' === h.call(n) || 'object' != typeof n || null === n ? t[i] = n : (t[i] = '[object Object]' === h.call(t[i]) ? t[i] : {}, home.deepExtend(t[i], n));
                    }
                return t;
            }, home.rnd = function() {
                return String(Math.random()).substr(2);
            }, home.randomInteger = function(t, e) {
                var i = t + Math.random() * (e + 1 - t);
                return Math.floor(i);
            }, home.intersectionArrays = function(t, e) {
                return t && e ? t.filter(function(t) {
                    return -1 !== e.indexOf(t);
                }) : [];
            }, l = {}, u = {
                log: function(t) {
                    t.meta = t.meta || {}, t.meta.morda = home.getData('request.mordaContent'), l[t.message] || (l[t.message] = !0, setTimeout(function() {
                        delete l[t.message];
                        var e = this._prepareLogMessage(t);
                        this._sendErrorMessage(e, t);
                    }.bind(this), 0));
                },
                logError: function(t, e) {
                    this._rumLogError(t, e), e = this._createError(t, e), this.log(e);
                },
                logAjaxError: function(t, e, i, n) {
                    var o;
                    this._rumLogAjaxError(t, e, i, n);
                    var s = this._createError(t, n);
                    t.url && (o = home.parseUrl(t.url), s.url = o.host + o.path), s.sourceType = 'network', 'timeout' === i ? s.timeout = 1 : e.status && (s.status = e.status), this.log(s);
                },
                _prepareLogMessage: function(t) {
                    var e = t.message;
                    if (e += t.sourceType ? ',source_type:' + t.sourceType : '', e += t.source ? ',source:' + t.source : '', e += t.page ? ',page:' + t.page : '', 'network' === t.sourceType && (e += (t.timeout ? ',timeout:' + t.timeout : '') + (t.status ? ',status:' + t.status : '') + (t.url ? ',url:' + t.url : '')), t.meta) try {
                        e += ',meta:' + JSON.stringify(t.meta);
                    } catch (i) {}
                    return e;
                },
                _createError: function(t, e) {
                    var i;
                    return t = t || {}, (e = e || {}) instanceof Error ? i = e : ((i = new Error()).name = 'blockerror', i.justCreated = !0, i.meta = e.meta), i.message = [t.message, e.message].filter(Boolean).join('->'), i.message || (i.message = t.method), t.sourceType && (i.sourceType = t.sourceType), t.block && (i.block = t.block.replace(/-/g, '_')), t.page && (i.page = t.page), t.source && (i.source = t.source), t.meta && (i.meta = t.meta), t.timeout && (i.timeout = t.timeout), i.forceStack = t.forceStack, i;
                },
                _sendErrorMessage: function(t, e) {
                    var i, n = '',
                        o = 'blockerror' === e.name;
                    o && !e.forceStack || !e.stack || (i = e.justCreated ? 2 : 0, n = '&trace=' + encodeURIComponent(e.stack.split('\n').slice(1 + i, 7 + i).join('->').replace(/\s+/g, ' ').replace(/https:\/\/([^.]+\.)?yastatic.net\/s3\/home-static/, '$1'))), this._awaitData().then(function() {
                        var i = home.getData('request.Requestid'),
                            s = home.getData('request.devInstance'),
                            r = home.getData('request.hermione'),
                            a = home.getData('request.blockErrorEnabled'),
                            c = home.getData('request.clientErrorPath');
                        a && this._shouldReport() && (new Image().src = (c + '?type=blockerror&showid=%reqid%&subtype=%block%&message=%message%' + n).replace('%reqid%', i).replace('%message%', encodeURIComponent(t)).replace('%block%', e.block || 'unknown').replace(/\s+/g, ' ')), !s || o && r || (console.error(e), e.meta && console.log(e.meta));
                    }.bind(this));
                },
                _awaitData: function() {
                    return this._awaitDataPromise || (this._awaitDataPromise = new Promise(function(t) {
                        home.subscribeData(t);
                    })), this._awaitDataPromise;
                },
                _shouldReport: function() {
                    var t = +new Date();
                    return !this._ts || t - this._ts > 10000 ? (this._ts = t, this._counter = 1, !0) : this._counter++ < 10 || void 0;
                },
                setProject: function(t) {
                    this._checkRumErrorCounter() && Ya.Rum.updateErrors({
                        project: t
                    });
                },
                restoreDefaultProject: function() {
                    if (this._checkRumErrorCounter()) {
                        for (var t, e = Ya.Rum.getVarsList(), i = 0; i < e.length && (t = e[i].split('=')) && '-project' !== t[0];) i++;
                        '-project' === t[0] && t[1] && this.setProject(t[1]);
                    }
                },
                _rumLogError: function(t, e) {
                    this._checkRumErrorCounter() && Ya.Rum.logError(this._prepareRumOptions(t), e);
                },
                _rumLogAjaxError: function(t, e, i, n) {
                    this._checkRumErrorCounter() && (t.message || (t.message = t.method ? t.method + ' ajax' : 'AjaxError'), Ya.Rum.logAjaxError(this._prepareRumOptions(t), e, i, n));
                },
                _prepareRumOptions: function(t) {
                    var e = {};
                    return t.message && (e.message = t.message), t.block && (e.block = t.block), t.method && (e.method = t.method), t.level && (e.level = t.level), t.sourceType && (e.type = t.sourceType), t.source && (e.source = t.source), t.sourceMethod && (e.sourceMethod = t.sourceMethod), t.meta && (e.additional = t.meta), t.url && (e.additional = e.additional || {}, e.additional.url = t.url), e;
                },
                _checkRumErrorCounter: function() {
                    return !!window.Ya && window.Ya.Rum && window.Ya.Rum.logError;
                }
            }, home.error = function(t) {
                u.logError.bind(u)({
                    message: t
                });
            }, home.deepExtend(home.error, u), Function.prototype.bind || (Function.prototype.bind = function(t) {
                var e = this;
                return function() {
                    return e.apply(t, arguments);
                };
            }),
            function(t) {
                var e = setTimeout;

                function i() {}

                function n(t) {
                    if ('object' != typeof this) throw new TypeError('Promises must be constructed via new');
                    if ('function' != typeof t) throw new TypeError('not a function');
                    this._state = 0, this._handled = !1, this._value = undefined, this._deferreds = [], c(t, this);
                }

                function o(t, e) {
                    for (; 3 === t._state;) t = t._value;
                    0 !== t._state ? (t._handled = !0, n._immediateFn(function() {
                        var i = 1 === t._state ? e.onFulfilled : e.onRejected;
                        if (null !== i) {
                            var n;
                            try {
                                n = i(t._value);
                            } catch (o) {
                                return void r(e.promise, o);
                            }
                            s(e.promise, n);
                        } else(1 === t._state ? s : r)(e.promise, t._value);
                    })) : t._deferreds.push(e);
                }

                function s(t, e) {
                    try {
                        if (e === t) throw new TypeError('A promise cannot be resolved with itself.');
                        if (e && ('object' == typeof e || 'function' == typeof e)) {
                            var i = e.then;
                            if (e instanceof n) return t._state = 3, t._value = e, void a(t);
                            if ('function' == typeof i) return void c(i.bind(e), t);
                        }
                        t._state = 1, t._value = e, a(t);
                    } catch (o) {
                        r(t, o);
                    }
                }

                function r(t, e) {
                    t._state = 2, t._value = e, a(t);
                }

                function a(t) {
                    2 === t._state && 0 === t._deferreds.length && n._immediateFn(function() {
                        t._handled || n._unhandledRejectionFn(t._value);
                    });
                    for (var e = 0, i = t._deferreds.length; e < i; e++) o(t, t._deferreds[e]);
                    t._deferreds = null;
                }

                function c(t, e) {
                    var i = !1;
                    try {
                        t(function(t) {
                            i || (i = !0, s(e, t));
                        }, function(t) {
                            i || (i = !0, r(e, t));
                        });
                    } catch (n) {
                        if (i) return;
                        i = !0, r(e, n);
                    }
                }
                n.prototype['catch'] = function(t) {
                    return this.then(null, t);
                }, n.prototype.then = function(t, e) {
                    var n = new this.constructor(i);
                    return o(this, new function(t, e, i) {
                        this.onFulfilled = 'function' == typeof t ? t : null, this.onRejected = 'function' == typeof e ? e : null, this.promise = i;
                    }(t, e, n)), n;
                }, n.all = function(t) {
                    var e = Array.prototype.slice.call(t);
                    return new n(function(t, i) {
                        if (0 === e.length) return t([]);
                        var n = e.length;

                        function o(s, r) {
                            try {
                                if (r && ('object' == typeof r || 'function' == typeof r)) {
                                    var a = r.then;
                                    if ('function' == typeof a) return void a.call(r, function(t) {
                                        o(s, t);
                                    }, i);
                                }
                                e[s] = r, 0 == --n && t(e);
                            } catch (c) {
                                i(c);
                            }
                        }
                        for (var s = 0; s < e.length; s++) o(s, e[s]);
                    });
                }, n.resolve = function(t) {
                    return t && 'object' == typeof t && t.constructor === n ? t : new n(function(e) {
                        e(t);
                    });
                }, n.reject = function(t) {
                    return new n(function(e, i) {
                        i(t);
                    });
                }, n.race = function(t) {
                    return new n(function(e, i) {
                        for (var n = 0, o = t.length; n < o; n++) t[n].then(e, i);
                    });
                }, n._immediateFn = 'function' == typeof setImmediate && function(t) {
                    setImmediate(t);
                } || function(t) {
                    e(t, 0);
                }, n._unhandledRejectionFn = function(t) {
                    'undefined' != typeof console && console && console.warn('Possible Unhandled Promise Rejection:', t);
                }, t.Promise || (t.Promise = n);
            }(window),
            function() {
                var t = {},
                    e = {};

                function i(t) {
                    var e = home.getData('bundles.data.host');
                    return e ? t.replace('//yastatic.net', e) : t;
                }
                home.bundles = home.bundles || {}, home.bundles.loaded = {}, home.bundles.load = function(n, o) {
                    if (t[n]) return t[n];
                    var s = home.getData('bundles.data');
                    if (home.getData('bundles.placed', []).indexOf(n) > -1) return t[n] = new Promise(function(t) {
                        e[n] = t;
                    }), t[n];
                    o = o || {};
                    var r = home.bundles.staticURL && home.bundles.staticURL[n];
                    return t[n] = Promise.race([new Promise(function(t, e) {
                        setTimeout(e, o.timeout || 10000);
                    }), Promise.all([new Promise(function(t) {
                        var e = s.root + '/' + s.page + '__' + n + '/_' + s.page + '__' + n + (s.cssSuffix || '') + '.css';
                        r && r['css' + (s.cssSuffix || '')] && (e = i(r['css' + (s.cssSuffix || '')])), home.loadCss(e, {
                            callback: t,
                            noFlash: !0
                        });
                    }), new Promise(function(t, o) {
                        var a = document.createElement('script');
                        e[n] = t, a.onerror = function() {
                            o(new Error('Failed to load js from bundle ' + n));
                        };
                        var c = s.root + '/' + s.page + '__' + n + '/_' + s.page + '__' + n + '.' + s.locale + (s.jsSuffix || '') + '.js';
                        r && r['js' + (s.jsSuffix || '')] && (c = i(r['js' + (s.jsSuffix || '')])), a.src = c, document.getElementsByTagName('head')[0].appendChild(a);
                    })])])['catch'](function(e) {
                        throw t[n] = null, e;
                    });
                }, home.bundles.notify = function(i) {
                    t[i] ? e[i] && e[i]() : t[i] = Promise.resolve(), t[i].then(function() {
                        home.bundles.loaded[i] = !0, home.bundles.initBlocks();
                    });
                };
            }(),
            function(t) {
                home.loadCss = function(e, i) {
                    var n = i || {},
                        o = function(e, i, n, o) {
                            var s, r = t.document,
                                a = r.createElement('link');
                            if (i) s = i;
                            else {
                                var c = (r.body || r.getElementsByTagName('head')[0]).childNodes;
                                s = c[c.length - 1];
                            }
                            var h = r.styleSheets;
                            a.rel = 'stylesheet', a.href = e, a.media = o ? n || 'all' : 'only x',
                                function d(t) {
                                    if (r.body) return t();
                                    setTimeout(function() {
                                        d(t);
                                    });
                                }(function() {
                                    s.parentNode.insertBefore(a, i ? s : s.nextSibling);
                                });
                            var l = function(t) {
                                for (var e = a.href, i = h.length; i--;)
                                    if (h[i].href === e) return t();
                                setTimeout(function() {
                                    l(t);
                                });
                            };

                            function u() {
                                a.addEventListener && a.removeEventListener('load', u), o || (a.media = n || 'all');
                            }
                            return a.addEventListener && a.addEventListener('load', u), a.onloadcssdefined = l, l(u), a;
                        }(e, n.before, n.media, n.noFlash);
                    n.callback && function(t, e) {
                        var i;

                        function n() {
                            !i && e && (i = !0, e.call(t));
                        }
                        t.addEventListener && t.addEventListener('load', n), t.attachEvent && t.attachEvent('onload', n), 'isApplicationInstalled' in navigator && 'onloadcssdefined' in t && t.onloadcssdefined(n);
                    }(o, n.callback);
                };
            }(i), 'undefined' != typeof home && home.loadManager && home.loadManager.trigger('js'), home.bundles.initBlocks = function() {
                $('.i-bundle-bem').each(function() {
                    var t = $(this),
                        e = t.data('bem'),
                        i = t.data('depBundle');
                    if (i) {
                        i = i.split(',');
                        for (var n = 0; n < i.length; ++n)
                            if (!home.bundles.loaded[i[n]]) return;
                    }
                    for (var o in e)
                        if (e.hasOwnProperty(o) && !(o in BEM.blocks)) return;
                    t.removeClass('i-bundle-bem').addClass('i-bem'), BEM.DOM.init(t);
                });
            }, home.htmlFilter = function(t) {
                var e = String(t);
                return e.indexOf('&') > -1 && (e = e.replace(/&/g, '&amp;')), e.indexOf('<') > -1 && (e = e.replace(/</g, '&lt;')), e.indexOf('>') > -1 && (e = e.replace(/>/g, '&gt;')), e.indexOf('"') > -1 && (e = e.replace(/"/g, '&quot;')), e;
            }, home.getBEMParams = function(t) {
                return home.htmlFilter(JSON.stringify(t));
            }, home.getBEMClassname = function(t, e) {
                var i = e.mods,
                    n = t,
                    o = i ? home.getBEMMods(t, i) : '';
                return e.mix && ('object' == typeof e.mix ? (Array.isArray(e.mix) || (e.mix = [e.mix]), n += ' ' + e.mix.map(function(e) {
                    var i = e.block || t,
                        n = e.mods;
                    return 'string' == typeof e ? e : (e.elem && (i += '__' + e.elem, n = e.elemMods), n && (i += ' ' + home.getBEMMods(i, n)), i);
                }).join(' ')) : n += ' ' + e.mix), o && (n += ' ' + o), n;
            }, home.getBEMMods = function(t, e) {
                var i, n = [];
                for (i in e) e.hasOwnProperty(i) && (e[i] || 0 === e[i]) && n.push(t + '_' + i + '_' + e[i]);
                return n.join(' ');
            }, home.emptyAttr = {}, home.getAttributes = function(t) {
                if (!t) return '';
                var e, i = '';
                for (e in t)
                    if (t.hasOwnProperty(e)) {
                        var n = t[e];
                        (n || 0 === n) && (n === home.emptyAttr ? i += ' ' + e : ((n = n.toString()).indexOf('"') > -1 && (n = n.replace(/"/g, '&quot;')), i += ' ' + e + '="' + n + '"'));
                    }
                return i;
            }, home.debug = function() {
                window.console && 'function' == typeof window.console.log && console.log.apply(console, arguments);
            }, home.error || (home.error = function() {
                window.console && 'function' == typeof window.console.error && console.error.apply(console, arguments);
            }), home.getTouchEvents = function(t) {
                var e = t.originalEvent;
                return e.touches && e.touches.length ? e.touches : e.changedTouches;
            }, home.getTouchEvent = function(t) {
                var e, i = home.getTouchEvents(t);
                return {
                    x: (e = i && i.length ? i[0] : t.originalEvent).pageX || e.clientX,
                    y: e.pageY || e.clientY
                };
            }, home.l10n = function(t) {
                for (var e = t.split('.'), i = home.lang, n = 0; n < e.length; ++n) {
                    if (!i || !i[e[n]]) return '';
                    i = i[e[n]];
                }
                return i;
            }, BEM.DOM.decl('i-geolocation', {}, {
                get: function(t, e) {
                    if (1 === arguments.length && (e = t, t = {}), (t = $.extend({
                            enableHighAccuracy: !0,
                            timeout: 15,
                            cacheTime: 15
                        }, t)).timeout *= 1000, t.maximumAge = 1000 * t.cacheTime * 60, delete t.cacheTime, 'geolocation' in navigator) {
                        var i = !1,
                            n = setTimeout(function() {
                                i = !0, e({
                                    error: 4
                                });
                            }, t.timeout + 300);
                        navigator.geolocation.getCurrentPosition(function(t) {
                            i || (clearTimeout(n), e(t));
                        }, function(t) {
                            i || (clearTimeout(n), e({
                                error: t.code
                            }));
                        }, t);
                    } else e({
                        error: 0
                    });
                }
            }),
            function() {
                var t = 2,
                    e = {
                        1: 'denied',
                        2: 'unavailable',
                        3: 'timeout',
                        4: 'accuracy',
                        5: 'oldcoords',
                        6: 'region_changed'
                    },
                    i = {};
                for (var n in e) e.hasOwnProperty(n) && (i[e[n]] = n);
                var o = function() {
                        var t;
                        try {
                            t = JSON.parse(home.localStorage.getItem('gpdates'));
                        } catch (e) {}
                        return t || [];
                    },
                    s = function(t, e) {
                        var i;
                        if ('object' == typeof t && 'object' == typeof e && null !== t && null !== e) {
                            for (i in t)
                                if (t.hasOwnProperty(i) && !e.hasOwnProperty(i)) return !1;
                            for (i in e)
                                if (e.hasOwnProperty(i) && !t.hasOwnProperty(i)) return !1;
                            for (i in t)
                                if (t.hasOwnProperty(i) && !s(t[i], e[i])) return !1;
                            return !0;
                        }
                        return t === e;
                    },
                    r = home.getData('geo.gidIsTrusted', !1);

                function a() {
                    return 'permissions' in navigator ? navigator.permissions.query({
                        name: 'geolocation'
                    }).then(function(t) {
                        if ('granted' !== (t.state || t.status)) return Promise.reject();
                        BEM.blocks['i-geolocation'].locateAndLoad({
                            background: !0
                        });
                    }) : home.getData('geo.forceGeolocation') && (home.localStorage.getItem('gpallowed') || home.getData('geo.gpAutoExists')) ? (BEM.blocks['i-geolocation'].locateAndLoad({
                        background: !0
                    }), !0) : void 0;
                }

                function c() {
                    var e = o(),
                        i = new Date() - 43200000;
                    if (home.getData('geo.iosSavePermission') && e.length === t && e[0] >= i) return BEM.blocks['i-geolocation'].locateAndLoad({
                        background: !0
                    }), !0;
                }

                function h() {
                    return BEM.channel('i-geolocation').trigger('showGeolocationPromo'), !0;
                }

                function l() {
                    var t = home.getData('geo.gpauto');
                    if (t) return BEM.blocks['i-geolocation'].setLocation(t), !0;
                }
                BEM.decl('i-geolocation', {}, {
                    _address: '',
                    _firstLocation: !0,
                    locate: function(t) {
                        return t = this._prepareOpts(t), this._wrapRequest(t, function() {
                            return this._locate(t);
                        });
                    },
                    locateAndLoad: function(t) {
                        return t = this._prepareOpts(t), this._requiredGeohelper && (t.geohelper = !0), this._wrapRequest(t, function() {
                            return this._locate(t).then(this.changeThis(function() {
                                if (this._requiredGeohelper) return !t.forceRegionChange && t.background && this._triggerEvent('visualStart', t), this._requestGeoData(t);
                            }));
                        });
                    },
                    getLocation: function() {
                        return this._location;
                    },
                    getLL: function() {
                        return this._location ? this._location.longitude + ',' + this._location.latitude : '';
                    },
                    getAddress: function() {
                        return this._address;
                    },
                    getGeodata: function() {
                        return this._geodata;
                    },
                    isLoading: function() {
                        return !!this._promise;
                    },
                    setLocation: function(t) {
                        var e = this._prepareOpts({
                            background: !0
                        });
                        return this._location = t, this._wrapRequest(e, function() {
                            return this._requestGeoData(e);
                        });
                    },
                    onChanged: function(t) {
                        for (var e in t) t.hasOwnProperty(e) && (this._callbacks || (this._callbacks = {}), this._callbacks[e] || (this._callbacks[e] = []), this._callbacks[e].push(t[e]), this._callbackData && this._callbackData[e] && setTimeout(function(e) {
                            t[e].apply(null, this._callbackData[e]);
                        }.bind(this, e), 0));
                    },
                    _init: function() {
                        ['visualStart', 'data', 'fail', 'gpsave'].forEach(function(t) {
                            BEM.channel('i-geolocation').on(t, function(e, i) {
                                this._callbacks && this._callbacks[t] && this._callbacks[t].forEach(function(t) {
                                    t(e, i);
                                }), this._callbackData || (this._callbackData = {}), this._callbackData[t] = [e, i];
                            }, this);
                        }, this);
                    },
                    _requiredGeohelper: home.getData('geo.geohelper', !1),
                    _requiredBlocks: Object.keys(home.getData('geo.geohelperBlocks', {})),
                    _prepareOpts: function(t) {
                        return (t = t || {}).background && (t.cacheGeohelper === undefined && (t.cacheGeohelper = !0), t.forceRegionChange === undefined && (t.forceRegionChange = !1)), t.forceRegionChange = !1 !== t.forceRegionChange, t.sameRegion = !1 !== t.sameRegion, t.highAccuracy = !1 !== t.highAccuracy, this._promise ? !t.forceRegionChange && t.background || this._opts.forceRegionChange || !this._opts.background || this._triggerEvent('visualStart', this._opts) : this._opts = t, t;
                    },
                    _wrapRequest: function(t, e) {
                        return this._promise ? this._promise : (this._triggerEvent('start', t), !t.forceRegionChange && t.background || this._triggerEvent('visualStart', t), this._promise = this._wrapEnd(t, e.call(this)), this._promise.always(this.changeThis(function() {
                            this._promise = undefined;
                        })), this._promise);
                    },
                    _wrapEnd: function(t, e) {
                        var i = this;
                        return e && e.then || (e = $.Deferred().resolve(e)), e.fail(function(e) {
                            i._triggerEvent('fail', t, e);
                        }).always(function() {
                            i._triggerEvent('end', t);
                        });
                    },
                    _createLocationError: function(t, e) {
                        var n = new Error();
                        return n.type = t, t in i && (n.code = i[t]), e && (n.data = e), n;
                    },
                    _triggerEvent: function(t, e, i) {
                        var n = $.Event(t);
                        for (var o in e) e.hasOwnProperty(o) && (n[o] = e[o]);
                        return this.channel('i-geolocation').trigger(n, i), this;
                    },
                    _extractCoords: function(t) {
                        return {
                            lon: t.longitude,
                            lat: t.latitude,
                            precision: t.accuracy
                        };
                    },
                    _locate: function(t) {
                        var e, i, n = this,
                            o = $.Deferred(),
                            s = home.getData('geo.' + (t.background ? 'background-' : '') + 'counters', {}),
                            r = !1;
                        try {
                            navigator.geolocation && navigator.geolocation.getCurrentPosition && (home.stat.logPath('tech', s.request), i = new Date(), e = 1000 * (t.timeout ? t.timeout : 15), navigator.geolocation.getCurrentPosition(function(e) {
                                var a;
                                r || (r = !0, e.timestamp && Math.abs(e.timestamp - i) > home.getData('geo.oldcoordsAge', 43200000) ? (a = n._createLocationError('oldcoords', $.extend(n._extractCoords(e.coords), {
                                    coordsTimestamp: e.timestamp,
                                    now: i.getTime()
                                })), t.city && BEM.blocks['bottom-popup'] && (BEM.blocks['bottom-popup'].show('geolocation-setup'), BEM.blocks['geolocation-setup'].showDefaultError())) : e.coords.accuracy > 2000 && !t.city && (a = n._createLocationError('accuracy', n._extractCoords(e.coords))), a ? n._saveError(a, new Date() - i, t).always(function() {
                                    o.reject(a);
                                }) : (BEM.channel('geodetection').trigger('coords', e.coords), n._saveLocation(e, new Date() - i, t).then(function(e) {
                                    return n._processSaveResult(e, t);
                                }).then(function() {
                                    home.stat.logPath('tech', s.success), o.resolve();
                                }, function(t) {
                                    o.reject(t);
                                })));
                            }, function(e) {
                                r || (r = !0, t.city && BEM.blocks['bottom-popup'] && (BEM.blocks['bottom-popup'].show('geolocation-setup'), 1 === e.code && BEM.blocks['geolocation-setup'].showGuideLinkInPopup()), e.type = 'locate', n._saveError(e, new Date() - i, t).always(function() {
                                    o.reject(e);
                                }));
                            }, {
                                timeout: e,
                                maximumAge: n._firstLocation ? 300000 : 0,
                                enableHighAccuracy: t.highAccuracy
                            }), setTimeout(function() {
                                if (!r) {
                                    r = !0;
                                    var e = n._createLocationError('timeout');
                                    n._saveError(e, new Date() - i, t).always(function() {
                                        o.reject(e);
                                    });
                                }
                            }, e), n._firstLocation = !1);
                        } catch (a) {
                            o.reject(a);
                        }
                        return o.promise();
                    },
                    _saveLocation: function(e, i, n) {
                        var s = o();
                        return s.push(+new Date()), s = s.slice(Math.max(0, s.length - t)), home.localStorage.setItem('gpdates', JSON.stringify(s)), home.localStorage.setItem('gpallowed', '1'), this._location = e.coords, this._saveAjax($.extend(this._extractCoords(e.coords), {
                            persistent: 1,
                            timing: i
                        }), n);
                    },
                    _saveError: function(t, i, n) {
                        var o;
                        return 1 === t.code ? home.localStorage.setItem('gpforbidden', '1') : home.localStorage.setItem('gpallowed', '1'), o = home.getData('geo.' + (n.background ? 'background-' : '') + 'counters.error', {}), home.stat.logPath('tech', o[e[t.code]]), this._saveAjax($.extend({
                            status: t.code,
                            timing: i
                        }, t.data || {}), n);
                    },
                    _processSaveResult: function(t, e) {
                        var i = home.getData('geo.' + (e.background ? 'background-' : '') + 'counters', {
                            error: {}
                        });
                        if (t) {
                            if ((t.should_reload || r && t.region_changed) && !e.forceRegionChange && e.sameRegion) return home.stat.logPath('tech', i.error.regionChanged), $.Deferred().reject(this._createLocationError('region_changed'));
                            if (t.poor_precision && e.city) return home.stat.logPath('tech', i.error.accuracyCity), BEM.blocks['bottom-popup'] && (BEM.blocks['bottom-popup'].show('geolocation-setup'), BEM.blocks['geolocation-setup'].showDefaultError()), $.Deferred().reject(this._createLocationError('accuracy'));
                            t.should_reload && e.sameRegion ? (home.stat.logPath('tech', i.reload, {
                                instant: !0,
                                callback: function() {
                                    var t = home.parseUrl(location.href);
                                    t.query.domredir = 1, location.href = home.makeUrl(t);
                                }
                            }), this._requiredGeohelper = !1) : (this._address = t.address, this._triggerEvent('gpsave', e, {
                                id: t.region_id,
                                locale: t.locale,
                                name: t.region_name,
                                address: t.address,
                                address_short: t.address_short
                            }));
                        }
                    },
                    _saveAjax: function(t, e) {
                        var i;
                        t.sk = home.getData('common.sk'), t.device = 0, t.laas = home.getData('common.laas') || 0, t.from_region = home.getData('geo.id');
                        var n = home.getData('geo.gpsaveUrl');
                        return e.forceRegionChange && (n = n.replace('/gpsave', '/mgpsave')), i = {
                            url: n,
                            dataType: 'json',
                            data: t
                        }, $.ajax(i).then(null, function(t, e, i) {
                            return home.error.logAjaxError({
                                block: 'i-geolocation',
                                message: '_saveAjax: ajax',
                                url: n,
                                source: 'geohelper'
                            }, t, e, i), this._createLocationError('fetch');
                        }.bind(this));
                    },
                    _getDataFromCache: function(t, e, i, n) {
                        var o, r = home.getData('common.version');
                        if (r && home.getData('geo.useLSCache') && this._location) {
                            o = home.localStorage.getItem('mgeodata');
                            try {
                                if ((o = JSON.parse(o)).version === r && o.latitude === this._location.latitude && o.longitude === this._location.longitude && o.homelatitude === n.lat && o.homelongitude === n.lon && o.geoId === e && o.locale === i && s(o.poiData, t) && s(o.blocks, this._requiredBlocks) && new Date() - new Date(o.dt) < 900000 && o.data) return o.data;
                            } catch (a) {}
                        }
                        home.localStorage.removeItem('mgeodata');
                    },
                    _saveDataToCache: function(t, e, i, n) {
                        var o = home.getData('common.version'),
                            s = home.getData('geo.home');
                        o && home.getData('geo.useLSCache') && this._location && home.localStorage.setItem('mgeodata', JSON.stringify({
                            version: o,
                            latitude: this._location.latitude,
                            longitude: this._location.longitude,
                            homelatitude: s && s.lat || !1,
                            homelongitude: s && s.lon || !1,
                            geoId: i,
                            locale: n,
                            poiData: e,
                            blocks: this._requiredBlocks,
                            dt: new Date(),
                            data: t
                        }));
                    },
                    _requestGeoData: function(t) {
                        var e, i, n, o = home.getData('geo.id'),
                            s = home.getData('geo.home'),
                            r = {},
                            a = home.getData('common.locale'),
                            c = home.getData('places.data'),
                            h = this;
                        if (this._triggerEvent('startLoadData', t), t.cacheGeohelper && (r.lat = s && s.lat || !1, r.lon = s && s.lon || !1, e = this._getDataFromCache(c, o, a, r))) return this._geodata = e, this._triggerEvent('data', t, e), void home.stat.logPath('tech', home.getData('geo.counters.lsCache'));
                        n = home.getData('common.exps', '');
                        var l = this.getZone();
                        return i = 'https://' + home.getData('geo.geohelperHost') + '/geohelper/get?mordazone=' + encodeURIComponent(l) + '&lat=' + encodeURIComponent(this._location.latitude) + '&lon=' + encodeURIComponent(this._location.longitude) + '&' + (o ? 'geoid=' + encodeURIComponent(o) + '&' : '') + (s && s.lat && s.lon ? 'hlat=' + encodeURIComponent(s.lat) + '&hlon=' + encodeURIComponent(s.lon) + '&' : '') + 'lang=' + encodeURIComponent(a) + '&unsessions=1' + (this._requiredBlocks.length ? '&blocks=' + this._requiredBlocks.join(',') : '') + (n ? '&experiments=' + encodeURIComponent(n) : ''), $.ajax({
                            dataType: 'json',
                            url: i,
                            type: 'POST',
                            xhrFields: {
                                withCredentials: !0
                            },
                            timeout: BEM.blocks['i-const'].GEOHELPER_TIMEOUT,
                            data: JSON.stringify({
                                poi: c
                            })
                        }).then(function(e) {
                            var i = !0;
                            if (!e) return $.Deferred().reject(new Error('Empty data'));
                            e.poi || (e.poi = []), e.poi.length || (i = !1), e.promenad && e.poi.push({
                                group: 'walk',
                                objects: e.promenad
                            }), e.promenad = undefined, !i && c || h._saveDataToCache(e, c, o, a), h._geodata = e, h._triggerEvent('data', t, e);
                        }, function(t, e, n) {
                            return home.error.logAjaxError({
                                block: 'i-geolocation',
                                message: '_requestGeoData: ajax',
                                url: i,
                                source: 'geohelper_get'
                            }, t, e, n), h._createLocationError('fetch');
                        });
                    },
                    _getGPAuto: function(t) {
                        for (var e = t.split('; '), i = 0; i < e.length; ++i) {
                            var n = e[i].split('=');
                            if ('yp' === n[0])
                                for (var o = n[1].split('#'), s = 0; s < o.length; ++s) {
                                    var r = o[s].split('.');
                                    if ('gpauto' === r[1]) {
                                        var a = home.getData('geo.geocenter'),
                                            c = decodeURIComponent(r[2]).split(':');
                                        if (5 !== c.length) break;
                                        var h = parseFloat(c[2]),
                                            l = parseInt(c[4], 10),
                                            u = new Date() - 1000 * l,
                                            d = parseFloat(c[0].replace('_', '.')),
                                            m = parseFloat(c[1].replace('_', '.')),
                                            f = home.distance(a, {
                                                lat: d,
                                                lon: m
                                            });
                                        if (h < 2000 && u < 900000 && f < 30) return {
                                            latitude: d,
                                            longitude: m,
                                            accuracy: h
                                        };
                                    }
                                }
                        }
                        return null;
                    },
                    getZone: function() {
                        var t = {
                            ru: 'ru',
                            by: 'by',
                            uz: 'uz'
                        };
                        return t[home.getData('common.domain')] || t.ru;
                    }
                }), $(function() {
                    home.getData('geohelper.disabled') || setTimeout(function() {
                        var t = [l, a, c, h],
                            e = 0,
                            i = function() {
                                var n, o = t[e++];
                                o && ((n = o()) && n.then ? n.then(null, function() {
                                    i();
                                }) : n || i());
                            };
                        i();
                    }, 50);
                });
                var u = $('html');
                BEM.channel('i-geolocation').on({
                    visualStart: function() {
                        u.attr('data-geolocation-progress', 'yes');
                    },
                    end: function() {
                        u.removeAttr('data-geolocation-progress');
                    }
                }), $(function() {
                    if (home.getData('geo.geocenter') && !home.getData('geohelper.disabled')) {
                        var t, e = 0;
                        BEM.channel('i-geolocation').on('start', function() {
                            clearInterval(t);
                        }), t = setInterval(function() {
                            ++e >= 10 && clearInterval(t);
                            var i = BEM.blocks['i-geolocation']._getGPAuto(document.cookie);
                            i && (home.stat.logPath('tech', 'geolocation.delayeddetection.' + e), BEM.blocks['i-geolocation'].setLocation(i), clearInterval(t));
                        }, 1000);
                    }
                }), $(function() {
                    BEM.blocks['i-geolocation']._init();
                });
            }(), BEM.decl('i-const', {}, {
                ANIMATION_LENGTH: 200,
                ANIMATION_DELAY: 50,
                MIN_SWIPE_HORIZONTAL: 8,
                MIN_SWIPE_VERTICAL: 10,
                SWIPE_PAGE_HIDE_DELAY: 300,
                SWIPE_TIME_BASE: 750,
                GEOHELPER_TIMEOUT: 30000
            }),
            function(t) {
                var e, i;
                try {
                    e = t.localStorage, i = 'ya_ls_test', e.setItem(i, '1'), '1' !== e.getItem(i) ? e = null : e.removeItem(i);
                } catch (a) {
                    e = null;
                }
                var n = t.home || (t.home = {}),
                    o = t.console && function(t) {
                        console.log(t);
                    } || function() {},
                    s = function(t) {
                        o('localStorage is disabled. ' + (t || ''));
                    },
                    r = function(t) {
                        try {
                            return t();
                        } catch (a) {
                            s(a);
                        }
                    };
                e ? n.localStorage = {
                    setItem: function(t, i) {
                        return r(function() {
                            return e.setItem(t, i);
                        });
                    },
                    getItem: function(t) {
                        return r(function() {
                            return e.getItem(t);
                        });
                    },
                    removeItem: function(t) {
                        return r(function() {
                            return e.removeItem(t);
                        });
                    },
                    clear: function() {
                        return r(function() {
                            return e.clear();
                        });
                    },
                    key: function(t) {
                        return r(function() {
                            return e.key(t);
                        });
                    }
                } : (n.localStorage = {
                    removeItem: s,
                    setItem: s,
                    getItem: s,
                    clear: s
                }, n.disabledLS = !0);
            }(window), home.distance = function(t, e) {
                var i = Math.PI / 180,
                    n = t.lat * i,
                    o = e.lat * i,
                    s = (e.lat - t.lat) * i,
                    r = (e.lon - t.lon) * i,
                    a = Math.sin(s / 2) * Math.sin(s / 2) + Math.cos(n) * Math.cos(o) * Math.sin(r / 2) * Math.sin(r / 2);
                return 6371 * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)));
            }, d = $.Deferred(), $(function() {
                d.resolve();
            }), BEM.decl('i-message-locker', {}, {
                blockOrder: [],
                acquireLock: function(t, e) {
                    var i, n = $.Deferred(),
                        o = this;
                    return this._initOrder(), t in this._blockOrderMap && !this._locked ? (i = this._blockOrderMap[t], !this._showPretender || this._showPretender.index > i ? (this._showPretender ? this._showPretender.deferreds.forEach(function(t) {
                        t.reject();
                    }) : this._initDelay.done(function() {
                        setTimeout(function() {
                            var t = o._showPretender.deferreds;
                            o._locked = o._showPretender.name, o._closeFunc = e, o._showPretender = null, t.forEach(function(t) {
                                t.resolve();
                            }), BEM.channel('i-message-locker').trigger('lock', o._locked);
                        }, 0);
                    }), this._showPretender = {
                        name: t,
                        deferreds: [n],
                        index: i
                    }) : this._showPretender && this._showPretender.name === t ? this._showPretender.deferreds.push(n) : n.reject(), n) : n.reject();
                },
                releaseLock: function(t) {
                    this._locked && this._locked === t && (this._locked = '', this._closeFunc = null, BEM.channel('i-message-locker').trigger('unlock', t));
                },
                forceClose: function() {
                    this._closeFunc && this._closeFunc();
                },
                _blockOrderMap: undefined,
                _showPretender: undefined,
                _locked: '',
                _initDelay: d,
                _initOrder: function() {
                    if (!this._blockOrderMap) {
                        this._blockOrderMap = {};
                        for (var t = 0; t < this.blockOrder.length; ++t) this._blockOrderMap[this.blockOrder[t]] = t;
                    }
                }
            }), BEM.decl('i-message-locker', {}, {
                blockOrder: ['grefer-promo', 'promo-appsearch', 'ios-default-search-promo', 'skin-greeting', 'time-banner', 'geolocation-promo', 'homescreen', 'geolocation-overlay', 'geolocation-setup', 'teaser-touch', 'stream__chmenu', 'share-popup', 'verticals-onboarding']
            }), BEM.DOM.decl('bottom-popup', {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.__self.hasFixed || (this._bindedSetFixed = $.debounce(this.changeThis(this._manualSetFixed), 200)), this.channel('page').on('interaction', function() {
                                this.hasMod('visible', 'yes') && this.hide();
                            }, this);
                        }
                    }
                },
                getDefaultParams: function() {
                    return {
                        animate: !0
                    };
                },
                show: function() {
                    return BEM.blocks['i-message-locker'].acquireLock(this.params.name || this.__self.getName()).then(this.changeThis(this._show));
                },
                hide: function() {
                    BEM.blocks['i-message-locker'].releaseLock(this.params.name || this.__self.getName()), this._hide();
                },
                _show: function() {
                    this.setMod('visible', 'yes'), this._height || (this._height = this.domElem.outerHeight(), this.__self.hasFixed && this.domElem.css('bottom', -this._height)), this.__self.hasFixed ? this.params.animate ? this.domElem.stop().animate({
                        bottom: 0
                    }, 400) : this.domElem.css('bottom', 0) : (this._manualSetFixed(!0), this.bindToWin('scroll morientationchange mresize', this._bindedSetFixed)), this.params.counters && this.params.counters.show && home.stat.logPath('click', this.params.counters.show);
                },
                _hide: function() {
                    var t = this;
                    this.__self.hasFixed ? this.domElem.animate({
                        bottom: -this._height
                    }, 400, function() {
                        t.delMod('visible');
                    }) : (this.delMod('visible'), this.unbindFromWin('scroll morientationchange mresize')), this.params.counters && this.params.counters.hide && home.stat.logPath('click', this.params.counters.hide);
                },
                _manualSetFixed: function(t) {
                    var e = BEM.DOM.win.scrollTop() + BEM.DOM.win.height() - this._height;
                    !0 === t ? this.domElem.css('top', e) : this.domElem.animate({
                        top: e
                    });
                }
            }, {
                hasFixed: $('html').hasClass('i-ua_fixed_yes'),
                getInstance: function(t) {
                    return $('.' + t).bem(t);
                },
                show: function(t) {
                    this.getInstance(t).show();
                },
                live: function() {
                    this.liveBindTo('close', 'click', function() {
                        this.hide();
                    });
                }
            }), BEM.DOM.decl({
                block: 'geolocation-setup',
                baseBlock: 'bottom-popup'
            }, {
                _show: function() {
                    this.__base.apply(this, arguments), home.stat.logPath('show', 'geolocation.tunepopup.tune'), home.stat.logPath('show', 'geolocation.tunepopup.hide');
                },
                _hide: function() {
                    this.__base.apply(this, arguments), home.stat.logPath('click', 'geolocation.tunepopup.hide');
                }
            }, {
                showGuideLinkInPopup: function() {
                    var t, e = home && home.getData && home.getData('geoguide.data'),
                        i = $('.geolocation-setup__text'),
                        n = 'geolocation.tunepopup.geoguide';
                    i.html(home.l10n('geo.geolocationDisabled')), e && (home.stat.logPath('show', n), t = home.view('home-link', {
                        content: home.getData('geoguide.data.content'),
                        href: home.getData('geoguide.data.href'),
                        mix: 'home-link_blue_yes geolocation-setup__geoguide',
                        stat: ' data-statlog="' + n + '"'
                    }), i.append(t).addClass('geolocation-setup__text_status_denied'));
                },
                showDefaultError: function() {
                    var t = $('.geolocation-setup__text');
                    t.hasClass('geolocation-setup__text_status_denied') && (t.html(home.l10n('mobile.geoBalloon.notfound.message')), t.removeClass('geolocation-setup__text_status_denied'));
                }
            }),
            function(t) {
                BEM.DOM.decl({
                    block: 'geolocation-promo',
                    baseBlock: 'bottom-popup'
                }, {
                    onSetMod: {
                        js: function() {
                            this.__base.apply(this, arguments), this.channel('i-geolocation').on('showGeolocationPromo', this._showPopup.bind(this)), this.bindTo('enable', 'click', this._enableGeoLocation), this.bindTo('not-now__content', 'click', this._notNow);
                        }
                    },
                    _showPopup: function() {
                        var e = this;
                        home.disabledLS || t.getItem('gpallowed') || t.getItem('gpforbidden') || (t.getItem('gppromoshowcount') || 0) < 2 && ('permissions' in navigator ? navigator.permissions.query({
                            name: 'geolocation'
                        }).then(function(t) {
                            'prompt' === (t.state || t.status) && e.show();
                        }, function() {}) : this.show());
                    },
                    _show: function() {
                        var e = t.getItem('gppromoshowcount') || 0;
                        this.__base.apply(this, arguments), this.bindToDoc('click', this._hideAway), t.setItem('gppromoshowcount', ++e);
                        var i = home.getData('geolocation-promo.setcookie.show');
                        i && (new Image().src = i), home.stat.logDOMShow(this.domElem, {
                            visibilityCheck: !1
                        }), home.stat.logPath('show', 'geolocation.popup.hideaway');
                    },
                    _enableGeoLocation: function() {
                        this.hide(), BEM.blocks['i-geolocation'].locateAndLoad();
                    },
                    _notNow: function() {
                        new Image().src = home.getData('geolocation-promo.setcookie.close'), this.hide();
                    },
                    _hideAway: function(t) {
                        !$(t.target).closest(this.domElem).length && (home.stat.logPath('click', 'geolocation.popup.hideaway'), this.unbindFromDoc('click', this._hideAway), this.hide());
                    }
                }, {
                    live: !1
                });
            }(home.localStorage), window.ya = window.ya || {}, ya.history = window.history && history.pushState ? {
                navigate: function(t) {
                    (t = t || {}).url && (t.title || (t.title = ''), t.data || (t.data = ''), t.replace ? history.replaceState(t.data, t.title, t.url) : history.pushState(t.data, t.title, t.url));
                },
                onchange: function(t) {
                    $(window).on('popstate', function(e) {
                        t.call(this, e.originalEvent);
                    });
                }
            } : null,
            function() {
                function t() {
                    home.originalUrl = window.location.href;
                    var t = home && home.getData && home.getData('i-change-url.data');
                    if (t) {
                        var e, i = t.url;
                        try {
                            e = history.state;
                        } catch (n) {}
                        i && ya.history && ya.history.navigate({
                            data: e || null,
                            url: i,
                            replace: !0
                        });
                    }
                }
                var e = +new Date();
                ! function i() {
                    window.defaultMetrikaCounter ? t() : +new Date() - e > 5000 ? t() : setTimeout(i, 100);
                }();
            }(),
            function() {
                var t;
                BEM.decl('i-global', {}, {
                    param: function(e) {
                        return t || (t = home.getData('i-global-mimic.data') || {}), t[e];
                    }
                });
            }(), f = {
                isAuthenticated: !1,
                isFeedbackReceived: !1,
                isRequestSent: !1
            }, p = function() {}, BEM.decl('i-mda-auth', {}, {
                authenticate: function(t) {
                    if ('' === (m = Lego.params['mda-auth-url'] || home.getData('i-mda-auth.url') || '')) return !1;
                    var e = Lego.params['mda-auth-delay'] || 10;
                    p = t || function() {}, setTimeout(function() {
                        var t = document.createElement('iframe');
                        t.style.visibility = 'hidden', t.style.position = 'absolute', t.setAttribute('src', m), t.name = 'i-mda-auth' + (Math.random() + '').substr(3, 7), t.style.top = t.style.left = t.style.width = t.style.height = 0, document.getElementsByTagName('body')[0].appendChild(t), f.isRequestSent = !0;
                    }, e);
                },
                isRequestSent: function() {
                    return f.isRequestSent;
                },
                isFeedbackReceived: function() {
                    return f.isFeedbackReceived;
                },
                isAuthenticated: function() {
                    return f.isAuthenticated;
                },
                getUrl: function() {
                    return m;
                },
                registerFeedback: function(t) {
                    var e = 'success' === t;
                    f.isFeedbackReceived = !0, f.isAuthenticated = e, p(e);
                }
            }), home.cssSupports = function(t, e) {
                try {
                    if (window.CSS && CSS.supports) return CSS.supports(t, e);
                    if (window.supportsCSS) return window.supportsCSS(t, e);
                } catch (i) {}
            }, _ = /(…|\.\.\.)$/, g = home.cssSupports('-webkit-line-clamp', '1') || home.cssSupports('text-overflow', '-o-ellipsis-lastline'), BEM.decl('i-multiline-overflow', {}, {
                _hasNativeSupport: g,
                calcOverflow: function(t, e, i) {
                    if (!this._hasNativeSupport && t.prop('offsetWidth') && !(t.html().indexOf('<') > -1)) {
                        var n = this;
                        t.find('.i-multiline-overflow').add(t.filter('.i-multiline-overflow')).each(function() {
                            var t = $(this),
                                o = i && n._cache[i];
                            o || (o = n._calcProps(t), i && (n._cache[i] = o)), t.text(n._insertEllipsis(t.text(), e, o));
                        });
                    }
                },
                _cache: {},
                _$measureElem: undefined,
                _appliedProps: {},
                _calcProps: function(t) {
                    var e = t.css('line-height'),
                        i = t.css('font-size');
                    return e = 'normal' === e ? 1.2 * parseFloat(t.css('font-size')) : parseFloat(e), {
                        width: t.width(),
                        lineHeight: e,
                        fontFamily: t.css('font-family'),
                        fontWeight: t.css('font-weight'),
                        fontSize: i,
                        wordWrap: t.css('word-wrap'),
                        whiteSpace: t.css('white-space'),
                        hyphens: t.css('hyphens'),
                        wordBreak: t.css('word-break')
                    };
                },
                _applyProps: function(t) {
                    this._$measureElem || (this._$measureElem = $('<div class="i-multiline-overflow__measure" aria-hidden="true"></div>').appendTo('body')), this._appliedProps.width === t.width && this._appliedProps.fontSize === t.fontSize && this._appliedProps.fontFamily === t.fontFamily && this._appliedProps.lineHeight === t.lineHeight && this._appliedProps.fontWeight === t.fontWeight && this._appliedProps.wordWrap === t.wordWrap && this._appliedProps.whiteSpace === t.whiteSpace && this._appliedProps.hyphens === t.hyphens && this._appliedProps.wordBreak === t.wordBreak || (this._appliedProps = t, this._$measureElem.css({
                        width: t.width,
                        fontSize: t.fontSize,
                        fontFamily: t.fontFamily,
                        fontWeight: t.fontWeight,
                        lineHeight: t.lineHeight + 'px',
                        wordWrap: t.wordWrap,
                        whiteSpace: t.whiteSpace,
                        hyphens: t.hyphens,
                        wordBreak: t.wordBreak
                    }));
                },
                _calcLines: function(t, e) {
                    return this._$measureElem.text(t), this._$measureElem.height() / e.lineHeight;
                },
                _insertEllipsis: function(t, e, i) {
                    var n, o = 0,
                        s = t.length;
                    if (this._applyProps(i), this._calcLines(t, i) <= e + 0.5) return t;
                    for (t = t.replace(_, ''); o < s;) n = Math.ceil((o + s) / 2), this._calcLines(t.substr(0, n) + '\u2026', i) > e + 0.5 ? s = n - 1 : o = n;
                    return this._trim(t.substr(0, o)) + '\u2026';
                },
                _trim: function(t) {
                    return t.replace(/[-–:;,.\s]+$/, '');
                }
            }),
            function(t, e) {
                if (home.getData('i-default-search.enabled')) {
                    var i, n = (i = (i = 1209600000) || 0, {
                        check: function() {
                            if (home.disabledLS) return !1;
                            var t = parseInt(home.localStorage.getItem('defaultSearchLastTry')) || !1;
                            return !t || new Date().getTime() - i > t;
                        },
                        update: function() {
                            home.disabledLS || home.localStorage.setItem('defaultSearchLastTry', new Date().getTime());
                        }
                    });
                    jQuery(function() {
                        (window.Ya = window.Ya || {}).defaultSearch = {
                            type: 'web',
                            service: 'morda_touch'
                        };
                        var t, i = e.navigator.userAgent,
                            o = e.Ya && e.Ya.defaultSearch;
                        if (o) {
                            /iPad/.test(i) ? t = 'iPad' : /iPod/.test(i) ? t = 'iPod' : /iPhone/.test(i) && (t = 'iPhone');
                            var s = function(e) {
                                    new Image().src = location.protocol + '//yandex.' + location.host.replace(/^.+\./, '').replace('tr', 'com.tr') + '/clck/click/dtype=stred/pid=93/cid=71924/path=' + o.type + '.' + t + '.' + o.service + '.' + e + '/u=' + +new Date() + '/*http://yandex.ru/';
                                },
                                r = function(t) {
                                    o.callback && o.callback(t);
                                };
                            if (o.type && o.service && t && 'canSetSearchEngine' in e)
                                if (e.canSetSearchEngine()) {
                                    if ('Yandex' === e.getSearchEngine()) r('already');
                                    else if (n.check()) {
                                        e.setSearchEngine('Yandex');
                                        var a = setInterval(function() {
                                            try {
                                                'Yandex' === e.getSearchEngine() ? (s('yes'), r('yes'), clearInterval(a)) : e.canSetSearchEngine() || (s('no'), r('no'), clearInterval(a), n.update());
                                            } catch (t) {
                                                clearInterval(a), n.update();
                                            }
                                        }, 100);
                                    }
                                } else 'Yandex' === e.getSearchEngine() ? r('already') : r('disabled');
                        }
                    });
                }
            }(document, window), $(function() {
                try {
                    'serviceWorker' in navigator && home.getData('i-service-worker.unregister') && navigator.serviceWorker.getRegistration('/').then(function(t) {
                        t && t.unregister();
                    });
                } catch (t) {}
            }),
            function() {
                var t = {};

                function e() {
                    this.current = null, this.currentStatus = 0, this._topArea = null, this._bottomArea = null;
                }
                e.prototype.init = function() {
                    var t = this,
                        e = $('body'),
                        i = function(e) {
                            4 === t.currentStatus && (t.stop({
                                fromEvent: !0
                            }), t.sendStats(e));
                        };
                    if (this.params = home.getData('covers.data'), this.params) {
                        $('.mlogo').on('click.covers', function() {
                            return 'logo' === t.params.settings.mode ? (t.sendStats('logo.click'), t.params.settings.disableSubmit || t.submitForm()) : 0 === t.currentStatus ? (t.start({
                                autostart: !0
                            }), t.sendStats('logo.show'), BEM.channel('covers').trigger('start')) : i('logo.hide'), !1;
                        }), $('.mlogo__container').on('click.covers', function() {
                            'logo' !== t.params.settings.mode && i('logocontainer.hide');
                        }), $('.covers-overlay').on('click.covers', function() {
                            home.coversAPI.stop(), home.coversAPI.sendStats('overlay.hide');
                        });
                        var n = this.getSearchInput();
                        n.on('focus.covers', function() {
                            e.addClass('body_covers-focused_yes');
                        }).on('blur.covers', function() {
                            e.removeClass('body_covers-focused_yes');
                        });
                        var o = this.getSearchForm(),
                            s = !1;
                        o.on('submit', function() {
                            n.val() !== t.params.text || s || (s = !0, o.append('<input type="hidden" name="aoff" value="1"><input type="hidden" name="promo" value="supercover">'));
                        }), this.params && this.params.id && (this.set(this.params.id), t.params.autostart && setTimeout(function() {
                            t.start({
                                autostart: !0
                            }), t.sendStats('autostart.show'), BEM.channel('covers').trigger('start');
                        }, 0));
                    }
                }, e.prototype.getSearchInput = function() {
                    return $('.search3 .mini-suggest__input');
                }, e.prototype.getSearchForm = function() {
                    return $('.search3.mini-suggest');
                }, e.prototype._changeInputVal = function(t) {
                    window.MBEM && MBEM.getBlock($('.search3')[0], 'mini-suggest').setInputVal(t);
                }, e.prototype.submitForm = function(t) {
                    t || (t = this.params.text), this._changeInputVal(t), setTimeout(function() {
                        $('.search3.mini-suggest').submit();
                    }, 200);
                }, e.prototype.setParams = function(t) {
                    this.params = t;
                }, e.prototype.set = function(t) {
                    this.current && this.stop(), this.currentStatus = 0, this.current = t;
                }, e.prototype.start = function(t) {
                    var e = this;
                    this.current && 0 === this.currentStatus && (this.currentStatus = 1, 'logo' !== e.params.settings.mode && this._appendShare(this.params.shareParams), this._loadCoreFiles().then(function() {
                        e._prepareDOM(), e._loadResources().then(function() {
                            e.currentStatus = 2, t.autostart && e._playCover(t);
                        }, function() {
                            e.currentStatus = 0, e.sendStats('error.load.resources');
                        });
                    }, function() {
                        e.currentStatus = 0, e.sendStats('error.load.core');
                    }));
                }, e.prototype._appendShare = function(t) {
                    var e = this;
                    t && !this._shareAppended && (this._shareAppended = !0, $('.content').append('<div class="covers-share" id="covers-share"></div>'), $.getScript('//yastatic.net/share2/share.js').done(function() {
                        e._shareInstance = new Ya.share2(document.getElementById('covers-share'), t);
                    }));
                }, e.prototype._loadCoreFiles = function() {
                    var e, i = [],
                        n = this.params.rootPath + 'resources/';
                    return t[this.current] || (this.params.resources.js && !this.params.resources.autoloadJs && i.push($.ajax({
                        url: n + this.params.resources.js,
                        cache: !0
                    })), this.params.resources.css && !this.params.resources.autoloadCss && (e = $.Deferred(), home.loadCss(n + this.params.resources.css, {
                        callback: function() {
                            e.resolve();
                        }
                    }), i.push(e)), t[this.current] = $.when.apply($, i)), t[this.current];
                }, e.prototype._prepareDOM = function() {
                    'logo' !== this.params.settings.mode && (this._topArea || (this._topArea = $('<div class="covers-parent"></div>'), $('.content').prepend(this._topArea)), this._bottomArea || (this._bottomArea = $('<div class="covers-parent"></div>'), $('.search3').append(this._bottomArea)), $('body').addClass('body_covers_yes'), this.params.topArea = this._topArea, this.params.bottomArea = this._bottomArea);
                }, e.prototype._loadResources = function() {
                    var t = $.Deferred();
                    return home.covers[this.current].load(this.params, function(e) {
                        e.status > 0 ? t.resolve() : t.reject();
                    }), t;
                }, e.prototype._playCover = function(t) {
                    var e = this;
                    2 === this.currentStatus && (this.currentStatus = 3, 'logo' !== this.params.settings.mode && this._changeInputVal(this.params.text), home.covers[e.current].start(e.params, function(i) {
                        e._playHandler(i, t);
                    }));
                }, e.prototype._playHandler = function(t) {
                    t.status > 0 ? (this.currentStatus = 4, this.updateHeight(), $(window).on('morientationchange.cover', this.updateHeight.bind(this))) : this.stop();
                }, e.prototype.updateHeight = function() {
                    this.params.settings && this.params.settings.height && this.setHeight(this.params.settings.height);
                }, e.prototype.stop = function(t) {
                    if (4 === this.currentStatus) {
                        this.currentStatus = 5;
                        var e = this;
                        this.current && home.covers[this.current].stop(this.params, function(i) {
                            e._stopHandler(i, t);
                        });
                    }
                }, e.prototype._stopHandler = function() {
                    this._topArea.remove(), this._topArea = null, this._bottomArea.remove(), this._bottomArea = null, $('body').removeClass('body_covers_yes'), $('.body__wrapper').removeClass('body__wrapper_limited_yes').css('height', ''), $(window).off('morientationchange.cover'), this.currentStatus = 0;
                }, e.prototype.sendStats = function(t) {
                    this.params && this.params.stat && home.stat.logPath('click', this.params.stat + '.' + t);
                }, e.prototype.setHeight = function(t) {
                    var e = $('.search3'),
                        i = e.height(),
                        n = e.offset().top,
                        o = window.innerHeight;
                    $('.body__wrapper').addClass('body__wrapper_limited_yes').css('height', n + i + Math.max(o - i - n, t));
                }, home.coversAPI = new e(), home.covers || (home.covers = {}), $(function() {
                    home.coversAPI.init();
                });
            }(), b = !1, y = [], home.pseudoReady = function(t) {
                b ? setTimeout(t, 0) : (y.push(t), v || (v = setTimeout(function e() {
                    if (document.body && home['export']) {
                        b = !0;
                        for (var t = 0; t < y.length; ++t) setTimeout(y[t], 0);
                    } else setTimeout(e, 100);
                }, 100)));
            }, home.pseudoReady(function() {
                var t = window.home && home.getData && home.getData('szm.data');
                if (t) {
                    setTimeout(function() {
                        var e, i = window.devicePixelRatio || 1,
                            n = screen.width,
                            o = screen.height,
                            s = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,
                            r = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight,
                            a = home.getData('szm.data.szm', null),
                            c = home.getData('szm.data.swap') || !1;
                        i = String(i).replace('.', '_'), c && n < o && (e = n, n = o, o = e), a && function(t, e) {
                            for (var i in e)
                                if (e.hasOwnProperty(i) && (!t[i] || Math.abs(parseFloat(t[i]) - parseFloat(e[i])) > 0.01)) return !1;
                            return !0;
                        }(a, {
                            dpr: i,
                            screenX: n,
                            screenY: o,
                            viewportX: s,
                            viewportY: r
                        }) || (new Image().src = t.url + (i + ':') + n + 'x' + o + ':' + s + 'x' + r);
                    }, t.timeout);
                }
            }), window.MordaRT = function() {
                this.listRE = {};
            }, MordaRT.prototype.siteInDomainList = function(t, e) {
                for (var i, n = 0, o = t.length; n < o; n++)
                    if (i = t[n], this.listRE[i] || (this.listRE[i] = new RegExp('^' + i.replace(/\./g, '\\.').replace(/\*/g, '[^.]+') + '$')), e.match(this.listRE[i])) return !0;
                return !1;
            }, MordaRT.prototype.getHostname = function(t) {
                0 !== t.indexOf('http') && 0 !== t.indexOf('//') && (t = '//' + t);
                var e = document.createElement('a');
                return e.href = t, e.hostname;
            }, MordaRT.prototype.getEntries = function(t, e) {
                if (!window.performance || !window.performance.getEntries) return {
                    resources: {},
                    resourcesCount: 0
                };
                try {
                    var i, n, o = window.performance.getEntries('resources'),
                        s = {},
                        r = 0;
                    if (o && o.length)
                        for (var a = 0, c = o.length; a < c; a++)
                            if (i = o[a].initiatorType || 'unknown', -1 !== (n = this.getHostname(o[a].name)).indexOf('.') && !this.siteInDomainList(t, n)) {
                                s[i] || (s[i] = {});
                                var h = e ? this.quote(o[a].name) : n;
                                s[i][h] ? s[i][h]++ : s[i][h] = 1, r++;
                            }
                    return {
                        resources: s,
                        resourcesCount: r
                    };
                } catch (l) {
                    return {
                        resources: {},
                        resourcesCount: 0
                    };
                }
            }, MordaRT.prototype.quote = function(t) {
                return t.replace(/"|%22/g, '&quot;');
            }, $(document).ready(function() {
                var t = home && home.getData && home.getData('consistency.data'),
                    e = new MordaRT();
                if (t) {
                    var i = ['*.*.yandex.*', '*.yandex.*', 'yandex.*', 'yastatic.net', '*.yastatic.net', 'yastat.net', 'oauth.mts.ru', 'balance.beeline.ru', 'geointernal.mob.maps.yandex.net', 's.edadeal.ru'];
                    setTimeout(function() {
                        n();
                    }, t.timeout);
                }

                function n() {
                    ! function() {
                        var t, e, n = home.getData('banner.counters');
                        if (n && n.length)
                            for (var o = 0, s = n.length; o < s; o++)(t = document.createElement('a')).href = n[o].url, e = t.host, i.push(e);
                    }(),
                    function() {
                        var n = null,
                            o = e.getEntries(i),
                            s = e.getEntries(i, !0);
                        o.resourcesCount && ((n = n || {})['resources-consistency-' + t.content] = o.resources);
                        s.resourcesCount && o.resources.script && ((n = n || {})['resources-src-consistency-' + t.content] = s.resources.script);
                        n && window.defaultMetrikaCounter && window.defaultMetrikaCounter.params(n);
                    }();
                }
            }), home.pseudoReady(function() {
                var t = home && home.getData && home.getData('referers.data');
                if (t) {
                    var e = location.hash ? location.hash.replace(/^#/, '') : '',
                        i = e && e.match(/^[1-578]$/),
                        n = home.getData('timing.reqid') || '';
                    i && t.referer && (new Image().src = '/instant/log?type=clckerror&showid=' + n + '&message=' + [i[0], t.content, t.page, t.referer].join('_'));
                }
            }),
            function() {
                var t = $.debounce(function() {
                        if (!e) return;
                        var t = function(t) {
                            var e, i = [];
                            return t.each(function() {
                                var t = $(this),
                                    n = t.attr('data-blockname');
                                n || (n = t.hasClass('Fh_oJ_pB') ? 'directfeed.card' : t.hasClass('Fh_oJ_s6') ? 'directfeed_2.card' : 'banner'), (e = function(t, e) {
                                    var i = 0;
                                    if (e && t.is(':visible') && (i = Math.floor(t.outerHeight(!0))), i) return e + '=' + i;
                                }(t, n)) && i.push(e);
                            }), i;
                        }((i = '[data-blockname], .' + 'ak' + ', .' + 'Fh', $(i)));
                        var i;
                        t.length && home.stat.logPath('height', t.join(','), {
                            mode: 'clean'
                        });
                    }, 800),
                    e = !1;
                $(function() {
                    var i = home && home.getData && home.getData('i-height-counter.data');
                    (e = i && i.enabled) && (setTimeout(function() {
                        t();
                    }, 2500), BEM.channel('i-height-event').on('change', function() {
                        t();
                    }), BEM.channel('i-height-counter').on({
                        enable: function() {
                            e = !0, t();
                        },
                        disable: function() {
                            e = !1;
                        }
                    }));
                });
            }(),
            function() {
                function t(t) {
                    for (var e = []; t && t !== document.body && t.isConnected;) {
                        var i = t.nodeName;
                        t !== document.body && (t.className && (i += '.' + t.className.split(' ').slice(0, 2).join('.')), t.src && (i += '[' + t.src.slice(0, 50) + ']')), e.push(i), t = t.parentNode;
                    }
                    return e.reverse().join(' ');
                }
                if ('addEventListener' in document) {
                    var e = Math.random();
                    document.addEventListener('securitypolicyviolation', function(i) {
                        var n = home.getData('csp.ratio') || 0;
                        if (!(e > n)) {
                            var o = (i.blockedURI.match(/(?:https?:)\/\/([^/]+)/) || [])[1] || '';
                            if (-1 !== o.indexOf('yandex.') || -1 !== o.indexOf('yastatic.net')) {
                                var s = (i.violatedDirective.match(/([\w-]+)/) || [])[1] || '';
                                if ('child-src' === s || 'frame-src' === s || 'default-src' === s) {
                                    var r = document.querySelectorAll('iframe'),
                                        a = Array.prototype.map.call(r, t),
                                        c = new Error('csp violation');
                                    c.block = 'csp', c.meta = {
                                        blocked: i.blockedURI,
                                        violated: s,
                                        frames: a,
                                        from: home.getData('csp.page'),
                                        ua: navigator.userAgent
                                    }, home.error.log(c);
                                }
                            }
                        }
                    });
                }
            }(), $(function() {
                window.performance && performance.navigation && 1 === performance.navigation.type && home.stat.logPath('tech', 'refresh');
            }), window.Ya && Ya.Rum && (function(t) {
                if (!t) throw new Error('Rum: interface is not included');
                if (!t.enabled) return t.getSetting = function() {
                    return '';
                }, t.getVarsList = function() {
                    return [];
                }, void(t.getResourceTimings = t.pushConnectionTypeTo = t.pushTimingTo = t.normalize = t.sendCounter = t.sendDelta = t.sendTimeMark = t.sendResTiming = t.sendTTI = t.makeSubPage = t.sendFirstPaint = t.sendHeroElement = function() {});
                t.getVarsList = function() {
                    var e = t._vars;
                    return Object.keys(e).map(function(t) {
                        return t + '=' + encodeURIComponent(e[t]).replace(/\*/g, '%2A');
                    });
                }, t.setVars = function(e) {
                    Object.keys(e).forEach(function(i) {
                        t._vars[i] = e[i];
                    }), D(), B();
                };
                var e, i, n = '690.1033',
                    o = '690.2096.207',
                    s = '690.2096.2877',
                    r = '690.2096.2044',
                    a = '690.2096.2748',
                    c = '690.2096.2335.1822',
                    h = 10,
                    l = 3000,
                    u = 20000,
                    d = {
                        connectEnd: 2116,
                        connectStart: 2114,
                        decodedBodySize: 2886,
                        domComplete: 2124,
                        domContentLoadedEventEnd: 2131,
                        domContentLoadedEventStart: 2123,
                        domInteractive: 2770,
                        domLoading: 2769,
                        domainLookupEnd: 2113,
                        domainLookupStart: 2112,
                        duration: 2136,
                        encodedBodySize: 2887,
                        entryType: 2888,
                        fetchStart: 2111,
                        initiatorType: 2889,
                        loadEventEnd: 2126,
                        loadEventStart: 2125,
                        nextHopProtocol: 2890,
                        redirectCount: 1385,
                        redirectEnd: 2110,
                        redirectStart: 2109,
                        requestStart: 2117,
                        responseEnd: 2120,
                        responseStart: 2119,
                        secureConnectionStart: 2115,
                        startTime: 2322,
                        transferSize: 2323,
                        type: 76,
                        unloadEventEnd: 2128,
                        unloadEventStart: 2127,
                        workerStart: 2137
                    },
                    m = {
                        visible: 1,
                        hidden: 2,
                        prerender: 3
                    },
                    f = {
                        bluetooth: 2064,
                        cellular: 2065,
                        ethernet: 2066,
                        none: 1229,
                        wifi: 2067,
                        wimax: 2068,
                        other: 861,
                        unknown: 836,
                        0: 836,
                        1: 2066,
                        2: 2067,
                        3: 2070,
                        4: 2071,
                        5: 2768
                    },
                    p = {
                        'first-paint': 2793,
                        'first-contentful-paint': 2794
                    },
                    _ = Object.keys(p).length,
                    g = t.getTime,
                    v = window.performance || {},
                    b = v.timing || {},
                    y = v.navigation || {},
                    w = navigator.connection,
                    E = {},
                    k = t._deltaMarks,
                    M = document.createElement('link'),
                    S = 'function' == typeof v.getEntriesByType,
                    T = b.navigationStart,
                    C = b.responseStart - T,
                    P = b.domainLookupStart - T;
                if (D(), B(), t.ajaxStart = 0, t.ajaxComplete = 0, window.PerformanceObserver) try {
                    new PerformanceObserver(function(t, i) {
                        var n = t.getEntriesByType('navigation')[0];
                        if (n) {
                            i.disconnect();
                            var o = [];
                            K(o, n), H(o), z('690.2096.2892', e.concat(o));
                        }
                    }).observe({
                        entryTypes: ['navigation']
                    });
                } catch (W) {}

                function D() {
                    e = t.getVarsList().concat('1042=' + encodeURIComponent(navigator.userAgent));
                }

                function B() {
                    i = e.concat(['143.2129=' + T, '143.2112=' + P, '143.2119=' + C]);
                }

                function x() {
                    removeEventListener('DOMContentLoaded', x), removeEventListener('load', x), T && setTimeout(function() {
                        t.sendTimeMark = R, t.sendResTiming = F, t.timeEnd = j;
                        for (var i = t._defRes; i.length;) {
                            var n = i.shift();
                            F(n[0], n[1]);
                        }
                        for (var o = t._defTimes; o.length;) {
                            var s = o.shift();
                            R(s[0], s[1], !1, s[2]);
                        }
                        Object.keys(k).forEach(function(t) {
                                N(t);
                            }), I(),
                            function r() {
                                if (!S || !t.getSetting('forceFirstPaintTimeSending') && t.isVisibilityChanged()) return;
                                var e = v.getEntriesByType('paint');
                                for (var i = 0; i < e.length; i++) {
                                    var n = e[i],
                                        o = p[n.name];
                                    o && !O[n.name] && (O[n.name] = !0, L++, R('1926.' + o, n.startTime));
                                }
                                if (L < _) try {
                                    new PerformanceObserver(function(t, e) {
                                        r(), e.disconnect();
                                    }).observe({
                                        entryTypes: ['paint']
                                    });
                                } catch (W) {}
                            }(), t.getSetting('sendStaticLocation') && function() {
                                var i = document.createElement('script'),
                                    n = t.getSetting('crossOrigin');
                                i.src = 'https://yastatic.net/nearest.js', i.async = !0, null !== n && (i.crossOrigin = n);
                                i.onload = function() {
                                    var t = window.YaStaticRegion;
                                    t && z(c, e.concat('1822=' + t));
                                }, document.head.appendChild(i);
                            }(), U(), S && ('complete' === document.readyState ? $() : addEventListener('load', $));
                    }, 0);
                }

                function I() {
                    var i = b.domContentLoadedEventStart,
                        o = b.domContentLoadedEventEnd;
                    if (0 !== i || 0 !== o) {
                        var s = function() {
                                if (!t.getSetting('forceFirstPaintTimeSending') && t.isVisibilityChanged()) return;
                                if (window.chrome && 'function' == typeof window.chrome.loadTimes) return 1000 * window.chrome.loadTimes().firstPaintTime;
                                if (b.msFirstPaint) return b.msFirstPaint;
                            }(),
                            r = e.concat(['2129=' + T, '1036=' + (b.domainLookupStart - T), '1037=' + (b.domainLookupEnd - b.domainLookupStart), '1038=' + (b.connectEnd - b.connectStart), b.secureConnectionStart && '1383=' + (b.connectEnd - b.secureConnectionStart), '1039=' + (b.responseStart - b.connectEnd), '1040=' + (b.responseEnd - b.responseStart), '1040.906=' + (b.responseEnd - b.domainLookupStart), '1310.2084=' + (b.domLoading - b.responseStart), '1310.2085=' + (b.domInteractive - b.responseStart), '1310.1309=' + (o - i), '1310.1007=' + (i - b.responseStart), '2299=' + history.length, navigator.deviceMemory && '3140=' + navigator.deviceMemory, navigator.hardwareConcurrency && '3141=' + navigator.hardwareConcurrency]);
                        t.mark('1039 ttfb', b.responseStart - b.connectEnd), t.mark('1310.1007 dom.loaded', b.domContentLoadedEventStart - b.responseStart), s && (r.push('2130=' + (s - T), '1041=' + (s - b.responseStart), '1041.906=' + (s - b.domainLookupStart)), t.mark('1041.906 ttfp', s - b.domainLookupStart)), Object.keys(d).forEach(function(t) {
                            t in b && b[t] && r.push(d[t] + '=' + V(b[t], T));
                        }), t.vsStart ? (r.push('1484=' + (m[t.vsStart] || 2771)), t.vsChanged && r.push('1484.719=1')) : r.push('1484=' + m.visible), y && (y.redirectCount && r.push('1384.1385=' + y.redirectCount), 1 !== y.type && 2 !== y.type || r.push('770.76=' + y.type)), H(r), z(n, r, ['dtype=stred', 'pid=1', 'cid=72202']);
                    } else setTimeout(I, 50);
                }
                'loading' === document.readyState ? (addEventListener('DOMContentLoaded', x), addEventListener('load', x)) : x();
                var O = {},
                    L = 0;

                function R(e, i, n, s) {
                    i === undefined && (i = g()), n !== undefined && !0 !== n || t.mark(e, i);
                    var r = Y(e);
                    r.push('207=' + V(i)), A(r, s) && (z(o, r), E[e] = E[e] || [], E[e].push(i));
                }

                function A(t, e) {
                    if (e) {
                        if (e.isCanceled && e.isCanceled()) return !1;
                        Object.keys(e).forEach(function(i) {
                            'function' != typeof e[i] && t.push(i + '=' + e[i]);
                        });
                    }
                    return !0;
                }

                function j(t, e) {
                    var i = k[t];
                    i && 0 !== i.length && (i.push(g(), e), N(t));
                }

                function N(e, i, n) {
                    var o, r, a, c = k[e];
                    if (void 0 !== i ? o = (r = t.getTime()) - i : c && (o = c[0], r = c[1], a = c[2]), o !== undefined && r !== undefined) {
                        var h = Y(e);
                        h.push('207.2154=' + V(o), '207.1428=' + V(r), '2877=' + V(r - o)), A(h, n) && A(h, a) && (z(s, h), delete k[e]);
                    }
                }

                function F(t, e) {
                    q(e, function(i) {
                        if (i) {
                            var n = Y(t);
                            n.push('13=' + encodeURIComponent(e)), K(n, i[0]), z(r, n);
                        }
                    });
                }

                function $() {
                    if (removeEventListener('load', $), S) {
                        var t = v.getEntriesByType('resource').reduce(function(t, e) {
                                var i, n = e.name.match(/^https?:\/\/([^\/?#]+)(?:[\/?#]|$)/i);
                                return n && ((i = n[1]) in t || (t[i] = {
                                    count: 0,
                                    size: 0
                                }), t[i].count++, e.transferSize && (t[i].size += e.transferSize)), t;
                            }, {}),
                            i = '2748=';
                        Object.keys(t).forEach(function(e) {
                            i += e + '!' + t[e].count + '!' + (t[e].size || '') + ';';
                        }), z(a, e.concat(i));
                    }
                }

                function U(e, i, n) {
                    if (t._tti) {
                        var o = g(),
                            s = function(t, e, s) {
                                var r = {
                                    2796.2797: function(t, e) {
                                        return t = t || [], e = e || 0, t.filter(function(t) {
                                            return t.startTime - e >= -50;
                                        }).map(function(t) {
                                            var e = t.name ? t.name.split('-').map(function(t) {
                                                    return t[0];
                                                }).join('') : 'u',
                                                i = Math.floor(t.startTime);
                                            return e + '-' + i + '-' + Math.floor(i + t.duration);
                                        }).join('.');
                                    }(s, i),
                                    689.2322: V(o)
                                };
                                n && Object.keys(n).forEach(function(t) {
                                    r[t] = n[t];
                                }), R(t || '2795', e, !0, r);
                            },
                            r = function() {
                                var n, a = i || o,
                                    c = g(),
                                    h = t._tti.events || [],
                                    d = h.length;
                                0 !== d && (n = h[d - 1], a = Math.max(a, Math.floor(n.startTime + n.duration))), c - a >= l ? s(e, a, h) : c - a >= u ? s(e, (i || o) + u, h) : setTimeout(r, 1000);
                            };
                        r();
                    }
                }

                function H(t) {
                    w && t.push('2437=' + (f[w.type] || 2771), w.downlinkMax && '2439=' + w.downlinkMax, w.effectiveType && '2870=' + w.effectiveType);
                }

                function q(t, e) {
                    if (!S) return e(null);
                    M.href = t;
                    var i = M.href,
                        n = 0,
                        o = 100;
                    setTimeout(function s() {
                        var t = v.getEntriesByName(i);
                        if (t.length) return e(t);
                        n++ < h ? (setTimeout(s, o), o += o) : e(null);
                    }, 0);
                }

                function Y(e) {
                    return i.concat(['1701=' + e, t.ajaxStart && '1201.2154=' + V(t.ajaxStart), t.ajaxComplete && '1201.2052=' + V(t.ajaxComplete)]);
                }

                function K(t, e) {
                    Object.keys(d).forEach(function(i) {
                        if (i in e) {
                            var n = e[i];
                            (n || 0 === n) && t.push(d[i] + '=' + V(n));
                        }
                    });
                }

                function V(t, e) {
                    return 'string' == typeof t ? encodeURIComponent(t) : Math.round(1000 * (t - (e || 0))) / 1000;
                }

                function z(e, i, n, o) {
                    var s = i.filter(Boolean).join(','),
                        r = o ? {
                            href: o
                        } : null;
                    t.send(r, e, s, null, null, null, n);
                }
                t.getTimeMarks = function() {
                    return E;
                }, t.sendTTI = U, t.sendFirstPaint = function(t) {
                    window.requestAnimationFrame ? requestAnimationFrame(function() {
                        R('2130', t);
                    }) : R('2130', t);
                }, t.sendHeroElement = function(t) {
                    R('2876', t);
                }, t._subpages = {}, t.makeSubPage = function(e, i) {
                    var n = t._subpages[e];
                    t._subpages[e] = void 0 === n ? n = 0 : ++n;
                    var o = !1;
                    return {
                        689.2322: V(void 0 !== i ? i : Ya.Rum.getTime()),
                        2924: e,
                        2925: n,
                        isCanceled: function() {
                            return o;
                        },
                        cancel: function() {
                            o = !0;
                        }
                    };
                }, t.getResourceTimings = q, t.pushConnectionTypeTo = H, t.pushTimingTo = K, t.normalize = V, t.sendCounter = z, t.sendDelta = N;
            }(Ya.Rum), Ya.Rum.enabled && addEventListener('load', function et() {
                removeEventListener('load', et), Ya.Rum.sendTimeMark('1724');
                for (var t = document.querySelectorAll('script[data-rCid], div[data-rCid]'), e = 0, i = t.length; e < i; e++) {
                    var n = t[e],
                        o = n.src;
                    if (!o) {
                        var s = getComputedStyle(n).backgroundImage;
                        if (s) {
                            var r = s.match(/^url\(["']?(.*?)["']?\)$/);
                            r && (o = r[1]);
                        }
                    }
                    o && Ya.Rum.sendResTiming(n.getAttribute('data-rCid'), o);
                }
            }), function() {
                'use strict';
                var t, e = [];

                function i() {
                    var i = Ya.Rum.getSetting('clck'),
                        n = e.join('\r\n');
                    if ((e = [], t = null, i) && !(navigator.sendBeacon && Ya.Rum.getSetting('beacon') && navigator.sendBeacon(i, n))) {
                        var o = new XMLHttpRequest();
                        o.open('POST', i), o.send(n);
                    }
                }
                Ya.Rum.send = function(n, o, s, r, a, c, h) {
                    clearTimeout(t);
                    var l = function(t, e, i, n, o, s) {
                        var r = Ya.Rum.getSetting('slots');
                        return [s ? '/' + s.join('/') : '', '/path=' + e, r ? '/slots=' + r.join(';') : '', i ? '/vars=' + i : '', '/cts=' + new Date().getTime(), '/*'];
                    }(0, o, s, 0, 0, h);
                    e.push('/reqid=' + Ya.Rum.getSetting('reqid') + l.join('')), e.length < 42 ? t = setTimeout(i, 15) : i();
                };
            }()), window.Ya && Ya.Rum && Ya.Rum.enabled && window.BEM && BEM.channel('i-bem').onFirst('start-init', function() {
                Ya.Rum.sendTimeMark('2418');
            }).onFirst('init', function() {
                Ya.Rum.sendTimeMark('2295');
            }),
            function() {
                if (window.addEventListener && home.getData('timing.scroll') && window.Ya && Ya.Rum) {
                    var t, e, i, n = !!BEM.blocks['i-ua'].passiveEvents && {
                            passive: !0
                        },
                        o = -1,
                        s = Ya.Rum.getTime(),
                        r = 500,
                        a = 500;
                    window.addEventListener('scroll', function() {
                        var n = +new Date(); - 1 === o ? (o = n, s = Ya.Rum.getTime(), e = []) : e.push(n - t);
                        t = n, clearTimeout(i), i = setTimeout(function() {
                            t - o > r && Ya.Rum.sendTimeMark('768', s, !1, {
                                768.2797: e.join('.')
                            }), o = -1;
                        }, a);
                    }, n);
                }
            }(), $(function() {
                BEM.afterCurrentEvent(function() {
                    BEM.channel('i-bem').trigger('start-init'), BEM.DOM.init(function() {
                        BEM.channel('i-bem').trigger('init');
                    });
                });
            }), $(document).ready(function() {
                var t = home && home.getData && home.getData('yandcache.data');
                t && window.setTimeout(function() {
                    var e = document.createElement('script');
                    e.src = t.url, document.getElementsByTagName('head')[0].appendChild(e);
                }, t.timeout);
            }), $(document).ready(function() {
                var t = home && home.getData && home.getData('search-provider.data');
                t && function e() {
                    if (window.defaultMetrikaCounter) try {
                        var i, n = 'yandex.' + t.zone,
                            o = {
                                'search-provider': {}
                            };
                        window.external && external.IsSearchProviderInstalled && (i = external.IsSearchProviderInstalled(n)), void 0 !== i && (o['search-provider'][n] = i, window.defaultMetrikaCounter.params(o));
                    } catch (s) {
                        return !1;
                    } else setTimeout(e, 300);
                }();
            }),
            function() {
                var t = home.getData('i-prefetch-stat.data'),
                    e = home.getData('i-prefetch-stat.prefetch');
                if ('PerformanceObserver' in window && window.Ya && Ya.Rum && window.performance && performance.getEntriesByName && function() {
                        var t = new PerformanceObserver(function(e) {
                            var i = e.getEntries().find(function(t) {
                                return 'yndxPreloadedPageSubmit' === t.name;
                            });
                            i && (Ya.Rum.sendTimeMark('3106.143.297', i.startTime, !1), t.disconnect());
                        });
                        t.observe({
                            entryTypes: ['mark']
                        });
                    }(), t) {
                    var i = !1;
                    if (home.localStorage.getItem('home:lastPrerenderShowIdLogged') === t.showId && (i = !0), i || n() || document.addEventListener('visibilitychange', function o() {
                            n() && document.removeEventListener('visibilitychange', o);
                        }), e && 'PerformanceObserver' in window && 'PerformancePaintTiming' in window) new window.PerformanceObserver(function(t) {
                        t.getEntries().forEach(function(t) {
                            'first-paint' === t.name && Ya.Rum.sendTimeMark('1088.2793');
                        });
                    }).observe({
                        entryTypes: ['paint']
                    });
                }

                function n() {
                    if ('visible' === document.visibilityState) return i || (i = !0, home.localStorage.setItem('home:lastPrerenderShowIdLogged', t.showId), $.ajax({
                        url: '/instant/stlog?msid=' + t.showId + '&rnd=' + Date.now(),
                        method: 'POST',
                        data: 'r=' + t.root + '&b=' + [
                            ['search', Object.keys(t.params).map(function(e) {
                                return e + '=' + encodeURIComponent(t.params[e]);
                            }).join(':')].join(':'), 'ROOT:k=' + t.k
                        ].concat(t.shows || []).join('#'),
                        xhrFields: {
                            withCredentials: !0
                        }
                    }), e && Ya.Rum.sendTimeMark('1088.487')), !0;
                }
            }(), w = {}, BEM.channel('reload').on({
                lock: function(t, e) {
                    e && e.block && (w[e.block] = !0);
                },
                release: function(t, e) {
                    var i = e && e.block;
                    w[i] && delete w[i];
                }
            }), $(function() {
                var t = home.getData('reload.data');
                if (t && t.on) {
                    var e = null,
                        i = Date.now(),
                        n = function() {
                            e = setInterval(function() {
                                Date.now() - i > 900000 && 0 === Object.keys(w).length && (clearInterval(e), location.reload());
                            }, 1000);
                        },
                        o = function(t) {
                            BEM.channel('reload').trigger('lock', t);
                        },
                        s = function(t) {
                            BEM.channel('reload').trigger('release', t);
                        };
                    BEM.channel('sys').on('visibilitychange', function(t, i) {
                        i.hidden ? clearInterval(e) : n();
                    }), BEM.channel('dialog').on({
                        open: function() {
                            o({
                                block: 'dialog'
                            });
                        },
                        hide: function() {
                            s({
                                block: 'dialog'
                            });
                        }
                    }), BEM.channel('i-geolocation').on({
                        start: function() {
                            o({
                                block: 'i-geolocation'
                            });
                        },
                        end: function() {
                            s({
                                block: 'i-geolocation'
                            });
                        }
                    }), BEM.channel('voice-search-popup').on({
                        start: function() {
                            o({
                                block: 'voice-search-popup'
                            });
                        },
                        end: function() {
                            s({
                                block: 'voice-search-popup'
                            });
                        }
                    }), BEM.channel('menu2').on({
                        show: function() {
                            o({
                                block: 'menu2'
                            });
                        },
                        hide: function() {
                            s({
                                block: 'menu2'
                            });
                        }
                    }), n();
                }
            }),
            function() {
                var t = null,
                    e = !1,
                    i = !1,
                    n = document.createElement('div'),
                    o = function(t) {
                        return n.innerHTML = t, n.firstChild;
                    };

                function s(n, s) {
                    if (s && s.id) {
                        t || (t = o('<iframe style="display:none" src="' + n + '" name="ga"></iframe>'));
                        var r = function() {
                            t.contentWindow.postMessage && t.contentWindow.postMessage({
                                id: s.id,
                                type: 'params',
                                params: s.params,
                                labels: s.labels,
                                remarketingOnly: s.remarketingOnly
                            }, '*');
                        };
                        i ? r() : t.onload = function() {
                            i = !0, r();
                        }, e || (document.body.appendChild(t), e = !0);
                    }
                }
                var r, a = null,
                    c = !1;

                function h(t) {
                    return window.home && home.getData && home.getData('ga-counter.' + t);
                }
                window.home = window.home || {}, window.home.gaCounter = {
                    track: function(t) {
                        var e, i = h('morda');
                        i && i.customLabels && i.customLabels[t] && (e = {
                            id: i.id,
                            params: null,
                            labels: i.customLabels[t],
                            remarketingOnly: i.remarketingOnly
                        }, s(i.iframeSrc, e));
                    },
                    trackEther: function() {
                        var t = h('ether');
                        t && t.customLabels && t.customLabels.ether && (r = setTimeout(function() {
                            var e = {
                                id: t.id,
                                params: null,
                                labels: t.customLabels.ether,
                                remarketingOnly: t.remarketingOnly
                            };
                            s(t.iframeSrc, e);
                        }, t.timeout));
                    },
                    stopTrackEther: function() {
                        clearTimeout(r);
                    },
                    trackCancel: function() {
                        this.track('cancel');
                    },
                    trackCancelPopup: function() {
                        this.track('cancelPopup');
                    }
                }, home.pseudoReady(function() {
                    var t = h('morda');

                    function e() {
                        if (t.iframeSrcEx) i = t.iframeSrcEx + function() {
                            for (var t = [], e = 0, i = arguments.length; e < i; e++) arguments[e] && t.push(arguments[e]);
                            return t.length ? '?' + t.join('&') : '';
                        }(function() {
                            var e = window.performance && performance.timing && performance.timing.responseEnd && performance.timing.responseStart ? performance.timing.responseEnd - performance.timing.responseStart : null;
                            if (t.statDownloadTime && e) {
                                if (e > Number(t.statDownloadTime[1])) return 'slow=2';
                                if (e > Number(t.statDownloadTime[0])) return 'slow=1';
                            }
                            return '';
                        }(), t.csc ? 'csc=' + t.csc : '', t.refg ? 'refg=1' : '', t.swb ? 'swb=1' : ''), a || (a = o('<iframe style="display:none" src="' + i + '" name="ga-ex"></iframe>')), c || (document.body.appendChild(a), c = !0);
                        else if (t.iframeSrc) {
                            var e = {
                                id: t.id,
                                params: t.params,
                                labels: t.labels,
                                remarketingOnly: t.remarketingOnly
                            };
                            s(t.iframeSrc, e);
                        }
                        var i;
                    }
                    t && function() {
                        if (t.swb) return !0;
                        var e;
                        try {
                            e = localStorage.getItem('gaCounterShowTime');
                        } catch (i) {}
                        return !e || Number(e) < t.ignoreLSBefore || +new Date() - Number(e) > t.showTimeout;
                    }() && setTimeout(function() {
                        e(),
                            function() {
                                try {
                                    localStorage.setItem('gaCounterShowTime', +new Date());
                                } catch (t) {}
                            }();
                    }, t.timeout);
                });
            }(), E = function() {
                var t = home.getData('delayed-reporter'),
                    e = function(t) {
                        'undefined' != typeof t.timeout ? setTimeout(function() {
                            i(t);
                        }, 1000 * t.timeout) : i(t);
                    },
                    i = function(t) {
                        t.url ? new Image().src = t.url : t.stat && t.stat.type && t.stat.name && home.stat.logPath(t.stat.type, t.stat.name);
                    },
                    n = function(t) {
                        t && (t = 'string' == typeof t ? {
                            url: t
                        } : t, home.getData('common.reportVisibilityCheck') && document.visibilityState && 'visible' !== document.visibilityState ? document.addEventListener('visibilitychange', function i() {
                            'visible' === document.visibilityState && (document.removeEventListener('visibilitychange', i), e(t));
                        }) : e(t));
                    };
                if (t)
                    for (var o in t)
                        if (t.hasOwnProperty(o)) {
                            var s = t[o];
                            Array.isArray(s) || (s = [s]), s.forEach(n);
                        }
            }, window.$ ? $(E) : 'addEventListener' in document && document.addEventListener('DOMContentLoaded', E, !1), home.getData('i-sw-reporter.on') && 'serviceWorker' in navigator && setTimeout(function() {
                window.defaultMetrikaCounter && Promise.resolve().then(function() {
                    return navigator.serviceWorker.getRegistrations();
                }).then(function(t) {
                    var e = null;
                    t.forEach(function(t) {
                        var i = home.parseUrl(t.scope).path;
                        i = i.replace(/(^\/|\/$)/g, '').replace(/\//g, '_'), ['active', 'installing', 'waiting'].forEach(function(n) {
                            t[n] && ((e = e || {})['sw-report'] = e['sw-report'] || {}, e['sw-report'][i] = e['sw-report'][i] || {}, e['sw-report'][i][n] = t[n].scriptURL || 1);
                        });
                    }), e && window.defaultMetrikaCounter.params(e);
                })['catch'](function() {});
            }, 5000), BEM.decl('i-hash', {}, {
                set: function(t, e, i) {
                    var n = this._parse();
                    e === undefined && (e = !0);
                    var o = {};
                    for (t in 'object' == typeof t ? o = t : o[t] = e, o) o.hasOwnProperty(t) && o[t] !== undefined && (n[t] = o[t]);
                    this._save(n, i);
                },
                remove: function(t, e) {
                    var i = {},
                        n = this._parse(),
                        o = !1;
                    for (t in 'object' == typeof t ? i = t : i[t] = !0, i) i.hasOwnProperty(t) && t in n && (delete n[t], o = !0);
                    o && this._save(n, e);
                },
                contains: function(t) {
                    return this._parse().hasOwnProperty(t);
                },
                get: function(t) {
                    return this._parse()[t];
                },
                _initialize: function(t) {
                    try {
                        this._currentHash = location.hash || '';
                    } catch (e) {
                        this._currentHash = '';
                    }
                    this._historyDisabled = t.historyDisabled, $(window).on('hashchange', this.changeThis(this._hashChange));
                },
                disabled: function() {
                    return this._historyDisabled;
                },
                _parse: function() {
                    var t, e = {},
                        i = this._currentHash || '';
                    '#' === i.charAt(0) && (i = i.substr(1)), t = i.split('&');
                    for (var n = 0; n < t.length; ++n) {
                        var o, s, r;
                        t[n] && (-1 === (r = t[n].indexOf('=')) ? e[decodeURIComponent(t[n])] = !0 : (o = decodeURIComponent(t[n].substr(0, r)), s = decodeURIComponent(t[n].substr(r + 1)), e[o] = s));
                    }
                    return e;
                },
                _generateHash: function(t) {
                    var e = [];
                    for (var i in t) t.hasOwnProperty(i) && (!0 === t[i] ? e.push(encodeURIComponent(i)) : e.push(encodeURIComponent(i) + '=' + encodeURIComponent(t[i])));
                    return e.length ? '#' + e.join('&') : '';
                },
                _save: function(t, e) {
                    var i, n, o = this._generateHash(t);
                    if (!this._historyDisabled) try {
                        this._currentHash = o, n = (i = location.href.indexOf('#')) > -1 ? location.href.substr(0, i) : location.href, e ? history && history.replaceState ? history.replaceState(history.state || null, document.title, n + o) : location.replace(n + (o || '#')) : history && history.pushState ? history.pushState({}, document.title, n + o) : location.hash = o;
                    } catch (s) {}
                },
                _hashChange: function() {
                    var t, e, i, n = {},
                        o = this._parse();
                    try {
                        if (this._currentHash !== location.hash) {
                            for (e in this._currentHash = location.hash || '', t = this._parse()) t.hasOwnProperty(e) && t[e] !== o[e] && (n[e] = t[e]);
                            for (e in o) o.hasOwnProperty(e) && !t.hasOwnProperty(e) && (n[e] = undefined);
                            (i = $.Event('change')).hash = n, this.channel('i-hash').trigger(i);
                        }
                    } catch (s) {}
                }
            }), $(function() {
                BEM.blocks['i-hash']._initialize({
                    historyDisabled: 'WindowsPhone' === home.getData('i-ua2.data.os')
                });
            }), BEM.decl('i-messenger', {}, {
                listenCount: function(t) {
                    this._count !== undefined && t(this._count), this._countCallbacks = this._countCallbacks || [], this._countCallbacks.push(t);
                },
                showWidget: function(t) {
                    this._chatWidgetLoading ? this._chatWidget && this._chatWidget.showChat(t) : this._chatWidgetLoading = this._loadWidget().then(function(e) {
                        this._chatWidget = e, e.showChat(t);
                    }.bind(this), function(t) {
                        this._chatWidgetLoading = null, home.error.logError({
                            block: this.getName(),
                            message: 'widget load error: ' + t
                        });
                    }.bind(this));
                },
                _init: function() {
                    var t = home.getData('i-messenger.data');
                    t && (this._unreadUrl = t.unreadUrl, this._reqNum = 0, this._fetchUnread(), (t.pushGuid || t.pushChatId) && (home.stat.logPath('show', 'messenger.autoshow'), this.showWidget(t.pushChatId ? {
                        chatId: t.pushChatId
                    } : {
                        guid: t.pushGuid
                    })), BEM.blocks['i-hash'].remove('messenger', !0), this.channel('i-hash').on('change', function(t) {
                        'messenger' in t.hash && (BEM.blocks['i-hash'].get('messenger') ? this._chatWidget.showChat() : this._chatWidget.hideChat());
                    }, this));
                },
                _fetchUnread: function() {
                    document.hidden || !1 === window.navigator.onLine ? this._restartTimer() : $.ajax({
                        url: home.addQueryToUrl(this._unreadUrl, {
                            reqNum: ++this._reqNum,
                            parentOrigin: window.location.origin
                        }),
                        xhrFields: {
                            withCredentials: !0
                        },
                        dataType: 'json',
                        timeout: 10000,
                        beforeSend: function(t) {
                            t.setRequestHeader('Content-Type', 'application/json');
                        }
                    }).then(function(t) {
                        !t || t.Status && t.Status >= 400 || (this._updateCount(Number(t.UnreadCount) || 0), this._restartTimer(1000 * t.Ttl));
                    }.bind(this), function(t, e, i) {
                        403 === t.status && 'Forbidden' === i || (home.error.logAjaxError({
                            block: this.getName(),
                            message: '_fetchUnread: ajax',
                            source: 'messenger_api'
                        }, t, e, i), this._restartTimer());
                    }.bind(this));
                },
                _updateCount: function(t) {
                    this._count = t, this._countCallbacks && this._countCallbacks.forEach(function(e) {
                        e(t);
                    });
                },
                _restartTimer: function(t) {
                    t || (t = 10000), home.getData('i-messenger.data.disableAutoupdate') || setTimeout(this._fetchUnread.bind(this), t);
                },
                _loadWidget: function() {
                    var t = this._unreadUrl;
                    return new Promise(function(e, i) {
                        window.yandexChatWidgetCallback = function() {
                            try {
                                var n = new window.Ya.ChatWidget({
                                    unreadUrl: t,
                                    title: home.l10n('messenger.title'),
                                    iframeUrlParams: {
                                        header: 'disabled'
                                    }
                                });
                                n.addListener('chatShow', function() {
                                    home.stat.logPath('click', 'messenger.show'), BEM.blocks['i-hash'].contains('messenger') || BEM.blocks['i-hash'].set('messenger');
                                }), n.addListener('chatHide', function() {
                                    home.stat.logPath('click', 'messenger.hide'), BEM.blocks['i-hash'].remove('messenger', !0);
                                }), e(n);
                            } catch (o) {
                                i(o);
                            }
                        };
                        var n = document.createElement('script');
                        n.src = home.getData('i-messenger.data.widgetUrl'), n.onerror = i, document.getElementsByTagName('head')[0].appendChild(n);
                    });
                }
            }), $(function() {
                BEM.blocks['i-messenger']._init();
            }), BEM.decl('pusher', {}, {
                _origin: 'https://mobile.yandex.net',
                _prepareTags: function(t, e) {
                    return new Promise(function(i) {
                        var n = [].concat(t).map(function(t) {
                            if (!t || !t.name || !t.value) throw new TypeError(t + 'is not a PusherTag');
                            return {
                                name: t.name,
                                value: t.value,
                                op: e
                            };
                        });
                        if (0 === n.length) throw new TypeError('Tags list is empty');
                        i(n);
                    });
                },
                _getBackendTag: function(t, e) {
                    return this._tags || (this._tags = {}), this._tags.hasOwnProperty(t) || (this._tags[t] = fetch(e).then(this._checkBackendTag.bind(this)).then(this._createBackendTag.bind(this, t))['catch'](this._deleteBackendTag.bind(this, t))), this._tags[t];
                },
                _checkBackendTag: function(t) {
                    var e = t.status;
                    if (e >= 200 && e < 300) return t.json();
                    if (404 === e) return {
                        value: []
                    };
                    throw new Error('Failed to load ' + t.url + ': ' + e + ' ' + t.statusText);
                },
                _createBackendTag: function(t, e) {
                    var i = {};
                    return e.value.forEach(function(t) {
                        i[t] = null;
                    }), {
                        name: t,
                        values: i
                    };
                },
                _deleteBackendTag: function(t, e) {
                    throw delete this._tags[t], e;
                },
                _promisifyTags: function(t, e) {
                    return Promise.all(t.map(function(t) {
                        return this._getBackendTag(t.name).then(e.bind(this, t));
                    }, this));
                },
                _checkTags: function(t) {
                    return this._promisifyTags(t, function(t, e) {
                        return e.values.hasOwnProperty(t.value);
                    }).then(function(t) {
                        return t.every(function(t) {
                            return t;
                        });
                    });
                },
                check: function(t) {
                    return this._prepareTags(t).then(this._checkTags.bind(this));
                },
                _sendTags: function(t, e) {
                    var i = {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(t)
                    };
                    return fetch(e, i).then(function(e) {
                        var i = e.status;
                        if (i >= 200 && i < 300) return t;
                        throw new Error('Failed to load ' + e.url + ': ' + i + ' ' + e.statusText);
                    });
                },
                _updateBackendTags: function(t) {
                    return this._promisifyTags(t, function(t, e) {
                        var i = t.value,
                            n = t.op;
                        'add' === n ? e.values[i] = null : 'remove' === n && delete e.values[i];
                    });
                },
                unsubscribe: function(t) {
                    return this._prepareTags(t, 'remove').then(this._sendTags.bind(this)).then(this._updateBackendTags.bind(this)).then(function() {
                        return !1;
                    });
                }
            }),
            function() {
                function t(t) {
                    return function() {
                        return this._start(), t.apply(this, arguments).then(this._setSubscribed.bind(this)).then(function(t) {
                            return this._finish(), t;
                        }.bind(this), function(t) {
                            throw this._finish(), t;
                        }.bind(this));
                    };
                }
                BEM.DOM.decl('pusher-button', {
                    onSetMod: {
                        js: {
                            inited: function() {
                                this.setMod('supported', BEM.blocks.pusher.supported ? 'yes' : 'no');
                            }
                        },
                        supported: {
                            yes: function() {
                                this.check(), this.button().on('click', this._onClick, this);
                            },
                            no: function() {
                                this._finish(), this.button().setMod('disabled', 'yes');
                            }
                        },
                        subscribed: function(t, e) {
                            var i = this.params.subscribed,
                                n = i && i[e];
                            n && (n.hasOwnProperty('theme') && this.button().setMod('theme', n.theme), n.hasOwnProperty('text') && this.button().setText(n.text));
                        }
                    },
                    _onClick: function() {
                        this.toggleSubscription();
                    },
                    _start: function() {
                        this.button().setMod('progress', 'yes');
                    },
                    _finish: function() {
                        this.button().delMod('progress');
                    },
                    _setSubscribed: function(t) {
                        return this.setMod('subscribed', t ? 'yes' : 'no'), t;
                    },
                    toggleSubscription: function() {
                        return this.hasMod('subscribed', 'yes') ? this.unsubscribe() : this.subscribe();
                    },
                    check: t(function() {
                        return BEM.blocks.pusher.check(this.params.tags);
                    }),
                    subscribe: t(function() {
                        return BEM.blocks.pusher.subscribe(this.params.tags);
                    }),
                    unsubscribe: t(function() {
                        return BEM.blocks.pusher.unsubscribe(this.params.tags);
                    }),
                    button: function() {
                        return this._button || (this._button = this.findBlockOn('button2')), this._button;
                    }
                });
            }(), BEM.DOM.decl('pusher-button', {
                _onClick: function() {
                    if (this.hasMod('subscribed', 'yes')) this._unsubscribe();
                    else {
                        var t, e;
                        switch (this.getPermission()) {
                            case 'granted':
                                if (this.__self._shown()) return void this._subscribePermissionGranted();
                                t = 'popup', e = 'prompt';
                                break;
                            case 'default':
                                t = 'default', e = 'prompt';
                                break;
                            default:
                                return void this._openPopup('default', 'error');
                        }
                        this._openPopup(t, e, function(t) {
                            if (!0 === t) switch (this.__self._shown(t), this.getPermission()) {
                                case 'granted':
                                    this._subscribePermissionGranted();
                                    break;
                                case 'default':
                                    setTimeout(this._subscribePermissionDefault.bind(this), 0);
                                    break;
                                default:
                                    this._openPopup('default', 'error');
                            }
                        }.bind(this));
                    }
                },
                _unsubscribe: function() {
                    this.unsubscribe()['catch'](this._handleError.bind(this));
                },
                _subscribePermissionGranted: function() {
                    this.subscribe()['catch'](this._handleError.bind(this));
                },
                _subscribePermissionDefault: function() {
                    var t = this._openPopup('default', 'wait');
                    BEM.blocks.pusher._requestPermission().then(function() {
                        t.close();
                    }, function() {
                        t.close();
                    }).then(function() {
                        return this.subscribe();
                    }.bind(this))['catch'](function(t) {
                        'default' !== t.permission ? 'denied' !== t.permission ? this._handleError(t) : this._onPermissionDenied() : t.delay < 300 && this._openPopup('default', 'error');
                    }.bind(this));
                },
                _handleError: function(t) {
                    throw this._openPopup('default', 'error'), home.error.logError({
                        block: this.__self.getName()
                    }, t), t;
                },
                getPermission: function() {
                    return BEM.blocks.pusher.getPermission();
                },
                _openPopup: function(t, e, i) {
                    var n = this._notice(t);
                    return this.__self._openPopup(n, e, i), n;
                },
                _notice: function(t) {
                    return BEM.DOM.blocks['sup-notice'].getInstance(t);
                },
                _onPermissionDenied: function() {}
            }, {
                _popups: {},
                _openedPopup: null,
                _onClosePopup: null,
                _openPopup: function(t, e, i) {
                    this._openedPopup !== t && (this._closePopup(), this._openedPopup = t), this._onClosePopup && t.un('close', this._onClosePopup), this._onClosePopup = function(t, e) {
                        this._openedPopup = null, this._onClosePopup = null, i && i(e);
                    }.bind(this), t.onFirst('close', this._onClosePopup).open(e);
                },
                _closePopup: function() {
                    this._openedPopup && this._openedPopup.close();
                },
                STORAGE_NAME: 'notifications',
                _shownVal: null,
                _shown: function(t) {
                    return t !== undefined ? (t && this._setSessionParameter(this.STORAGE_NAME, ''), this._shownVal = t, t) : null !== this._shownVal ? this._shownVal : (this._shownVal = this._hasSessionParameter(this.STORAGE_NAME), this._shownVal);
                },
                _setSessionParameter: function(t, e) {
                    try {
                        window.sessionStorage.setItem(t, e);
                    } catch (i) {}
                },
                _hasSessionParameter: function(t) {
                    try {
                        return window.sessionStorage.hasOwnProperty(t);
                    } catch (e) {
                        return !1;
                    }
                }
            }), BEM.DOM.decl('sup-notice', {
                onSetMod: {
                    js: {
                        inited: function() {
                            var t = this.close.bind(this, !1),
                                e = this.close.bind(this, !0);
                            this.findBlockOn('cancel', 'button2').on('click', function() {
                                home.stat.logPath('click', 'sup.notice_' + this.getMod('type') + '.' + (this.getMod('mode') || 'default') + '.cancel'), this.afterCurrentEvent(t);
                            }, this), this.findBlockOn('ok', 'button2').on('click', function() {
                                home.stat.logPath('click', 'sup.notice_' + this.getMod('type') + '.' + (this.getMod('mode') || 'default') + '.ok'), this.afterCurrentEvent(e);
                            }, this);
                        }
                    }
                },
                open: function() {
                    return this.delMod('hidden'), home.stat.logPath('show', 'sup.notice_' + this.getMod('type') + '.' + (this.getMod('mode') || 'default')), this;
                },
                close: function(t) {
                    return this.hasMod('hidden', 'yes') || (this.setMod('hidden', 'yes'), this.trigger('close', t)), this;
                },
                _setTitle: function(t) {
                    return this.elem('title').html(t), this;
                },
                _setText: function(t) {
                    return this.elem('text').html(t), this;
                },
                _setButtonText: function(t, e) {
                    return this.findBlockOn(t, 'button2').setText(e), this;
                }
            }, {
                _instances: {},
                getInstance: function(t) {
                    if (!this._instances[t]) {
                        var e = BEM.DOM.append(BEM.DOM.scope, home.view('sup-notice_type_' + t));
                        this._instances[t] = e.bem(this.getName());
                    }
                    return this._instances[t];
                }
            }), BEM.DOM.decl({
                block: 'sup-notice',
                modName: 'type',
                modVal: 'default'
            }, {
                onSetMod: {
                    mode: {
                        wait: function() {
                            this._setTitle(home.l10n('pushes.notice.wait.title'));
                        },
                        error: function() {
                            this._setTitle(home.l10n('pushes.notice.error.title'))._setText(home.l10n('pushes.notice.error.text'))._setButtonText('cancel', home.l10n('pushes.notice.error.cancel'));
                        },
                        'web-error': function() {
                            this._setTitle(home.l10n('pushes.notice.error.title'))._setText(home.l10n('pushes.notice.error.web_error'))._setButtonText('cancel', home.l10n('pushes.notice.error.cancel'));
                        },
                        prompt: function() {
                            this._setTitle(home.l10n('pushes.notice.prompt.title'))._setText(home.l10n('pushes.notice.prompt.text'))._setButtonText('cancel', home.l10n('pushes.notice.prompt.cancel'));
                        }
                    }
                },
                open: function(t) {
                    return this.setMod('mode', t), this.__base.apply(this, arguments), this;
                }
            }),
            function(t) {
                t.dom = {
                    getActiveElement: function() {
                        try {
                            return t(document.activeElement);
                        } catch (e) {
                            return t();
                        }
                    }
                }, t.fn.isFocused = function() {
                    return this.is(t.dom.getActiveElement());
                };
            }(jQuery), BEM.DOM.decl('control', {
                onSetMod: {
                    focused: {
                        yes: function() {
                            if (this.hasMod('disabled')) return !1;
                            this._focused || (this._focus(), this.trigger('focus'));
                        },
                        '': function() {
                            this._focused && (this._blur(), this.trigger('blur'));
                        }
                    },
                    disabled: {
                        '*': function(t, e) {
                            var i = this._getControl();
                            i.prop('disabled', Boolean(e)).attr('aria-disabled', Boolean(e)), i.attr('tabindex', e ? null : this.params._tabindex);
                        },
                        yes: function() {
                            this.delMod('focused');
                        }
                    }
                },
                _focus: function() {
                    this._getControl().focus();
                },
                _blur: function() {
                    this._getControl().blur();
                },
                _getControl: function() {
                    var t = this.elem('control');
                    return t.length > 0 ? t : this.domElem;
                },
                _onFocusin: function() {
                    this._focused = !0, this.trigger('focus').setMod('focused', 'yes').bindTo('focusout', this._onFocusout);
                },
                _onFocusout: function() {
                    this._focused = !1, this.trigger('blur').delMod('focused').unbindFrom('focusout');
                },
                getDefaultParams: function() {
                    return {
                        _tabindex: this._getControl().attr('tabindex')
                    };
                }
            }, {
                live: function() {
                    this.liveBindTo('focusin', function(t) {
                        this._onFocusin(t);
                    }), parseInt(BEM.blocks['i-ua'].ios, 10) >= 8 && this.liveBindTo('control', 'focusin', function(t) {
                        t.preventDefault();
                    });
                }
            }), BEM.DOM.decl({
                block: 'button2',
                baseBlock: 'control'
            }, {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.__base.apply(this, arguments);
                        }
                    },
                    pressed: {
                        yes: function() {
                            if (this.hasMod('disabled')) return !1;
                            this.trigger('press');
                        },
                        '': function() {
                            this.trigger('release');
                        }
                    },
                    checked: {
                        yes: function() {
                            this.trigger('check').domElem.attr('aria-pressed', 'true');
                        },
                        '': function() {
                            this.trigger('uncheck').domElem.attr('aria-pressed', 'false');
                        }
                    },
                    disabled: {
                        yes: function() {
                            this.__base.apply(this, arguments), this.delMod('pressed');
                        }
                    },
                    focused: {
                        '': function() {
                            this.__base.apply(this, arguments), this.delMod('pressed');
                        }
                    },
                    progress: {
                        yes: function() {
                            this.setMod('disabled', 'yes');
                        },
                        '': function() {
                            this.delMod('disabled');
                        }
                    }
                },
                getText: function() {
                    return this.elem('text').text();
                },
                setText: function(t) {
                    return this.elem('text').text(t), this;
                },
                _onClick: function(t) {
                    (!this._preventClick || t.detail > 0) && this.trigger('click', this._buildClickEventData(t)), this._preventClick = !1;
                },
                _processClick: function(t) {
                    this.trigger('click', this._buildClickEventData(t));
                },
                _onPointerpress: function(t) {
                    this.setMod('pressed', 'yes').bindToDoc('pointerrelease', this._onPointerrelease);
                },
                _onPointerrelease: function() {
                    this.delMod('pressed').unbindFromDoc('pointerrelease');
                },
                _onKeydown: function(t) {
                    var e = t.keyCode,
                        i = BEM.blocks.keycodes;
                    i.is(e, this.params.pressKeys) && (this.setMod('pressed', 'yes'), i.is(e, this.params.prvntKeys) && t.preventDefault());
                },
                _onKeyup: function(t) {
                    var e = t.keyCode,
                        i = BEM.blocks.keycodes;
                    i.is(e, this.params.prvntKeys) && t.preventDefault(), i.is(e, this.params.pressKeys) && (this.delMod('pressed'), i.is(e, this.params.clickKeys) && (this._preventClick = !0, this._processClick(t)));
                },
                _buildClickEventData: function(t) {
                    return {
                        domEvent: t,
                        isModKey: t.ctrlKey || t.altKey || t.metaKey || t.shiftKey
                    };
                },
                getDefaultParams: function() {
                    return $.extend(this.__base(), {
                        pressKeys: ['SPACE', 'ENTER'],
                        prvntKeys: [],
                        clickKeys: []
                    });
                }
            }, {
                live: function() {
                    return this.liveBindTo('pointerpress', function(t) {
                        this.hasMod('disabled') || this._onPointerpress(t);
                    }).liveBindTo('pointerclick', function(t) {
                        this.hasMod('disabled') || this._onClick(t);
                    }).liveBindTo('keydown', function(t) {
                        this._onKeydown(t);
                    }).liveBindTo('keyup', function(t) {
                        this._onKeyup(t);
                    }), this.__base();
                }
            }), BEM.decl('keycodes', {}, {
                BACKSPACE: 8,
                TAB: 9,
                ENTER: 13,
                CAPS_LOCK: 20,
                ESC: 27,
                SPACE: 32,
                PAGE_UP: 33,
                PAGE_DOWN: 34,
                END: 35,
                HOME: 36,
                LEFT: 37,
                UP: 38,
                RIGHT: 39,
                DOWN: 40,
                INSERT: 45,
                DELETE: 46,
                is: function(t, e) {
                    return (Array.isArray(e) ? e : Array.prototype.slice.call(arguments, 1)).some(function(e) {
                        return this[e] === t;
                    }, this);
                }
            }), BEM.DOM.decl({
                block: 'sup-notice',
                modName: 'type',
                modVal: 'popup'
            }, {
                onSetMod: {
                    hidden: {
                        '': function() {
                            this.bindToDoc('pointerdown focusin', this._onOuterAction);
                        },
                        yes: function() {
                            this.unbindFromDoc('pointerdown focusin', this._onOuterAction);
                        }
                    }
                },
                _onOuterAction: function(t) {
                    0 === $(t.target).closest(this.domElem).length && this.close();
                }
            }),
            function() {
                var t, e;
                if (!home.getData('app-opener.method')) return !1;
                var i = 2000;

                function n(i, n) {
                    var r = n.app,
                        a = i,
                        c = home.parseUrl(i),
                        h = n.appQuery,
                        l = n.queryExtraSources,
                        u = n.cancelDefault || function() {};
                    h && (c.query = s(c.query, h.split('&').reduce(function(t, e) {
                        return e = e.split('='), t[e[0]] = e[1], t;
                    }, {}))), l && 'object' == typeof l && (c.query = s(c.query, function(t) {
                        var i, n, o, s, r = {};
                        for (i in t) t.hasOwnProperty(i) && ((o = t[i]).selector ? (s = $(o.selector), (n = s.val()) && (r[i] = n)) : 'client' === o.location && e && (r[i] = e));
                        return r;
                    }(l)));
                    var d = function(t, e) {
                        var i = home.getData('app-opener.method'),
                            n = i.split(/\W/)[0],
                            o = function(t, e) {
                                var i = {},
                                    n = {
                                        maps: {
                                            href: 'https://maps.yandex.ru/?l=trf',
                                            host: 'maps.yandex.ru',
                                            android: {
                                                package_id: 'ru.yandex.yandexmaps',
                                                scheme: 'android-iframe-scheme' === e ? 'yandexmaps' : 'https',
                                                path: null
                                            },
                                            ios: {
                                                scheme: 'yandexmaps',
                                                path: ''
                                            }
                                        },
                                        metro: {
                                            href: 'https://metro.yandex.ru/',
                                            host: 'metro.yandex.ru',
                                            android: {
                                                package_id: 'ru.yandex.metro',
                                                scheme: 'yandexmetro',
                                                path: null
                                            },
                                            ios: {
                                                scheme: 'yandexmetro',
                                                path: ''
                                            }
                                        },
                                        yabrowser: {
                                            android: {
                                                package_id: 'com.yandex.browser',
                                                scheme: 'https'
                                            }
                                        },
                                        portalapp: {
                                            android: {
                                                package_id: 'ru.yandex.searchplugin',
                                                scheme: 'ya-search-app-open',
                                                prefix: 'www/?uri=https://'
                                            }
                                        }
                                    };
                                n[t] && (i = JSON.parse(JSON.stringify(n[t])));
                                return i.type = e, i;
                            }(t, i);
                        return function(t, e, i) {
                            return ['package_id', 'scheme', 'host', 'path', 'query', 'type', 'prefix'].reduce(function(n, o) {
                                return n[o] = o in t ? t[o] : o in e ? e[o] : o in i ? i[o] : null, n;
                            }, {});
                        }(o[n] || {}, o, e);
                    }(r, c);
                    if (a && '//' === a.slice(0, 2) && (a = location.protocol + a), !d || !d.type) return !0;
                    if (n.onlyMethod && n.onlyMethod !== d.type) return !0;
                    switch (t && $(t).remove(), d.fallback = a, d.type) {
                        case 'android-full-intent':
                            return u(), window.location.replace(function(t) {
                                var e = ['#Intent'];
                                t.scheme && e.push('scheme=' + t.scheme);
                                t.package_id && e.push('package=' + t.package_id);
                                t.fallback && e.push('S.browser_fallback_url=' + encodeURIComponent(t.fallback));
                                e.push('end');
                                var i = home.makeUrl({
                                    scheme: 'intent',
                                    host: t.host,
                                    path: t.path,
                                    query: t.query
                                }) + e.filter(Boolean).join(';');
                                t.prefix && (i = i.replace(/^intent:\/\//, 'intent://' + t.prefix));
                                return i;
                            }(d)), !1;
                        case 'android-iframe-scheme':
                            return u(), d.host = '',
                                function(e, i) {
                                    (t = o()).src = e, t.onload = function() {
                                        document.location = i;
                                    }, document.body.appendChild(t);
                                }(home.makeUrl(d), d.fallback), !1;
                        case 'ios-standart':
                            return u(),
                                function(e, i) {
                                    (t = o()).src = e;
                                    var n = +new Date();
                                    document.body.appendChild(t), setTimeout(function() {
                                        setTimeout(function() {
                                            +new Date() - n < 1060 && (document.location = i);
                                        }, 10);
                                    }, 1000), t.parentNode.removeChild(t);
                                }(home.makeUrl(d), d.fallback), !1;
                    }
                    return !0;
                }

                function o() {
                    return (t = document.createElement('iframe')).style.border = 'none', t.style.width = 0, t.style.height = 0, t.name = 'app-opener' + (Math.random() + '').substr(3, 7), t;
                }

                function s(t, e) {
                    var i;
                    if (!t) return e;
                    if (!e) return t;
                    for (i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
                    return t;
                }
                $(function() {
                    BEM.channel('geodetection').on('coords', function(t, i) {
                        e = i.longitude + ',' + i.latitude;
                    });
                }), BEM.DOM.decl('app-opener', {}, {
                    open: function(t, e) {
                        e.appCallback && setTimeout(function() {
                            e.appCallback();
                        }, i);
                        return n(t, e);
                    }
                }), $('body').on('click', '[data-app]', function(t) {
                    var e, o = $(this).closest('[data-app]'),
                        s = o.data('href') || o.attr('href') || o.attr('action');
                    return o.length && s ? ((e = function(t, e, i) {
                        return n(e, {
                            app: t.data('app'),
                            appQuery: t.data('app-query'),
                            queryExtraSources: t.data('app-query-sources'),
                            cancelDefault: function() {
                                i.preventDefault();
                            }
                        });
                    }(o, s, t)) || function(t) {
                        var e, n, o = t.data('app-counter'),
                            s = t.data('statlog'),
                            r = t.data('app-counter-query'),
                            a = t.data('app-query-sources'),
                            c = !1;
                        if (a)
                            for (var h in a)
                                if (a.hasOwnProperty(h) && (n = a[h]).selector) {
                                    $(n.selector).val() && (c = !0);
                                    break;
                                }
                        c && r ? e = r : o ? e = o : s && (e = s + '.app');
                        setTimeout(function() {
                            e && home.stat.logPath('click', e);
                        }, i);
                    }(o), e) : (home.error('invalid url'), !0);
                });
            }(), BEM.DOM.decl('notifier', {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.win = window, this._popupInited = !1, this._fetchCounter();
                        }
                    }
                },
                _initPopup: function() {
                    if (this._popupInited) return !1;
                    this._popup = this.getPopup(), this._popup.on('beforeOpen beforeClose', function() {
                        var t = this._popup.hasMod('visible', 'yes');
                        this.toggleMod('opened', 'yes', !t), this._rpcBridge !== undefined && this._rpcBridge.contrAgent.win !== undefined && this._rpcBridge.invokeMethod('updatePopupState', !t), t ? this._firstOpen = !1 : (this.delMod('has-unread'), this._firstOpen = 'undefined' == typeof this._firstOpen || undefined), this._hasLoaded || this.getSpin().setMod('progress', 'yes');
                    }.bind(this)), this._popupInited = !0;
                },
                _fetchCounter: function() {
                    return $.ajax({
                        url: this._getCounterUrl(),
                        dataType: 'json',
                        type: 'GET',
                        xhrFields: {
                            withCredentials: !0
                        }
                    }).promise().then(function(t) {
                        if (window.yandex && window.yandex.ringbell && window.yandex.ringbell.updateState({
                                records: t && t.records ? t.records : {
                                    items: []
                                }
                            }), t && t.records.items.length) return t.records.items.reduce(function(t, e) {
                            var i = 0;
                            return e.fields.forEach(function(t) {
                                'unviewed_count' === t.field_id && (i = t.value.integer);
                            }), t + i;
                        }, 0);
                    }).then(this.onUpdateCounter.bind(this));
                },
                _getCounterUrl: function() {
                    return this.params.counterHandle || this.params.apiHost + 'v1/data/app/databases/.ext.notifier@notifications_disk/snapshot?collection_id=meta&ts=' + Date.now();
                },
                _getIframeUrl: function(t) {
                    return this.params.iframeUrl || this.params.baseUrl + '/yandex-notifications/' + this.params.iframeVersion + '/iframe/index.' + t + '.html';
                },
                _getLoaderUrl: function() {
                    return this.params.loaderUrl || this.params.baseUrl + '/iframe-loader/' + this.params.loaderVersion + '/index.min.js';
                },
                _insertLoaderScript: function(t) {
                    var e = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0],
                        i = document.createElement('script');
                    i.setAttribute('src', this._getLoaderUrl()), e.insertBefore(i, e.lastChild), i.onload = t;
                },
                _loadIframe: function() {
                    var t = {
                        iframeUrl: this._getIframeUrl(this.params.lang),
                        container: this.findElem(this._popup.domElem, 'content').get(0)
                    };
                    this._atom = new window.LegoIframeLoader(t), this._rpcBridge = this._atom.getRPCBridge(this), this._atom.on('init', function(t, e) {
                        this._onIframeLoad(e);
                    }.bind(this)), this._atom.init();
                },
                getPopup: function() {
                    return this._popup || this.findBlockOn('popup', 'popup2');
                },
                getSpin: function() {
                    return this._spin || this.getPopup().findBlockInside('spin2');
                },
                init: function() {
                    if (this._rpcBridge) return this;
                    window.LegoIframeLoader ? this._loadIframe() : this._insertLoaderScript(this._loadIframe.bind(this));
                },
                onIconClick: function(t) {
                    !this._popupInited && this._initPopup(), this._rpcBridge || this.init(), !this._popup.hasMod('visible', 'yes') && this._rpcBridge && this._hasLoaded && this._rpcBridge.invokeMethod('resetUnviewed', {}), this._popup.toggleMod('visible', 'yes');
                },
                onDataLoad: function(t) {
                    this.setMod(this._popup.domElem, 'loaded', 'yes'), this.getSpin().delMod('progress'), this._hasLoaded = !0, this._popup.hasMod('visible', 'yes') && this._rpcBridge.invokeMethod('resetUnviewed', {});
                },
                onUpdateCounter: function(t) {
                    this.toggleMod('has-unread', 'yes', !this._firstOpen && Boolean(t)), t && this._firstOpen === undefined && this.count('3027.1228.487', null, null, {
                        reqid: BEM.blocks['i-global'] && BEM.blocks['i-global'].param('reqid') || ''
                    }), this._firstOpen && (this._firstOpen = !1), this.elem('ticker').text(Math.min(99, t));
                },
                updateCounterWithParams: function(t, e) {
                    this._rpcBridge !== undefined && this._rpcBridge.contrAgent.win !== undefined && this._rpcBridge.invokeMethod('updateCounterWithParams', {
                        counterParams: t,
                        referrer: e
                    });
                },
                _onIframeLoad: function(t) {
                    this._rpcBridge.contrAgent.win = t.iframeWin, this._rpcBridge.invokeMethod('onIframeLoad', {
                        source: this.params.source,
                        serviceDatabaseId: this.params.serviceDatabaseId,
                        services: this.params.services,
                        domain: this.params.domain || this.params.tld,
                        counterParams: this.params.counterParams,
                        referrer: this.params.referrer,
                        apiHost: this.params.apiHost
                    });
                },
                onInit: function(t) {},
                getDefaultParams: function() {
                    return {
                        baseUrl: 'https://gcn.yandex-team.ru',
                        loaderVersion: 'stable',
                        iframeVersion: 'stable',
                        lang: 'ru',
                        referrer: location.href
                    };
                },
                count: function(t, e, i, n) {
                    e = e || '', i = i || '';
                    n = n || {};
                    var o = ['reqid', 'yuid', 'serpid', 'service', 'ui'].reduce(function(t, e) {
                            return t + (n[e] ? '/' + e + '=' + n[e] : '');
                        }, ''),
                        s = '//yandex' + (document.location.host.match(/^.*(\..+)$/)[1] || '.ru') + '/clck/click/pid=900/cid=' + i + '/dtype=stred' + (t ? '/path=' + t : '') + (e ? '/vars=' + e : '') + o + '/cts=' + new Date().getTime() + '/*' + document.location.href;
                    document.createElement('IMG').src = s;
                },
                destruct: $.noop
            }, {
                live: function() {
                    this.liveBindTo('click', function(t) {
                        this.onIconClick(t);
                    });
                }
            }), BEM.DOM.decl('notifier', {
                onSetMod: {
                    opened: {
                        yes: function() {
                            this.__base.apply(this), this.domElem.attr('aria-expanded', 'true'), home.stat.logPath('click', this.params.from + '.notifier.popup.show');
                        },
                        '': function() {
                            this.__base.apply(this), this.domElem.attr('aria-expanded', 'false'), home.stat.logPath('resize', this.params.from + '.notifier.popup.close');
                        }
                    }
                },
                _fetchCounter: function() {
                    if (this.__self._fetchPromise) return this.__self._fetchPromise.then(this.onUpdateCounter.bind(this));
                    var t = this.__base.apply(this, arguments);
                    return this.__self._fetchPromise = t, t.fail(function(t) {
                        var e = t && t.responseJSON && t.responseJSON.error;
                        'DataNotFoundError' !== e && home.error.logError({
                            block: 'notifier',
                            message: 'Cannot load counter: ' + (e || t && t.status || 'unknown'),
                            sourceType: 'network'
                        });
                    });
                },
                onUpdateCounter: function(t) {
                    return void 0 !== t && this.__base.apply(this, arguments), t;
                }
            }, {
                hide: function() {
                    $('.notifier').each(function() {
                        var t = $(this);
                        if (t.hasClass('notifier_js_inited')) {
                            var e = t.bem('notifier');
                            e && e.getPopup().delMod('visible');
                        }
                    });
                }
            }), BEM.DOM.decl('notifier', {
                _attachEvents: function() {
                    this._popup.on('beforeOpen', function() {
                        var t = window.history.state || {};
                        t.notifier || window.history.pushState($.extend(t, {
                            notifier: 'open'
                        }), null);
                    }), this._popup.on('beforeClose', function(t) {
                        var e = window.history.state || {};
                        e.notifier && 'open' === e.notifier && window.history.back();
                    }), window.addEventListener('popstate', this._onUpdateState.bind(this));
                },
                _initPopup: function() {
                    this.__base.apply(this, arguments), this._attachEvents();
                },
                _onUpdateState: function() {
                    var t = window.history.state || {};
                    t.notifier && 'open' === t.notifier ? this._popup.setMod('visible', 'yes') : this._popup.delMod('visible');
                },
                onScreenChange: function(t) {
                    this._popup.findBlockInside('notifier__close').toggleMod('visible', 'yes', 'settings' !== t);
                },
                getPopup: function() {
                    return this._popup || this.findBlockOn('popup', 'light-popup');
                }
            }), BEM.DOM.decl('notifier', {
                getPopup: function() {
                    return this._popup || BEM.blocks.dialog.getInstance({
                        type: 'notifier'
                    });
                },
                getSpin: function() {
                    return this._spin || this.getPopup().findBlockInside('loader');
                },
                onIconClick: function() {
                    this.__base.apply(this, arguments), this._popup.show();
                },
                _attachEvents: function() {
                    this._popup.on('show hide', function(t) {
                        var e = 'hide' === t.type;
                        this.toggleMod('opened', 'yes', !e), this._rpcBridge !== undefined && this._rpcBridge.contrAgent.win !== undefined && this._rpcBridge.invokeMethod('updatePopupState', !e), e ? this._firstOpen = !1 : (this.delMod('has-unread'), this._firstOpen = 'undefined' == typeof this._firstOpen || undefined), this._hasLoaded || this.getSpin().setMod('progress', 'yes');
                    }.bind(this));
                },
                onScreenChange: function(t) {
                    this._popup.toggleMod(this._popup.elem('close'), 'hidden', 'yes', 'settings' === t);
                }
            }), BEM.DOM.decl({
                block: 'notifier',
                modName: 'has-close',
                modVal: 'yes'
            }, {
                _initPopup: function() {
                    this.__base.apply(this, arguments), this._close = this.findElem(this._popup.domElem, 'close'), this.bindTo(this._close, 'pointerclick', this.closeModal);
                },
                closeModal: function(t) {
                    this._popup.delMod('visible');
                }
            }), BEM.DOM.decl('mheader3', {
                onSetMod: {
                    js: function() {
                        this.bindTo('show-menu', 'click', function() {
                            return $('.menu2').bem('menu2').toggle(), !1;
                        }), this.bindTo('show-domik', 'click', function(t) {
                            BEM.blocks.dialog.show('domik'), t.preventDefault();
                        }), home.getData('geohelper.disabled') || this.bindTo('locate', 'click', function() {
                            BEM.blocks['i-geolocation'].locateAndLoad({
                                city: !0
                            });
                        });
                        var t = this.elem('messenger');
                        t.length && (this.bindTo(t, 'click', function() {
                            return BEM.blocks['i-messenger'].showWidget(), !1;
                        }), BEM.blocks['i-messenger'].listenCount(function(t) {
                            this.setMod(this.elem('messenger'), 'unread', t > 0 ? 'yes' : 'no');
                        }.bind(this)));
                    }
                }
            }), BEM.DOM.decl('search3', {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.__base.apply(this, arguments), this._suggest = window.MBEM && MBEM.getBlock(this.domElem[0], 'mini-suggest'), BEM.channel('i-height-event').on('change', function(t) {
                                this._suggest && ('change' === t.type ? this._suggest.repositionPopup() : this._suggest._hidePopup());
                            }, this);
                            var t = function() {
                                this._suggest && this._suggest._hidePopup();
                            };
                            BEM.channel('menu').on('open', t, this), BEM.channel('dialog').on('open', t, this);
                        }
                    }
                }
            }), BEM.DOM.decl({
                block: 'search3',
                modName: 'voice',
                modVal: 'yes'
            }, {
                onSetMod: {
                    js: function() {
                        this.__base.apply(this, arguments), this._checkAudio() && (this.bindTo('voice', 'click', function() {
                            return this.startRecognize(), home.stat.logPath('click', 'voice.on'), !1;
                        }), this.bindTo('voice', 'touchstart mousedown', function(t) {
                            t.stopPropagation();
                        }));
                    }
                },
                _val: function(t) {
                    return this.domElem.find('.mini-suggest__input').val(t);
                },
                _checkAudio: function() {
                    return !(!(navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.mediaDevices && navigator.mediaDevices.getUserMedia) || !('AudioContext' in window || 'webkitAudioContext' in window)) && (this.setMod('audio', 'supported'), home.stat.logPath('show', 'voice'), !0);
                },
                startRecognize: function() {
                    this._initVoicePopup(), BEM.blocks['i-message-locker'].forceClose(), BEM.channel('voice-search').trigger('init'), this._voicePopup.startRecognition({
                        origin: this.params.webspeechkitStaticOrigin,
                        lang: this.params.recognitionLocale,
                        apikey: '5e7c4b34-f4ff-49c1-a683-44439c124cc8',
                        recognitionModel: 'general',
                        utteranceSilence: this.params.recognitionUtteranceSilence || 100,
                        applicationName: this.params.webspeechkitApplication
                    });
                },
                _initVoicePopup: function() {
                    if (!this._popupInited) {
                        this._popupInited = !0;
                        var t = $(home.view('voice-search-popup', {
                                showMicHelper: this.params.showMicHelper
                            })).appendTo('body').filter('.voice-search-popup'),
                            e = this;
                        this._voicePopup = t.bem('voice-search-popup'), this._voicePopup.on({
                            start: function() {
                                e._setVoiceSearchState(!0);
                            },
                            hide: function() {
                                e._setVoiceSearchState(!1);
                            },
                            text: function(t, i) {
                                i.session.recognizedText && (e._hasRecognized || (e._hasRecognized = !0, home.stat.logPath('click', 'voice.data')));
                            },
                            success: function(t, i) {
                                e._val(i.session.recognizedText);
                            },
                            'after-success': function() {
                                e._setVoiceSearchState(!1), e._submitForm();
                            }
                        });
                    }
                },
                _setVoiceSearchState: function(t) {
                    this.toggleMod(this.elem('voice'), 'active', 'yes', t);
                },
                _submitForm: function() {
                    this.domElem.append($('<input>', {
                        type: 'hidden',
                        name: 'query_source',
                        value: 'voice'
                    })), this.domElem.submit();
                }
            }), BEM.DOM.decl('button', {
                onSetMod: {
                    js: {
                        inited: function() {
                            var t = this.isDisabled(),
                                e = this.domElem;
                            (this._href = e.attr('href')) && t && e.removeAttr('href');
                        }
                    },
                    disabled: function(t, e) {
                        var i = this.domElem;
                        e && this.delMod('hovered'), this._href && (e ? i.removeAttr('href') : i.attr('href', this._href)), this.afterCurrentEvent(function() {
                            i && i.prop('disabled', e);
                        });
                    },
                    pressed: function(t, e) {
                        if (this.hasMod('disabled')) return !1;
                        this.trigger(e ? 'press' : 'release');
                    }
                },
                isDisabled: function() {
                    return this.hasMod('disabled', 'yes');
                },
                url: function(t) {
                    return void 0 === t ? this._href : (this._href = t, this.isDisabled() || this.domElem.attr('href', t), this);
                },
                getUrl: function() {
                    return this.url();
                },
                setUrl: function(t) {
                    return this.url(t);
                },
                _onPointerpress: function(t) {
                    this.setMod('pressed', 'yes').bindToDoc('pointerrelease', this._onPointerrelease);
                },
                _onPointerrelease: function(t) {
                    this.delMod('pressed').unbindFromDoc('pointerrelease');
                },
                _onClick: function(t) {
                    this.isDisabled() ? t.preventDefault() : this.afterCurrentEvent(function() {
                        this.domElem && this.trigger('click');
                    });
                }
            }, {
                live: function() {
                    this.liveBindTo('pointerclick', function(t) {
                        this._onClick(t);
                    }).liveBindTo('pointerpress', function(t) {
                        this.isDisabled() || this._onPointerpress(t);
                    });
                }
            }),
            function() {
                var t, e, i, n, o = {},
                    s = 0;
                BEM.decl('i-voice', {}, {
                    events: {
                        ERROR: 'error',
                        BEFORE_START_RECOGNIZE: 'before-start-recognize',
                        START_RECOGNIZE: 'start-recognize',
                        SPEECH_KIT_INIT: 'speech-kit-init',
                        SPEECH_KIT_ACCESS_GRANTED: 'speech-kit-access-granted',
                        RECOGNIZE_TEXT: 'recognize-text',
                        STOP_RECOGNIZE: 'stop-recognize',
                        PERMISSION_REQUEST: 'permission-request'
                    },
                    eventsType: {
                        ERROR_INIT: 'error-init',
                        ERROR_SPEECH_KIT: 'error-speech-kit',
                        SUCCESS_RECOGNIZE: 'success-recognize',
                        TIMEOUT_SUCCESS: 'timeout-success',
                        TIMEOUT_EMPTY: 'timeout-empty'
                    },
                    TIMEOUT_RECOGNIZE: 10000,
                    startRecognize: function(t) {
                        if (this._isOnline()) {
                            n = t, o = {
                                recognizedText: '',
                                _startedRecognize: !0,
                                maxTime: t.maxTime || 0 === t.maxTime ? t.maxTime : this.TIMEOUT_RECOGNIZE
                            };
                            var s = window.AudioContext || window.webkitAudioContext;
                            this._freeAudioContext();
                            try {
                                (i = i || new s()).createScriptProcessor(256, 1, 1).disconnect();
                            } catch (r) {
                                return void this.trigger(this.events.ERROR, {
                                    type: this.eventsType.ERROR_INIT,
                                    message: 'AudioContext is not available'
                                });
                            }
                            this.trigger(this.events.BEFORE_START_RECOGNIZE, {
                                session: o
                            }), this._getStreamer(t, function(n) {
                                if (n.err || !n.streamer) return this.trigger(this.events.ERROR, {
                                    type: this.eventsType.ERROR_INIT,
                                    message: n.err
                                }), void this._freeAudioContext();
                                window.ya.speechkit.audiocontext = i, o.streamer = n.streamer, this._speechKitStart(o, t), this.trigger(this.events.START_RECOGNIZE, {
                                    session: o
                                }), e = setTimeout(function() {
                                    this.isStartedRecognize() && !this.isPermissionProvided() && this.trigger(this.events.PERMISSION_REQUEST, {
                                        session: o
                                    });
                                }.bind(this), 500);
                            }.bind(this));
                        } else this.trigger(this.events.ERROR, {
                            type: this.eventsType.ERROR_INIT,
                            message: 'offline'
                        });
                    },
                    _speechKitStart: function(t, e) {
                        var i = e.codec || window.ya.speechkit.FORMAT.OPUS || window.ya.speechkit.FORMAT.PCM16;
                        t.streamer.start({
                            lang: e.lang,
                            model: e.recognitionModel,
                            apikey: e.apikey,
                            initCallback: this._speechKitInitHandler.bind(this),
                            accessGrantedCallback: this._speechKitAccessGrantedHandler.bind(this),
                            dataCallback: this._speechKitDataHandler.bind(this),
                            errorCallback: this._speechKitErrorHandler.bind(this),
                            format: i,
                            particialResults: !0,
                            utteranceSilence: Math.max(e.utteranceSilence || 0, 60),
                            use_snr: Boolean(e.use_snr),
                            yandexuid: e.yandexuid,
                            applicationName: e.applicationName
                        });
                    },
                    _isOnline: function() {
                        return 'undefined' == typeof navigator.onLine || navigator.onLine;
                    },
                    isStartedRecognize: function() {
                        return o._startedRecognize;
                    },
                    stopRecognize: function(t, i) {
                        this.isStartedRecognize() && (clearTimeout(e), this._resetTimeout(), o._startedRecognize = !1, o.streamer && o.streamer.abort(), clearTimeout(this._initFailedTimeout), this.trigger(this.events.STOP_RECOGNIZE, {
                            type: t,
                            session: o,
                            data: i
                        }));
                    },
                    isSpeechkitLoaded: function() {
                        return window.ya && window.ya.speechkit && window.ya.speechkit.SpeechRecognition;
                    },
                    isPermissionProvided: function() {
                        return window.ya.speechkit.isPermissionProvided();
                    },
                    _freeAudioContext: function() {
                        i && i.close && i.state && ('closed' !== i.state && i.close(), i = null);
                    },
                    _speechKitDataHandler: function(t, e) {
                        s = 0, this.afterCurrentEvent(function() {
                            t && (o.recognizedText = t, this.trigger(this.events.RECOGNIZE_TEXT, {
                                session: o,
                                isDone: e
                            })), e && this.stopRecognize(this.eventsType.SUCCESS_RECOGNIZE);
                        }.bind(this));
                    },
                    _speechKitInitHandler: function(t) {
                        o.id = t, this._resetTimeout(), this._startTimeout(), clearTimeout(this._initFailedTimeout), this.trigger(this.events.SPEECH_KIT_INIT, {
                            session: o
                        });
                    },
                    _speechKitAccessGrantedHandler: function() {
                        this._initFailedTimeout = setTimeout(function() {
                            this.trigger(this.events.ERROR, {
                                type: this.eventsType.ERROR_SPEECH_KIT,
                                session: o,
                                message: 'offline'
                            });
                        }.bind(this), 5000), this.trigger(this.events.SPEECH_KIT_ACCESS_GRANTED, {
                            session: o
                        });
                    },
                    _speechKitErrorHandler: function(t) {
                        if ('MediaDeviceFailedDueToShutdown' === t && s < 1) return this._speechKitStart(o, n), void s++;
                        o._startedRecognize = !1, clearTimeout(e), this.trigger(this.events.ERROR, {
                            type: this.eventsType.ERROR_SPEECH_KIT,
                            session: o,
                            message: t
                        }), this._freeAudioContext();
                    },
                    _startTimeout: function() {
                        o.maxTime && (o._timerRecognize = setTimeout(this._timeoutHandler.bind(this), o.maxTime));
                    },
                    _resetTimeout: function() {
                        o._timerRecognize && (clearTimeout(o._timerRecognize), o._timerRecognize = null);
                    },
                    _timeoutHandler: function() {
                        o._timerRecognize = null;
                        var t = Boolean(o.recognizedText);
                        this.stopRecognize(this.eventsType[t ? 'TIMEOUT_SUCCESS' : 'TIMEOUT_EMPTY']);
                    },
                    loadSpeechkit: function(t, e) {
                        this._loaded ? e && e() : (this._loadCallbacks = this._loadCallbacks || [], this._loadCallbacks.push(e), 1 === this._loadCallbacks.length && this._loadSpeechkit(t, function(t) {
                            this._loadCallbacks.forEach(function(e) {
                                e && e(t);
                            }), this._loadCallbacks = [], this._loaded = !0;
                        }.bind(this)));
                    },
                    _loadSpeechkit: function(t, e) {
                        var i = document.createElement('script');
                        i.src = t + '/webspeechkit/v-1.0.5/webspeechkit-recognition.min.js', i.async = !0, i.crossOrigin = '', i.onload = function() {
                            e(!0);
                        }, i.onerror = function() {
                            e(!1);
                        }, document.body.appendChild(i);
                    },
                    _initStreamer: function(e) {
                        try {
                            e({
                                streamer: t = new window.ya.speechkit.SpeechRecognition()
                            });
                        } catch (i) {
                            e({
                                err: 'Error at SpeechStreamer create'
                            });
                        }
                    },
                    _getStreamer: function(e, i) {
                        var n = this;
                        t ? i({
                            streamer: t
                        }) : this.isSpeechkitLoaded() ? this._initStreamer(i) : this.loadSpeechkit(e.origin, function(t) {
                            t ? n.afterCurrentEvent(function() {
                                n._initStreamer(i);
                            }) : i({
                                err: 'Error when loading webspeechkit'
                            });
                        });
                    }
                }), 'undefined' == typeof window.ya && (window.ya = {}), 'undefined' == typeof window.ya.speechkit && (window.ya.speechkit = {});
                var r = {
                    websocketProtocol: 'wss://',
                    asrUrl: 'webasr.yandex.net/asrsocket.ws',
                    ttsUrl: 'https://tts.voicetech.yandex.net',
                    ttsStreamUrl: 'webasr.yandex.net/ttssocket.ws',
                    lang: 'ru-RU',
                    langWhitelist: ['ru-RU', 'tr-TR', 'en-US', 'en-GB', 'uk-UA', 'ru', 'tr', 'en', 'uk', 'en-EN'],
                    model: 'notes',
                    applicationName: 'jsapi',
                    apikey: '',
                    uuid: 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(t) {
                        var e = 16 * Math.random() | 0;
                        return ('x' === t ? e : 3 & e | 8).toString(16);
                    })
                };
                'undefined' == typeof window.ya.speechkit._extend ? window.ya.speechkit.settings = r : window.ya.speechkit.settings = window.ya.speechkit._extend(r, window.ya.speechkit.settings);
            }(), BEM.DOM.decl('voice-search-popup', {
                onSetMod: {
                    js: {
                        inited: function() {
                            this._setupProperties();
                        }
                    }
                },
                state: {
                    name: 'state',
                    opened: 'opened',
                    closed: 'closed'
                },
                speechKitState: {
                    name: 'speechkit-state',
                    init: 'init',
                    start: 'start',
                    recognized: 'recognized',
                    finish: 'finish',
                    error: 'error',
                    access: 'access'
                },
                _indicatorHeightMultiplier: 0.8,
                SMOOTH_CONSTANT: 0.8,
                loadSpeechkit: function(t) {
                    BEM.blocks['i-voice'].loadSpeechkit(t);
                },
                startRecognition: function(t) {
                    this._voiceRecognition.startRecognize(t);
                },
                _setupProperties: function() {
                    if (this._voiceRecognition = BEM.blocks['i-voice'], this._errorDescription = {
                            PermissionDenied: {
                                title: home.l10n('voice-search.popup.noaccess.title'),
                                subtitle: home.l10n('voice-search.popup.noaccess.subtitle')
                            },
                            ConnectionProblem: {
                                title: home.l10n('voice-search.popup.connectionproblem.subtitle'),
                                subtitle: home.l10n('voice-search.popup.connectionproblem.title')
                            },
                            other: {
                                title: home.l10n('voice-search.popup.unknownerror.title')
                            }
                        }, this._content = this.elem('content'), this._textElem = this.elem('text'), this._indicator = this.elem('indicator'), this._boundSetupIndicator = this._setupIndicator.bind(this), this._paranja = $('.voice-search-popup__paranja'), this._lastAmplitute = 0, this._voiceRecognition) {
                        var t = this._voiceRecognition,
                            e = t.events;
                        this._voiceEventsType = t.eventsType, t.on(e.BEFORE_START_RECOGNIZE, this._onPreInit, this), t.on(e.SPEECH_KIT_INIT, this._onInit, this), t.on(e.SPEECH_KIT_ACCESS_GRANTED, this._onAccessGranted, this), t.on(e.ERROR, this._voiceOnError, this), t.on(e.RECOGNIZE_TEXT, this._voiceRecognizeText, this), t.on(e.STOP_RECOGNIZE, this._voiceStopRecognize, this), t.on(e.PERMISSION_REQUEST, this._voicePermissionRequest, this), this._calcSoundAmplitudePerFrameBinded = this._calcSoundAmplitudePerFrame.bind(this), this.bindTo('continue-button', 'click', this._onErrorContinueButtonPressed, this), this.bindTo('help-button', 'click', this._onErrorHelpButtonPressed, this);
                    }
                },
                _calcSoundAmplitudePerFrame: function() {
                    if (this._nodeAnalyzer) {
                        var t = new Uint8Array(this._nodeAnalyzer.frequencyBinCount);
                        this._nodeAnalyzer.getByteFrequencyData(t);
                        var e = Array.prototype.slice.call(t, 0, 4),
                            i = e.reduce(function(t, e) {
                                return t + e;
                            }, 0) / e.length / 255;
                        this._onAudioChangeAmplitude(i), this._animationFrameId = window.requestAnimationFrame(this._calcSoundAmplitudePerFrameBinded);
                    }
                },
                _onPreInit: function() {
                    this._showLayout(), this.trigger('start');
                },
                _onAccessGranted: function() {
                    this._attachCloseEvents(), this._setupIndicator(), this._showInitState();
                },
                _onInit: function(t, e) {
                    e.session && e.session.streamer && e.session.streamer.recorder && (this._nodeAnalyzer = e.session.streamer.recorder.getAnalyserNode(), this._nodeAnalyzer.fftSize = 32, this._nodeAnalyzer.smoothingTimeConstant = 0.95, this._calcSoundAmplitudePerFrameBinded()), this._showStartState();
                },
                _voiceRecognizeText: function(t, e) {
                    var i = e.session.recognizedText;
                    i && (this._startedRecognize = !0, this._setRecognizedText(i), this._showRecognizedState(), this.trigger('text', e));
                },
                _voiceStopRecognize: function(t, e) {
                    if (e.type === this._voiceEventsType.SUCCESS_RECOGNIZE || e.type === this._voiceEventsType.TIMEOUT_SUCCESS) return this.trigger('success', e), void setTimeout(function() {
                        this.trigger('after-success', e), this._hideLayout();
                    }.bind(this), this.__self.TIMEOUT_SUCCESS_RECOGNITION);
                    this._hideLayout();
                },
                _voiceOnError: function(t, e) {
                    this._attachCloseEvents();
                    var i = this._parseError(e.message);
                    this._showErrorState(i);
                },
                _parseError: function(t) {
                    return -1 !== (t = String(t)).indexOf('Socket error:') || 'offline' === t ? 'ConnectionProblem' : -1 !== t.indexOf('not allowed') || 'MediaDeviceFailedDueToShutdown' === t || 'PermissionDismissedError' === t || 'PermissionDeniedError' === t || 'Permission denied' === t || 'Permission dismissed' === t ? 'PermissionDenied' : 'other';
                },
                _attachCloseEvents: function() {
                    var t = this._hideLayout.bind(this),
                        e = new Date();
                    this._paranja.on('click', function() {
                        if (!(new Date() - e > 500)) return !1;
                        t();
                    }), this.bindTo('close', 'click', t), this.bindToDoc('keydown', function(e) {
                        e.originalEvent && 'altKey' in e.originalEvent && (home.stat.logPath('click', 'voice.popup.exit-key'), t());
                    });
                },
                _showLayout: function() {
                    this.afterCurrentEvent(function() {
                        this.setMod(this._paranja, 'state', 'open');
                    }), home.stat.logDOMShow(this.domElem), home.stat.logDOMShow(this._paranja), this.trigger('show');
                },
                _hideLayout: function() {
                    this._voiceRecognition.stopRecognize(), this.unbindFromDoc('keydown'), this._paranja.unbind('click'), this.unbindFrom('close', 'click'), window.cancelAnimationFrame(this._animationFrameId), this.delMod(this._paranja, 'state'), this._hidePopup(), this.trigger('hide');
                },
                _onErrorContinueButtonPressed: function() {
                    this._hideLayout();
                },
                _onErrorHelpButtonPressed: function() {
                    this._hideLayout();
                },
                _bindEvents: function() {
                    $(window).on('resize.voice-search-popup', this._boundSetupIndicator), $(window).on('popstate.voice-search-popup', this._hideLayout.bind(this)), $(window).on('scroll.voice-search-popup', this._hideLayout.bind(this)), this.__self._visibilityEventName && $(document).one(this.__self._visibilityEventName + '.voice-search-popup', function() {
                        this.afterCurrentEvent(function() {
                            this._hideLayout();
                        });
                    }.bind(this));
                },
                _unbindEvents: function() {
                    $(window).off('.voice-search-popup'), this.__self._visibilityEventName && $(document).off(this.__self._visibilityEventName + '.voice-search-popup');
                },
                _setupIndicator: function() {
                    var t = this.elem('content').height() * this._indicatorHeightMultiplier;
                    t = Math.floor(t), this._indicator.width(t), this._indicator.height(t);
                },
                _getProcessedAmplitude: function(t, e) {
                    return this.SMOOTH_CONSTANT * t + (1 - this.SMOOTH_CONSTANT) * e;
                },
                _updateIndicatorWithAmplitude: function(t) {
                    var e = t <= this._lastAmplitute;
                    if (t = this._getProcessedAmplitude(t, this._lastAmplitute), this._lastAmplitute = t, t <= 0.4 || e) return this._indicator.css('transform', ''), this._indicator.css('transition', ''), void this._indicator.css('opacity', '');
                    var i = Math.min(1.2 * t, 1);
                    this._indicator.css('transition', 'opacity .1s linear, transform 0s linear'), this._indicator.css('transform', 'translate(-50%, -50%) scale(' + i + ')'), this._indicator.css('opacity', '1');
                },
                _showPopup: function() {
                    this._bindEvents(), this._showLayout(), this.setMod(this.state.name, this.state.opened), history.pushState && history.pushState(null, document.title, location.href);
                },
                _hidePopup: function() {
                    this.getMod(this.state.name) === this.state.opened && (this._unbindEvents(), this.setMod(this.state.name, this.state.closed));
                },
                _setRecognizedText: function(t) {
                    this._textElem.text(t);
                },
                _showInitState: function() {
                    this.setMod(this.speechKitState.name, this.speechKitState.init), this._showPopup();
                },
                _showStartState: function() {
                    this._setRecognizedText(''), this.setMod(this.speechKitState.name, this.speechKitState.start);
                },
                _showRecognizedState: function() {
                    this.setMod(this.speechKitState.name, this.speechKitState.recognized);
                },
                _showErrorState: function(t) {
                    var e;
                    this._errorDescription[t] && (e = this._errorDescription[t].subtitle || '', this.setMod(this.speechKitState.name, this.speechKitState.error), this.elem('error-title').text(this._errorDescription[t].title), this.elem('error-subtitle').html(e), this._showPopup(), home.stat.logPath('show', 'voice.popup.error.' + t));
                },
                _onAudioChangeAmplitude: function(t) {
                    this.getMod(this.speechKitState.name) !== this.speechKitState.finish && this._updateIndicatorWithAmplitude(t);
                },
                _voicePermissionRequest: function() {
                    this.setMod(this.speechKitState.name, this.speechKitState.access);
                }
            }, {
                TIMEOUT_SUCCESS_RECOGNITION: 700,
                live: !0,
                _visibilityEventName: (['hidden', 'mozHidden', 'webkitHidden', 'msHidden'].forEach(function(t) {
                    !k && t in document && (k = t);
                }), k && k.replace(/hidden/i, 'visibilitychange'))
            }), BEM.DOM.decl('voice-search-popup', {
                _setupProperties: function() {
                    this.__base.apply(this, arguments), this._textInner = this.elem('text-inner'), this._errorDescription = {
                        PermissionDenied: {
                            title: home.l10n('voice-search.popup.noaccess.title')
                        },
                        ConnectionProblem: {
                            title: home.l10n('voice-search.popup.connectionproblem.subtitle'),
                            subtitle: home.l10n('voice-search.popup.connectionproblem.title')
                        },
                        other: {
                            title: home.l10n('voice-search.popup.unknownerror.title')
                        }
                    };
                },
                _setRecognizedText: function(t) {
                    this._textInner.text(t), this._updateTextSize();
                },
                _setTextSize: function() {
                    this._textElem.height() < this._textInner.height() ? this.setMod(this._textElem, 'small-text', 'yes') : this.delMod(this._textElem, 'small-text', '');
                },
                _updateTextSize: function() {
                    this.hasMod(this._textElem, 'small-text') || this._setTextSize();
                }
            }), BEM.DOM.decl({
                block: 'search3',
                modName: 'sticky',
                modVal: 'yes'
            }, {
                onSetMod: {
                    js: {
                        inited: function() {
                            if (this.__self.isStickySupported()) {
                                var t = !!BEM.blocks['i-ua'].passiveEvents && {
                                        passive: !0
                                    },
                                    e = this._handleScroll.bind(this);
                                this._oldscroll = 0, this._sticky = !1, this._suggest = window.MBEM && MBEM.getBlock(this.domElem[0], 'mini-suggest'), this._endElement = $('.search3__end'), this._updateMetrics(), window.addEventListener('scroll', e, t), window.addEventListener('resize', e, t), window.addEventListener('orientationchange', e, t);
                                var i = this._updateMetrics.bind(this);
                                window.addEventListener('resize', i, t), window.addEventListener('orientationchange', i, t), BEM.channel('dialog').on('hide', function() {
                                    i(), this.delMod('position');
                                }, this), BEM.channel('mini-suggest').on('focus', this._onFocus, this), BEM.channel('mini-suggest').on('blur', this._onBlur, this), MBEM.channel('i-mini-scroll-to').on({
                                    start: function() {
                                        this._disabledByScroll = !0;
                                    },
                                    stop: function() {
                                        this._disabledByScroll = !1;
                                    }
                                }, this), this.__base.apply(this, arguments);
                            } else this.__base.apply(this, arguments);
                        }
                    },
                    position: {
                        fix: function() {
                            this._offset = this._getInitialOffset(), this._sticky = !0, this.delMod('style'), this._updateMetrics();
                        },
                        '': function() {
                            this._offset = 0, this._sticky = !1, this.setMod('style', 'skin'), this._clearProps();
                        }
                    }
                },
                _getInitialOffset: function() {
                    return -this.__self.TOP_SCROLL_FREE_SPACE;
                },
                _updateHeight: function() {
                    this._height = this.domElem.height() + this.__self.TOP_PADDING;
                },
                _updateFullHeight: function() {
                    this._fullHeight = this._height;
                },
                _handleScroll: function() {
                    if (!this._suggestFocus) {
                        var t = window.pageYOffset,
                            e = t - this._oldscroll;
                        this._handlePosition(t), this._handleOffset(e), this._oldscroll = t;
                    }
                },
                _handleOffset: function(t) {
                    if (this._sticky && !this._disabledByScroll) {
                        var e = this._offset - t;
                        (e = Math.max(-this._fullHeight - this.__self.TOP_SCROLL_FREE_SPACE, Math.min(0, e))) !== this._offset && Math.max(this._offset, e) > -this._fullHeight - 10 && (this._applyProps(e), e > -0.3 * this._fullHeight && home.stat.logPath('show', 'upsearch')), this._offset = e;
                    }
                },
                _handlePosition: function(t) {
                    t > this._searchTop + this._height + this.__self.BOTTOM_PADDING ? this.hasMod('position') || $('.body_covers_yes').length || this.setMod('position', 'fix') : this.hasMod('position', 'fix') && t < this._searchTop && this.delMod('position');
                },
                _applyProps: function(t) {
                    this.domElem.css({
                        top: t + 'px'
                    });
                },
                _clearProps: function() {
                    this.domElem.css({
                        top: ''
                    });
                },
                _onFocus: function() {
                    this._suggestFocus = !0, this._updateMetrics(), this.hasMod('position') && (this.delMod('position'), setTimeout(function() {
                        this._suggest.repositionPopup();
                    }.bind(this), 0), home.stat.logPath('click', 'upsearch'));
                },
                _onBlur: function() {
                    this._suggestFocus = !1, setTimeout(this._updateMetrics.bind(this), 300);
                },
                _updateMetrics: function() {
                    this._updateHeight(), this._updateFullHeight(), this._searchTop = this._endElement.offset().top - this._height;
                }
            }, {
                isStickySupported: function() {
                    return 'CSS' in window && CSS.supports && (CSS.supports('position', 'sticky') || CSS.supports('position', '-webkit-sticky'));
                },
                TOP_PADDING: 10,
                BOTTOM_PADDING: 10,
                TOP_SCROLL_FREE_SPACE: 100
            }), BEM.DOM.decl('mtabs', {
                _onTabClick: function(t) {
                    var e = t.target,
                        i = e.getAttribute('data-orig-href') || e.href,
                        n = document.querySelector('.search3 .mini-suggest__input').value;
                    n ? (e.setAttribute('data-orig-href', i), e.href = e.getAttribute('data-search-href').replace('*text*', encodeURIComponent(n))) : e.href = i;
                }
            }, {
                live: function() {
                    this.liveBindTo('item', 'mousedown', function(t) {
                        this._onTabClick(t);
                    });
                }
            }), M = $('html').hasClass('i-ua_scroll_yes'), BEM.DOM.decl('scroller', {
                onSetMod: {
                    js: function() {
                        this._scrollLeft = 0, this.updateSize(), this.channel('i-globalstate').on('width', this.changeThis(this.updateSize));
                    }
                },
                scrollToElem: function(t, e) {
                    var i = t.outerWidth(),
                        n = t.prop('offsetLeft') - (this._getParentWidth() - i) / 2 + this._getPadding();
                    this.scrollTo(n, e);
                },
                scrollTo: function(t, e) {
                    var i = this;
                    this._systemScroll = !0, M ? (this.domElem.stop(), !1 !== e ? this.domElem.animate({
                        scrollLeft: t
                    }, 200, function() {
                        setTimeout(function() {
                            i._systemScroll = !1;
                        }, 50);
                    }) : this.domElem.scrollLeft(t)) : !1 !== e ? (this._setAnimatedScroll(t), setTimeout(function() {
                        i._systemScroll = !1;
                    }, 250)) : (this.delMod('animated'), this._setScroll(t)), !1 === e && setTimeout(function() {
                        i._systemScroll = !1;
                    }, 50);
                },
                scrollLeft: function() {
                    return M ? this.domElem.scrollLeft() : this._scrollLeft;
                },
                scrollWidth: function() {
                    return M ? this.domElem.prop('scrollWidth') : this._scrollWidth;
                },
                updateSize: function() {
                    var t;
                    return this._parentWidth = undefined, M || (this._scrollWidth = this.domElem.parent().prop('scrollWidth'), t = this._getParentWidth(), this._scrollLeft > this._scrollWidth - t && this._setScroll(this._scrollWidth - t)), this;
                },
                _getPadding: function() {
                    return this._padding === undefined && (this._padding = parseInt(this.domElem.css('padding-left'), 10) || 0), this._padding;
                },
                _getParentWidth: function() {
                    var t;
                    return this._parentWidth === undefined && (t = this.domElem.parent(), this._parentWidth = t.width()), this._parentWidth;
                },
                _setScroll: function(t) {
                    var e = this._getParentWidth();
                    t > this._scrollWidth - e && (t = this._scrollWidth - e), t < 0 && (t = 0), this._scrollLeft = t, BEM.blocks['i-crossbrowser'].setTransform(this.domElem, -t), this.domElem.trigger('scroll');
                },
                _setAnimatedScroll: function(t) {
                    this.setMod('animated', 'yes'), this.afterCurrentEvent(function() {
                        this._setScroll(t);
                    });
                },
                _onTouchStart: function(t) {
                    this._startCoords = home.getTouchEvent(t), this._startScroll = this._scrollLeft, this._moveCoords = undefined, this._moveCoordsPrev = undefined, this._scrollStarted = undefined, this._moveTiming = undefined, this._moveTimingPrev = undefined, this.delMod('animated');
                },
                _onTouchMove: function(t) {
                    var e, i, n = home.getTouchEvent(t);
                    if (this._scrollStarted === undefined && (this._scrollStarted = (e = this._startCoords, i = n, Math.abs(e.x - i.x) > 2 * Math.abs(e.y - i.y))), this._scrollStarted) return this._setScroll(this._startScroll + this._startCoords.x - n.x - this._getPadding()), this._moveCoordsPrev = this._moveCoords, this._moveCoords = n, this._moveTimingPrev = this._moveTiming, this._moveTiming = new Date(), !1;
                },
                _onTouchEnd: function() {
                    if (this._scrollStarted) return !this._moveCoordsPrev || home.getData('i-ua2.data.isAndroidNative2') || home.getData('i-ua2.data.isOperaMiniAndroid') || this._setAnimatedScroll(this._scrollLeft + (this._moveCoordsPrev.x - this._moveCoords.x) / (this._moveTiming - this._moveTimingPrev) * 50), !1;
                }
            }, {
                live: function() {
                    var t;
                    return M || (t = function(t) {
                        return function(e) {
                            return $(this).closest('.scroller').bem('scroller')[t](e);
                        };
                    }, $('.content,.dialog__wrapper').on('touchstart', '.scroller', t('_onTouchStart')).on('touchmove', '.scroller', t('_onTouchMove')).on('touchend', '.scroller', t('_onTouchEnd')).on('touchcancel', '.scroller', t('_onTouchEnd'))), !0;
                }
            }), S = function() {
                return home.getData('i-ua2.data', {});
            }, T = function(t) {
                var e = document.body;
                for (var i in t)
                    if (t.hasOwnProperty(i) && i in e.style) return t[i];
                return !1;
            }, (C = function(t, e, i) {
                var n = {};
                t[e] = function() {
                    if (e in n) return n[e];
                    var t = i.apply(this, arguments);
                    return n[e] = t, t;
                };
            })(P = {}, 'get2DTransform', function() {
                var t = S();
                return t.isAndroidNative2 || t.isOperaMiniAndroid && t.osVersion < 3 || t.isUCBrowser && t.isAndroid ? '' : T({
                    transform: 'transform',
                    webkitTransform: '-webkit-transform',
                    OTransform: '-o-transform',
                    msTransform: '-ms-transform',
                    MozTransform: '-moz-transform'
                });
            }), C(P, 'has3DTransform', function() {
                var t = S();
                return (t.isOldAndroidNative && !t.isAndroidNative2 || t.isIOS || t.isFirefox) && T({
                    webkitPerspective: !0,
                    MozPerspective: !0,
                    perspective: !0
                });
            }), P.setTransform = function(t, e, i, n) {
                var o;
                'number' == typeof e && (e += 'px'), 'number' == typeof i && (i += 'px'), i = i || 0, this.has3DTransform() ? t.css({
                    '-webkit-transform': 'translate3d(' + e + ',' + i + ',0)',
                    transform: 'translate3d(' + e + ',' + i + ',0)'
                }) : (o = this.get2DTransform()) ? t.css(o, 'translate(' + e + ',' + i + ')') : t.css({
                    position: n ? 'absolute' : 'relative',
                    left: e,
                    top: i
                });
            }, BEM.decl('i-crossbrowser', {}, P), BEM.DOM.decl('scroller', {
                captureManualScroll: function(t, e) {
                    this._captureManualScroll || (this._captureManualScroll = !0, this._boundScrollListener || (this._boundScrollListener = this._onScrollListener.bind(this)), this.domElem[0].addEventListener('scroll', this._boundScrollListener, !1));
                    var i = this;
                    return this._onManualScroll = home.debounce(e, t),
                        function() {
                            i.domElem[0].removeEventListener('scroll', i._boundScrollListener, !1);
                        };
                },
                _onScrollListener: function() {
                    !this._systemScroll && this._onManualScroll && this._onManualScroll();
                },
                addScrollStats: function(t, e, i) {
                    var n = this;
                    if (!home.getData('i-ua2.data.isMSIE')) {
                        e = e || 100, this._scrollStatsLogged || (this._scrollStatsLogged = {});
                        var o = this.captureManualScroll(250, function() {
                            var s = 'function' == typeof t ? t() : t;
                            !n._scrollStatsLogged[s] && n.scrollLeft() > e && (n._scrollStatsLogged[s] = !0, home.stat.logPath('scroll', s, i), o());
                        });
                    }
                }
            }), home.debounce = function(t, e, i, n) {
                var o;
                return 3 === arguments.length && 'boolean' != typeof i && (n = i, i = !1),
                    function() {
                        var s = arguments;
                        n = n || this, i && !o && t.apply(n, s), clearTimeout(o), o = setTimeout(function() {
                            i || t.apply(n, s), o = null;
                        }, e);
                    };
            }, BEM.DOM.decl('notifications', {
                onSetMod: {
                    js: function() {
                        this.__base.apply(this, arguments), BEM.blocks['i-multiline-overflow'].calcOverflow(this.domElem, 2);
                    }
                },
                _showText: function(t) {
                    var e = t.data.domElem.data('index');
                    BEM.blocks.dialog.show('notifications', e);
                },
                _closeItem: function(t) {
                    var e = t.data.domElem,
                        i = e.data('close-url');
                    i && (new Image().src = i), e.closest('.notifications__item').remove();
                }
            }, {
                live: function() {
                    return this.liveBindTo({
                        elem: 'item',
                        modName: 'text',
                        modVal: 'yes'
                    }, 'click', function(t) {
                        return this._showText(t), !1;
                    }), this.liveBindTo('item-close', 'click', function(t) {
                        return this._closeItem(t), !1;
                    }), !1;
                }
            }), D = $('html').hasClass('i-ua_swipe_yes'), B = 'undefined' != typeof CSS && CSS.supports && CSS.supports('touch-action', 'pan-y'), BEM.DOM.decl('swiper', {
                onSetMod: {
                    js: {
                        inited: function() {
                            var t, e = this._getBlockWidth(),
                                i = this.elem('page').eq(0),
                                n = this;
                            this._userInitiated = !0, this._keys = this.params.keys.slice(0), this._categoriesCount = this._keys.length, this._scrollWidth = e * this._categoriesCount, this._blockClicks = !1, this._pagesCreated = {}, this.findElem('page').each(function() {
                                n._pagesCreated[$(this).attr('data-key')] = !0;
                            }), this._prevSelectedPageIndex = t = this._mapCategoryKeyToIndex(this.params.selectedTabKey), i.css('left', 100 * t + '%'), this._pagesHeightInitialized = !1, this._currentCategoryKey = this.params.selectedTabKey, t > 0 && (this._transform = -t * e, this._transformString = 100 * -t + '%'), this._allowLogScroll = !0, this.channel('i-globalstate').on('width', this.changeThis(this._onResize)), this.bindTo('pages', 'scroll', this._preventScroll), this.bindToWin('morientationchange', this._onOrientationChange), this.bindTo('categories-scroller', 'scroll', $.debounce(this._onCategoriesScroll, 300));
                        }
                    }
                },
                onElemSetMod: {
                    category: {
                        selected: {
                            yes: function(t) {
                                var e = t.attr('data-key'),
                                    i = t.data('stat-select') || this.params.statKey + '.tab.select.' + e,
                                    n = this.getSelectedCategory();
                                document.activeElement && document.activeElement.blur(), this._initPagesHeight(), this.setMod(n, 'selected', 'no'), n.attr('aria-selected', 'false'), t.attr('aria-selected', 'true'), this._currentCategoryKey = e, this.scrollToCategory(t), this.params.statKey && this._userInitiated && home.stat.logPath('click', i), this._allowLogScroll = !0, this._onCategoryShow(t), this.trigger('categorySelected', {
                                    index: this._mapCategoryKeyToIndex(e),
                                    key: e
                                });
                            }
                        }
                    }
                },
                getSelectedCategory: function() {
                    return this.findElem('category', 'selected', 'yes');
                },
                getSelectedKey: function() {
                    return this._currentCategoryKey;
                },
                setSelectedCategory: function(t, e) {
                    var i = this.elem('category').filter('[data-key="' + t + '"]');
                    return !!i.length && (this._userInitiated = e === undefined || !!e, this.setMod(i, 'selected', 'yes'), this._userInitiated = !0, !0);
                },
                setData: function(t) {
                    var e;
                    this.findElem('page').filter(':not([data-key="' + this._keys[0] + '"])').remove(), this.findElem('category').slice(1).remove(), this.dropElemCache('category'), this.toggleMod('multiple-tabs', 'yes', 'no', !!t.length), this._pagesCreated = {}, this._pagesCreated[this._keys[0]] = !0, this._keys = this._keys.slice(0, 1), this._data = {}, t.forEach(function(t) {
                        this._data[t.key] = t.list || t.html, this._keys.push(String(t.key));
                    }, this), this._categoriesCount = this._keys.length, this._onResize(null), (e = this.elem('categories-border')).length || (e = this.elem('categories-scroller')), e.append(t.map(function(t) {
                        return t.linkCounter && home.stat.logPath('show', t.linkCounter), t.selectCounter && home.stat.logPath('show', t.selectCounter), home.view('swiper__category', {
                            tab: t,
                            ua: home.getData('i-ua2.data')
                        });
                    }).join('')), this.afterCurrentEvent(function() {
                        this.findBlockInside('categories-scroller', 'scroller').updateSize().scrollTo(0, !1);
                    }), this.delMod(this.elem('scrollable'), 'animated'), this._transform = 0, this._transformString = '0', this._updateTransform(), this.setMod(this.elem('category').eq(0), 'selected', 'yes');
                },
                getCurrentPage: function() {
                    return this.elem('page').filter('[data-key="' + this._currentCategoryKey + '"]');
                },
                scrollToCategory: function(t) {
                    var e = this.findBlockInside('categories-scroller', 'scroller'),
                        i = this._mapCategoryKeyToIndex(this._currentCategoryKey);
                    e && e.scrollToElem(t, this._userInitiated), this.toggleMod(this.elem('scrollable'), 'animated', 'yes', this._userInitiated), this._transform = -i * this._getBlockWidth(), this._transformString = 100 * -i + '%', this._applyTransform();
                },
                _mapCategoryKeyToIndex: function(t) {
                    for (var e = 0; e < this._keys.length; ++e)
                        if (this._keys[e] === t) return e;
                },
                _onCategoryShow: function(t) {
                    this.params.disablePageStat || (home.stat.logDOMShow(this.findElem('page').filter('[data-key="' + this._currentCategoryKey + '"]'), {
                        visibilityCheck: !1
                    }), BEM.blocks['tabs-stat'].sendTabStat(t));
                },
                _getBlockWidth: function() {
                    return BEM.blocks['i-globalstate'].width();
                },
                _applyTransform: function() {
                    this._updateTransform(), this._createPages(), D ? (this._updatePagesRangeVisibility(), this._hideNonActivePages()) : this._updatePagesAroundVisibility();
                },
                _hideNonActivePages: function() {
                    clearTimeout(this._hidePagesTimeout), this._hidePagesTimeout = setTimeout(this.changeThis(function() {
                        this._updatePagesAroundVisibility();
                    }), BEM.blocks['i-const'].SWIPE_PAGE_HIDE_DELAY);
                },
                _initPagesHeight: function() {
                    var t, e;
                    !this._pagesHeightInitialized && D && (this._pagesHeightInitialized = !0, t = this.elem('pages'), e = this.elem('page').eq(0), t.height(t.height()), this.setMod(e, 'moved', 'yes'), BEM.blocks['i-crossbrowser'].setTransform(this.elem('scrollable'), this._transformString));
                },
                _updateTransform: function() {
                    D && BEM.blocks['i-crossbrowser'].setTransform(this.elem('scrollable'), this._transformString);
                },
                _onCategoryClick: function(t) {
                    var e = $(t.target).closest('.swiper__category');
                    'yes' !== this.getMod(e, 'selected') && (t.preventDefault(), this.setMod(e, 'selected', 'yes'));
                },
                _onItemClick: function(t) {
                    if (t.closest(this.elem('pages')).length && this._blockClicks) return !1;
                },
                _onTouchStart: function(t) {
                    if (this._categoriesCount > 1 && !this.params.disableSwipe) {
                        if ((home.getTouchEvents(t) || []).length > 1) return;
                        this._startCoords = home.getTouchEvent(t), this._moveCoords = null, this._startTransform = this._transform || 0, this._startTime = new Date(), this._blockClicks = !1, this._swipe = !1, this._noSwipe = !1, this.delMod(this.elem('scrollable'), 'animated'), clearTimeout(this._hidePagesTimeout);
                    }
                },
                _onTouchMove: function(t) {
                    var e, i, n = home.getTouchEvent(t);
                    if (this._startCoords && !(this._moveCoords && this._moveCoords.x === n.x && this._moveCoords.y === n.y || (home.getTouchEvents(t) || []).length > 1)) return this._moveCoords = n, this._swipe ? (e = this._getBlockWidth(), this._transform = n.x - this._startCoords.x + this._startTransform, this._transform > 0 ? this._transform = this._transform * e / (this._transform + 3 * e) : -this._transform + e > this._scrollWidth && (i = (i = -this._transform + e - this._scrollWidth) * e / (i + 3 * e), this._transform = e - this._scrollWidth - i), this._transformString = 100 * this._transform / e + '%', this._initPagesHeight(), this._updateTransform()) : Math.abs(n.y - this._startCoords.y) > BEM.blocks['i-const'].MIN_SWIPE_VERTICAL ? (this._noSwipe = !0, this._blockClicks = !0) : !this._noSwipe && Math.abs(n.x - this._startCoords.x) > BEM.blocks['i-const'].MIN_SWIPE_HORIZONTAL && (this._swipe = !0, this._blockClicks = !0, this._startCoords = n, this._createPages(), this._updatePagesAroundVisibility(!0), this._initPagesHeight(), this._updateTransform()), !(this._swipe && !B) && void 0;
                },
                _onTouchEnd: function() {
                    var t, e, i = this._mapCategoryKeyToIndex(this._currentCategoryKey),
                        n = this.elem('category');
                    if (this._noSwipe = !1, this._startCoords = undefined, this._swipe) return this._swipe = !1, e = this._getBlockWidth(), Math.abs(this._startTransform - this._transform) > Math.min(512, e) / 4 * Math.min(1, (new Date() - this._startTime) / BEM.blocks['i-const'].SWIPE_TIME_BASE) && (i += this._startTransform > this._transform ? 1 : -1), i >= this._categoriesCount ? i = this._categoriesCount - 1 : i < 0 && (i = 0), t = n.eq(i), this.setMod(this.elem('scrollable'), 'animated', 'yes'), 'yes' === this.getMod(t, 'selected') ? (this._transform = -i * e, this._transformString = 100 * -i + '%', this.afterCurrentEvent(this._updateTransform), this._hideNonActivePages()) : (this.setMod(t, 'selected', 'yes'), this.params.statKey && home.stat.logPath('scroll', this.params.statKey + '.swipe.links')), !1;
                },
                _onResize: function() {
                    var t = this._getBlockWidth();
                    this._transform = -this._mapCategoryKeyToIndex(this._currentCategoryKey) * t, this._scrollWidth = this._categoriesCount * t;
                },
                _createPages: function() {
                    for (var t, e = this._mapCategoryKeyToIndex(this._currentCategoryKey), i = Math.min(e + 2, this._categoriesCount), n = [], o = [], s = 0; s < i; ++s) t = this._keys[s], this._pagesCreated[t] || (this._pagesCreated[t] = !0, n.push(this._createPage(t)), o.push(t));
                    n.length && (this.elem('scrollable').append(n.join('')), this.dropElemCache('page')), o.length && o.forEach(function(t) {
                        var e = this.elem('page').filter('[data-key=' + t + ']'),
                            i = this.findElem(e, 'page-load').length > 0;
                        this.trigger('createPage', {
                            page: e,
                            hasLoader: i
                        });
                    }, this);
                },
                _getPageData: function(t) {
                    return (this._data || home.getData(this.params.dataKey + '.data'))[t];
                },
                _createPage: function(t) {
                    var e = this._getPageData(t),
                        i = this._mapCategoryKeyToIndex(t);
                    return Array.isArray(e) && (e = e.map(function(e) {
                        var i = home.deepExtend({
                            tabKey: t
                        }, this.params.itemParams);
                        return (e = home.deepExtend(i, e)).noBlockDisplay = !0, home.view('swiper__item', e, {});
                    }, this).join('')), e ? home.view('swiper__page', {
                        items: e,
                        left: 100 * i + '%',
                        key: t
                    }) : '';
                },
                _updatePagesRangeVisibility: function() {
                    var t = this._mapCategoryKeyToIndex(this._currentCategoryKey),
                        e = Math.min(t, this._prevSelectedPageIndex),
                        i = Math.max(t, this._prevSelectedPageIndex),
                        n = this;
                    this._prevSelectedPageIndex = t, this.findElem('page').each(function() {
                        var t = $(this),
                            o = n._mapCategoryKeyToIndex(t.attr('data-key'));
                        (e <= o && o <= e + 1 || i - 1 <= o && o <= i) && n.hasMod(t, 'visible') && (n.delMod(t, 'visible'), t.attr('aria-hidden', 'true'), n.trigger('togglePage', {
                            page: t,
                            visible: !1
                        }));
                    });
                },
                _updatePagesAroundVisibility: function(t) {
                    var e = this._mapCategoryKeyToIndex(this._currentCategoryKey),
                        i = this;
                    this._prevSelectedPageIndex = e, this.findElem('page').each(function() {
                        var n = $(this),
                            o = i._mapCategoryKeyToIndex(n.attr('data-key')),
                            s = t ? o >= e - 1 && o <= e + 1 : o === e;
                        s === i.hasMod(n, 'visible', 'no') && (i.toggleMod(n, 'visible', 'no', !s), n.attr('aria-hidden', s ? 'false' : 'true'), i.trigger('togglePage', {
                            page: n,
                            visible: s
                        }));
                    });
                },
                _preventScroll: function() {
                    return this.elem('pages').scrollLeft(0), !1;
                },
                _onOrientationChange: function() {
                    this.findBlockInside('categories-scroller', 'scroller').scrollToElem(this.getSelectedCategory(), !1);
                },
                _onCategoriesScroll: function() {
                    this._allowLogScroll && this.params.statKey && (this._allowLogScroll = !1, home.stat.logPath('scroll', this.params.statKey + '.swipe.tabs'));
                }
            }, {
                live: function() {
                    var t = 'onpointerdown' in window;
                    if ($('body').on('click', '.swiper__category', function(t) {
                            return $(t.target).closest('.swiper').bem('swiper')._onCategoryClick(t);
                        }), this.liveBindTo('item', 'click', function(t) {
                            return this._onItemClick(t.data.domElem);
                        }), this.liveBindTo('categories-scroller', 'pointerdown', function() {}), D) {
                        var e = function(t, e) {
                            $('.body__wrapper').on(t, '.swiper__pages', function(t) {
                                return $(t.target).closest('.swiper').bem('swiper')[e](t);
                            });
                        };
                        t ? (e('pointerdown', '_onTouchStart'), e('pointermove', '_onTouchMove'), e('pointerup pointercancel', '_onTouchEnd')) : (e('touchstart', '_onTouchStart'), e('touchmove', '_onTouchMove'), e('touchend touchcancel', '_onTouchEnd'));
                    }
                    return !0;
                }
            }), BEM.decl('tabs-stat', {}, {
                sendTabStat: function(t) {
                    if (!t.attr('data-tabs-stat-sent')) {
                        var e = t.attr('data-tabs-stat'),
                            i = '/portal/log/json/?type=morda-topnews',
                            n = !1;
                        if (e && e.length) {
                            if ('sendBeacon' in navigator && 'FormData' in window) {
                                var o = new FormData();
                                o.append('data', e), n = navigator.sendBeacon(i, o);
                            }
                            n || $.ajax({
                                url: i,
                                type: 'POST',
                                data: {
                                    data: e
                                }
                            }), t.attr('data-tabs-stat-sent', '1');
                        }
                    }
                }
            }), $(function() {
                var t = {},
                    e = {},
                    i = {},
                    n = $('.traffic-personal'),
                    o = $('.notifications_type_traffic__slide'),
                    s = $('.notifications_type_traffic__content'),
                    r = $('.notifications_type_traffic__loader-block'),
                    a = {
                        count: function(t, e) {
                            var i = 'notif.jobhome.' + t;
                            e = e || 'click', home.stat.logPath(e, i);
                        },
                        countSlideShow: function(e, i) {
                            var n = e + i;
                            t[n] || (home.stat.logPath('show', 'notif.jobhome.' + e), t[n] = !0);
                        },
                        errorHandler: function(t) {
                            a.count('error' + (t ? '.' + t : ''), 'tech'),
                                function() {
                                    r.css('opacity', 0);
                                    var t = {
                                            noData: !0,
                                            isBlocked: !1,
                                            jamRating: home.view('notifications_type_traffic__personal-unknown', {}),
                                            jamsTime: home.l10n('traffic.personal.noinfo'),
                                            jamRateWord: '',
                                            directionLabel: ''
                                        },
                                        e = home.view('notifications_type_traffic__nobypass', t);
                                    s.html(e), s.css('opacity', 1);
                                }();
                        },
                        getDirection: function(t) {
                            var e;
                            return 'to_home' === (e = t.direction) && (e = 'gohome'), 'to_work' === e && (e = 'gowork'), e = e || 'gohome';
                        },
                        updateMapURL: function(t, e, i, n) {
                            home.getData('notifications_type_traffic.data.openapp') && t.attr('href', i).attr('data-app', 'maps').attr('data-app-query-sources', '{"ll":{"location":"client"}}').attr('data-statlog', 'notif.jobhome.' + n).attr('data-app-counter', 'notif.jobhome.' + n + '.app').attr('data-app-query', e);
                        }
                    },
                    c = {
                        cache: {},
                        _getRouterDataOrCachedRawData: function(t) {
                            var e = this,
                                i = e.cache[t];
                            if (i && i.timestamp > home.now().getTime()) return $.when(JSON.parse(i.data));
                            return $.ajax({
                                method: 'get',
                                url: t,
                                cache: !1,
                                timeout: 30000
                            }).then(function(i) {
                                if (!i || !i.direct) return $.Deferred().reject('parseData').promise();
                                if (!i.direct.time || i.bypass && !i.bypass.time) return $.Deferred().reject('zeroResponse').promise();
                                var n = i.bypass && i.bypass.timeText;
                                return i.isBlocked || i.direct.timeText || n ? (e.cache[t] = {
                                    data: JSON.stringify(i),
                                    timestamp: home.now().getTime() + 300000
                                }, i) : $.Deferred().reject('parseData').promise();
                            }, function(e, i, n) {
                                return home.error.logAjaxError({
                                    block: 'route-touch',
                                    message: 'route._getRouterDataOrCahedRawData: ajax',
                                    url: t,
                                    source: 'geohelper/router'
                                }, e, i, n), $.Deferred().reject('getData').promise();
                            });
                        },
                        getLabels: function(t) {
                            return {
                                gohome: t.to_home.title || 'Дом',
                                gowork: t.to_work.title || 'Работа'
                            };
                        },
                        getDirectionalLabel: function(t, e) {
                            return c.isCustomLabels(t) ? c.getLabels(t)[e] : 'gohome' === e ? home.l10n('traffic.personal.path_to_home') : 'gowork' === e ? home.l10n('traffic.personal.path_to_work') : void 0;
                        },
                        isCustomLabels: function(t) {
                            return !('Работа' === c.getLabels(t).gowork && 'Дом' === c.getLabels(t).gohome);
                        }
                    };

                function h(t, n, o) {
                    i[o] = {};
                    var s = i[o];
                    return c._getRouterDataOrCachedRawData(t.apiUrls[n]).then(function(i) {
                        var r = i.direct && i.direct.mapUrl || i.bypass && i.bypass.mapUrl;
                        if (e[o] = {
                                mapURLParams: r.slice(r.indexOf('?') + 1),
                                mapURL: r
                            }, i.isBlocked || i.direct.isBlocked || !i.bypass) return s.show = 'ball.nobypass',
                            function(t, e, i) {
                                var n = t.isBlocked,
                                    o = t.direct.isBlocked ? t.bypass : t.direct,
                                    s = {
                                        isBlocked: n,
                                        jamRating: n ? '' : t.jamsRate,
                                        jamsTime: n ? t.description : o.timeText,
                                        jamRateWord: t.jamsRate >= 0 ? t.jamsMeasure : '',
                                        directionLabel: c.getDirectionalLabel(e, i)
                                    };
                                return home.view('notifications_type_traffic__nobypass', s);
                            }(i, t, n, s.show);
                        s.show = 'ball.bypass';
                        var a = {
                            jamRating: i.jamsRate,
                            jamRateWord: i.jamsMeasure,
                            jamsTime: i.direct.timeText,
                            deltaTimeText: i.bypass && i.bypass.label.replace('%s', i.bypass.timeTextDelta),
                            directionLabel: c.getDirectionalLabel(t, n)
                        };
                        return home.view('notifications_type_traffic__layout-bypass', a);
                    });
                }

                function l(t, n) {
                    setTimeout(function() {
                        a.count('change'), 1 === n && (a.countSlideShow(i[1].show, 1), a.updateMapURL(t, e[1].mapURLParams, e[1].mapURL, i[1].show));
                    }, 50);
                }

                function u() {
                    $('.notifications_type_traffic').hide();
                }

                function d(t) {
                    var c = a.getDirection(t),
                        d = n.bem('swiper'),
                        m = 'gowork' === c ? ['gowork', 'gohome'] : ['gohome', 'gowork'];
                    h(t, m[0], 0).then(function(n) {
                        ! function(t, n) {
                            o.empty(), o.html(t), a.countSlideShow(i[0].show, 0), n && (a.count('change', 'show'), n.updateHeight()), r.css('opacity', 0), setTimeout(function() {
                                r.hide();
                            }, 50), setTimeout(function() {
                                s.css('opacity', 1);
                            }, 200), a.updateMapURL(o, e[0].mapURLParams, e[0].mapURL, i[0].show);
                        }(n, d), t.smallDistance || d.setData([{
                            html: home.view('notifications_type_traffic__slide-wrapper', {
                                index: 1,
                                content: home.view('notifications_type_traffic__loader')
                            }),
                            key: 1
                        }]);
                    }).fail(u);
                    var f = !1;
                    d.on('categorySelected', function(e, i) {
                        var n = i.index,
                            o = $('.notifications_type_traffic__slide_index_1');
                        f ? l(o, n) : h(t, m[1], 1).then(function(t) {
                            f = !0, o.html(t), d.updateHeight(), l(o, n);
                        }).fail(u);
                    }), $('.notifications_type_traffic__swap').off('click').click(function() {
                        var t = d.getSelectedCategory().data('key');
                        d.setSelectedCategory(1 - t);
                    });
                }
                var m = home.getData('notifications_type_traffic.data');
                $(function() {
                    BEM.afterCurrentEvent(function() {
                        var t;
                        (t = m) && d(t);
                    });
                }), BEM.DOM.decl('traffic-personal', {
                    onSetMod: {
                        js: function() {
                            this.bindToWin('morientationchange', function() {
                                this.findBlockInside('swiper').updateHeight();
                            });
                            var t = m;
                            if (t && t.to_work && t.to_home && t.to_home.points) {
                                var e = t.to_home.points,
                                    i = e[0].split(','),
                                    n = e[1].split(',');
                                this.work = {
                                    lon: i[0],
                                    lat: i[1]
                                }, this.home = {
                                    lon: n[0],
                                    lat: n[1]
                                }, this.channel('i-geolocation').on('gpsave', this.changeThis(this._update));
                            }
                        }
                    },
                    _update: function() {
                        var t = BEM.blocks['i-geolocation'].getLocation(),
                            e = {
                                lat: t.latitude,
                                lon: t.longitude
                            };
                        m.direction = home.distance(e, this.work) > home.distance(e, this.home) ? 'to_work' : 'to_home', this.render(m);
                    },
                    render: function(t) {
                        d(t);
                    }
                });
            }), BEM.DOM.decl('trafinfo-popup', {
                onSetMod: {
                    js: function() {
                        this.findBlockOutside('dialog').on({
                            show: this._onShow,
                            hide: this._onHide
                        }, this);
                    }
                },
                _onShow: function() {
                    var t = this.params;
                    t.staticMap ? this._appendStaticMap(t.staticMap) : t.sid && this._appendTrafinfoScript(t.sid);
                },
                _onHide: function() {
                    this.elem('map').empty();
                },
                _appendTrafinfoScript: function(t) {
                    var e = document.createElement('script');
                    e.src = 'https://api-maps.yandex.ru/services/constructor/1.0/js/?sid=' + t + '&amp;width=100%&amp;height=100%&amp;lang=' + this.params.lang + '&amp;sourceType=constructor&amp;scroll=true', this.elem('map')[0].appendChild(e);
                },
                _appendStaticMap: function(t) {
                    this.elem('map').append($('<div></div>', {
                        'class': 'trafinfo-popup__image',
                        style: 'background-image:url(' + t + ')'
                    }));
                }
            }), BEM.DOM.decl('dialog', {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.__self._init(), this.hasMod('visibility', 'visible') && this.afterCurrentEvent(this.show, this), this.bindTo('close', 'click', this._onCloseClick);
                        }
                    },
                    visibility: {
                        visible: function() {
                            $('body').addClass('body_dialog_shown');
                        },
                        '': function() {
                            $('body').removeClass('body_dialog_shown');
                        }
                    }
                },
                show: function() {
                    BEM.channel('dialog').trigger('open'), BEM.channel('page').trigger('interaction'), this.trigger('show'), this.setMod('visibility', 'visible'), $(window).scrollTop(0), this.params.counter && home.stat.logPath('show', this.params.counter + '.close'), home.stat.logDOMShow(this.domElem);
                },
                hide: function() {
                    this.delMod('visibility'), this.trigger('hide'), BEM.channel('dialog').trigger('hide'), this.params.counter && home.stat.logPath('resize', this.params.counter + '.close');
                },
                _onCloseClick: function(t) {
                    this.hide(), t.preventDefault();
                }
            }, {
                show: function(t, e) {
                    var i = $('.dialog_type_' + t);
                    e !== undefined && (i = i.filter('[data-index="%index%"]'.replace('%index%', e))), this._init(), i.length && i.bem('dialog').show();
                },
                _init: function() {
                    this._inited || (this._inited = !0, $('.dialog__overlay, .dialog__list, .dialog__wrapper').on('click', function(t) {
                        if (!$(t.target).closest('.dialog').length) {
                            var e = $('.dialog_visibility_visible');
                            if (e.length) {
                                var i = e.bem('dialog');
                                i && i.hide();
                            }
                        }
                    }));
                },
                live: !0
            }), BEM.DOM.decl('dialog', {
                onSetMod: {
                    visibility: {
                        visible: function() {
                            this.__base.apply(this, arguments), this.channel('i-sight').trigger('disable');
                        },
                        '': function() {
                            this.__base.apply(this, arguments), this.channel('i-sight').trigger('enable');
                        }
                    }
                }
            }, {
                getInstance: function(t) {
                    if ((t = t || {}).type) return this._instance || (this._instance = $('.dialog_type_' + t.type).bem('dialog')), this._instance;
                }
            }), BEM.DOM.decl('dialog', {
                _toggleExtra: function() {
                    this.toggleMod('expand', 'yes', ''), this.hasMod('expand', 'yes') && home.stat.logDOMShow(this.domElem);
                }
            }, {
                live: function() {
                    return this.liveBindTo('extra', 'click', function() {
                        this._toggleExtra();
                    }), this.__base();
                }
            }), BEM.DOM.decl('usermenu', {
                onSetMod: {
                    js: function() {
                        this.bindTo('user_clickable_yes', 'click', function(t) {
                            return this._selectUser($(t.target));
                        }), this.bindTo('user-exit', 'click', function(t) {
                            return this._logoutUser($(t.target));
                        });
                    }
                },
                _getEmbeddedAuth: function() {
                    return this.auth ? this.auth : this.auth = BEM.create('i-embeddedauth', this.params.auth);
                },
                _selectUser: function(t) {
                    var e = t.closest('.usermenu__user').data('uid');
                    if (e) return this._getEmbeddedAuth().setData({
                        uid: e
                    }, this.changeThis(this._switchResponse, this)).submit(), !1;
                },
                _switchResponse: function(t) {
                    switch (t.status) {
                        case 'ok':
                        case 'action-not-required':
                            return void window.location.reload();
                        default:
                            window.location.href = this.params.passport;
                    }
                },
                _logoutUser: function(t) {
                    var e = t.closest('.usermenu__user-exit'),
                        i = e.parent(),
                        n = e.data('uid');
                    if (n) return this._$userWrapper = i, this._getEmbeddedAuth().setData({
                        uid: n,
                        action: 'logout'
                    }, this.changeThis(this._logoutResponse)).submit(), !1;
                },
                _logoutResponse: function(t) {
                    var e = this._$userWrapper;
                    switch (this._$userWrapper = null, t.status) {
                        case 'ok':
                        case 'action-not-required':
                            return void(e && e.hide());
                        default:
                            window.location.href = this.params.passport;
                    }
                }
            }, {
                live: !1
            }), BEM.decl('i-embeddedauth', {
                addCallback: function(t) {
                    var e = 'cb' + Math.random();
                    return this.callbacks || (this.callbacks = {}), this.callbacks[e] = t, e;
                },
                addQueryParam: function(t, e) {
                    var i = t.split('?'),
                        n = i[1] ? i[1].split('&') : [];
                    return n.push(e), i[1] = n.join('&'), i.join('?');
                },
                bindCallback: function() {
                    var t = this;
                    window.mordaAuth = {
                        onResponse: function(e) {
                            if (e) {
                                for (var i = e.split('?')[1].split('&'), n = {}, o = 0, s = i.length; o < s; o++) {
                                    var r = i[o].split('=');
                                    n[r.shift()] = decodeURIComponent(r.join('='));
                                }
                                t.processResponse(n);
                            } else t.processResponse();
                        }
                    };
                },
                submit: function() {
                    this.getForm().trigger('submit');
                },
                setData: function(t, e) {
                    if (t = $.extend({}, this.params.params || {}, t), this.idkey && (t.idkey = this.idkey), e) {
                        var i = this.addCallback(e);
                        t.retpath = this.addQueryParam(t.retpath, 'from=' + i);
                    }
                    return this.getForm().html(this.stringifyParams(t)), this;
                },
                setDomain: function() {
                    var t = document.domain.match(/([^.]+(?:\.com?)?\.)?[^.]+$/)[0];
                    try {
                        document.domain = t;
                    } catch (e) {}
                },
                stringifyParams: function(t) {
                    var e = '';
                    for (var i in t) t.hasOwnProperty(i) && (e += this.getInputHtml(i, t[i]));
                    return e;
                },
                getInputHtml: function(t, e) {
                    return '<input name="' + t + '" value="' + e + '"/>';
                },
                getForm: function() {
                    if (this.form) return this.form;
                    this.setDomain(), this.bindCallback();
                    var t = 'embeddedauthframe' + parseInt(10000 * Math.random(), 10);
                    return this.form = $('<form style="display:none" target="' + t + '" method="' + (this.params.method || 'post') + '" action="' + this.params.action + '"></form>'), this.frame = $('<iframe style="display:none" name="' + t + '"></iframe>'), $('body').append(this.form, this.frame), this.form;
                },
                processResponse: function(t) {
                    var e = function() {};
                    if (t) switch (t.from && this.callbacks[t.from] && (e = this.callbacks[t.from], this.callbacks[t.from] = !1), this.idkey = t.idkey, t.status) {
                        case 'login-empty':
                        case 'password-empty':
                        case 'account-not-found':
                        case 'password-invalid':
                        case 'action-not-required':
                        case 'ok':
                        case 'uid-empty':
                        case 'sessionid-invalid':
                        case 'session-no-uid':
                        case 'yu-empty':
                        case 'yu-invalid':
                        case 'captcha-invalid':
                        case 'captcha-required':
                            return e(t), void this.trigger('data-received', t);
                        case 'internal-exception':
                            return this.idkey = '', this._interr ? (e(t), void this.trigger('data-received', t)) : (this._interr = !0, t.from && (this.callbacks[t.from] = e), void this.submit());
                        default:
                            t.url ? window.location = t.url : (e(t), this.trigger('data-received', t));
                    } else this.trigger('no-data');
                }
            }), BEM.DOM.decl({
                block: 'dialog',
                modName: 'backable',
                modVal: 'yes'
            }, {
                onSetMod: {
                    js: function() {
                        this.__base.apply(this, arguments), this.channel('i-hash').on('change', function(t) {
                            'dialog' in t.hash && (t.hash.dialog === this.getMod('type') ? this.show() : this.hide());
                        }, this);
                    },
                    visibility: {
                        visible: function() {
                            this.__base.apply(this, arguments);
                            var t = this.getMod('type');
                            BEM.blocks['i-hash'].get('dialog') !== t && BEM.blocks['i-hash'].set('dialog', t);
                        },
                        '': function() {
                            this.__base.apply(this, arguments), BEM.blocks['i-hash'].remove('dialog', !0);
                        }
                    }
                }
            }, {
                live: function() {
                    this.__base.apply(this, arguments), BEM.blocks['i-hash'].remove('dialog', !0);
                }
            }), BEM.DOM.decl({
                block: 'dialog',
                modName: 'type',
                modVal: 'domik'
            }, {
                show: function() {
                    this.__base.apply(this, arguments), this.findBlockInside('mdomik').show();
                },
                hide: function() {
                    this.__base.apply(this, arguments), this.findBlockInside('mdomik').hide();
                }
            }), BEM.DOM.decl('mdomik', {
                onSetMod: {
                    js: function() {
                        this._initFields(), this._bindEvents(), window.Lego || (window.Lego = {}), window.Lego.block || (window.Lego.block = {});
                    }
                },
                show: function() {
                    var t = this;
                    ['login', 'password'].some(function(e) {
                        var i = t._fields[e];
                        if (i.domElem.is(':visible') && !i.elem('input').val()) return i.setMod('focused', 'yes'), !0;
                    }), home.stat.logPath('show', 'domik.submit');
                },
                hide: function() {
                    this._fields.password.val(''), this._clearState();
                },
                _initFields: function() {
                    this._fields = {
                        login: this.findBlockOn('login', 'input'),
                        password: this.findBlockOn('password', 'input')
                    };
                },
                _bindEvents: function() {
                    for (var t in this._fields) this._fields.hasOwnProperty(t) && this._fields[t].bindTo('change', this.changeThis(this._clearState));
                    this.bindTo('form', 'submit', this._onSubmit), this.bindTo('social-icon', 'click', this.changeThis(this._onSocialClick)), this.bindTo('other-user', 'click', this._onOtherUserClick);
                },
                _onSubmit: function() {
                    return !this._checkFields() && (this.trigger('submit'), this._doSubmit());
                },
                _doSubmit: function() {
                    if (!this._submitLogged) return this._submitLogged = !0, this._countAndSubmit(), !1;
                },
                _countAndSubmit: function() {
                    home.stat.logPath('click', 'domik.submit', {
                        callback: function() {
                            this.elem('form').trigger('submit');
                        }.bind(this),
                        callbackTimeout: 300
                    });
                },
                _checkFields: function() {
                    return ['login', 'password'].some(this._checkField, this);
                },
                _checkField: function(t) {
                    if (!/\S/.test(this._fields[t].elem('input').val())) return this._setState('', t), !0;
                },
                _setState: function(t, e) {
                    t && (this.elem('error').text(t), this.setMod('error', 'yes')), e && this._fields[e].setMod('focused', 'yes').setMod('error', 'yes');
                },
                _clearState: function() {
                    for (var t in this._fields) this._fields.hasOwnProperty(t) && this._fields[t].delMod('error');
                    this.delMod('error');
                },
                _onSocialClick: function(t) {
                    var e = this.params.ajaxRetpath,
                        i = $(t.target).data('code');
                    BEM.create('social-broker').start(function() {
                        e || top.location.href === e ? top.location.reload() : top.location.href = e;
                    }, function() {}, {
                        provider: i,
                        display: 'touch'
                    });
                },
                _onOtherUserClick: function() {
                    this.delMod('type'), this.findBlockInside('login', 'input').val(''), this.logout();
                },
                logout: function() {
                    if (this.params.logout) {
                        var t = 'frame' + parseInt(10000 * Math.random(), 10),
                            e = $('<form style="display:none" target="' + t + '" method="post" action="' + this.params.logout + '"></form>'),
                            i = $('<iframe style="display:none" name="' + t + '"></iframe>');
                        $('body').append(e, i), e.submit();
                    }
                }
            }), BEM.DOM.decl({
                block: 'mdomik',
                modName: 'auth',
                modVal: 'ajax'
            }, {
                onSetMod: {
                    js: function() {
                        this.__base.apply(this, arguments), this._checkParams() && (this._backupValues(), this._fixDomain(), this._frameID = 'mdomik__ajaxauth' + home.rnd(), this._frame = $('<iframe style="display:none" name="' + this._frameID + '"></iframe>'), this.domElem.append(this._frame), this._bindCallback(), this._shouldClearPassword = !1, this._fields.password.bindTo('click', this.changeThis(this._onPasswordClick)), this._fields.password.on('change', this.changeThis(this._onPasswordChange)));
                    }
                },
                _initFields: function() {
                    this.__base.apply(this, arguments), this._checkParams() && (this._captcha = this.findBlockInside('captcha', 'captcha'), this._fields.captcha = this._captcha.getInput());
                },
                _backupValues: function() {
                    this._oldAction = this.elem('form').attr('action'), this._oldRetpath = this.elem('retpath').attr('value');
                },
                _bindCallback: function() {
                    var t = this;
                    window.mordaAuth = {
                        onResponse: function(e) {
                            if (t._restoreForm(), e) {
                                for (var i = e.split('?')[1].split('&'), n = {}, o = 0, s = i.length; o < s; o++) {
                                    var r = i[o].split('=');
                                    n[r.shift()] = decodeURIComponent(r.join('='));
                                }
                                t._processResponse(n);
                            } else t._processResponse();
                        }
                    };
                },
                _onSubmit: function(t, e) {
                    return !e && this._checkParams() && this._changeForm(), this.__base.apply(this, arguments);
                },
                _fixDomain: function() {
                    var t = document.domain.match(/([^.]+(?:\.com?)?\.)?[^.]+$/)[0];
                    try {
                        document.domain = t;
                    } catch (e) {}
                },
                _checkParams: function() {
                    return this.params.ajaxAction && this.params.ajaxRetpath;
                },
                _changeForm: function() {
                    this.elem('form').prop({
                        action: this.params.ajaxAction,
                        target: this._frameID
                    }), this.elem('password').find('input').prop('name', 'password'), this.elem('retpath').prop('value', this.params.ajaxRetpath);
                },
                _goTo: function(t) {
                    t && (window.location = t);
                },
                _processResponse: function(t) {
                    if (t) switch (this._setKey(t.idkey), this._hideCaptcha(), this._shouldClearPassword = 'password-invalid' === t.status, t.status) {
                        case 'ok':
                            return void this._goTo(this._oldRetpath);
                        case 'login-empty':
                            return void this._setState('', 'login');
                        case 'password-empty':
                            return void this._setState('', 'password');
                        case 'account-not-found':
                            return void this._setState(home.l10n('auth.account-not-found'), 'login');
                        case 'password-invalid':
                            return void this._setState(home.l10n('auth.password-invalid'), 'password');
                        case 'captcha-invalid':
                            this._setState(home.l10n('auth.captcha-invalid'));
                        case 'captcha-required':
                            return void this._showCaptcha(t.captcha_url);
                        case 'internal-exception':
                            if (this._setKey(), !this._interr) return this._interr = !0, void this.elem('form').trigger('submit');
                        default:
                            t.url ? this._goTo(t.url) : this.elem('form').trigger('submit', {
                                noAjax: !0
                            });
                    } else this.elem('form').trigger('submit', {
                        noAjax: !0
                    });
                },
                _setKey: function(t) {
                    var e = this.elem('idkey');
                    e.length || (this.dropElemCache('idkey'), e = $('<input type="hidden" name="idkey" class="mdomik__idkey"/>'), this.elem('form').append(e)), e.val(t || '');
                },
                _showCaptcha: function(t) {
                    this._captcha && (this._captcha.show(t), home.stat.logPath('show', 'domik.captcha'));
                },
                _hideCaptcha: function() {
                    this._captcha && this._captcha.hide();
                },
                _restoreForm: function() {
                    this.elem('form').prop({
                        action: this._oldAction,
                        target: '_self'
                    }), this.elem('password').find('input').prop('name', 'passwd'), this.elem('retpath').prop('value', this._oldRetpath);
                },
                _onPasswordClick: function() {
                    this._shouldClearPassword && (this._shouldClearPassword = !1, this._fields.password.val(''), this._clearState());
                },
                _onPasswordChange: function() {
                    this._shouldClearPassword = !1;
                },
                _checkFields: function() {
                    var t = this.__base.apply(this, arguments);
                    return !t && this._captcha.isVisible() && (t = this._checkField('captcha')), t;
                }
            }), BEM.decl('social-broker', {
                _windowWidth: 500,
                _windowHeight: 280,
                onSetMod: {
                    js: {
                        inited: function() {
                            this._window = null, this._timer = 0, this._seed = 0;
                        }
                    }
                },
                start: function(t, e, i) {
                    var n, o, s = this;
                    this._onSuccess = t, this._onFailure = e, this._hasLocalStorage() ? (this._cleanup(), n = (i = $.extend({}, s._getDefaultParams(), i)).startUrl + '?', delete i.startUrl, delete i.popupName, o = i.display, this._seed = '_' + Number(new Date()) + Math.floor(1000000000 * Math.random()).toString(16).slice(0, 6), o && 'popup' !== o && (i.retpath = i.retnopopup || i.retpath || window.location.href, delete i.retnopopup), i.retpath += (-1 !== i.retpath.indexOf('?') ? '&' : '?') + 'social-broker_seed=' + encodeURIComponent(this._seed), n += Object.keys(i).reduce(function(t, e) {
                        return t.push(encodeURIComponent(e) + '=' + encodeURIComponent(i[e])), t;
                    }, []).join('&'), o && 'popup' !== o ? this._navigate(n) : (this._lsLoginStatusKey = 'login_status_from' + this._seed, this._window = window.open(n, this._seed, this._getPopupParams(), !1), this._window ? (this._window.focus(), clearInterval(this._timer), this._timer = setInterval(function() {
                        var t;
                        try {
                            t = window.localStorage.getItem(s._lsLoginStatusKey);
                        } catch (i) {}
                        if (!s.isClosed() || (clearInterval(s._timer), t)) {
                            if (t) {
                                var e = s._deserialize(t);
                                !1 === s._handleStatus(e) && s.onFailure({
                                    status: 'error'
                                });
                            }
                        } else s.onFailure({
                            status: 'error'
                        });
                    }, 500)) : this.onFailure({
                        status: 'error'
                    }))) : this.onFailure({
                        status: 'error'
                    });
                },
                _hasLocalStorage: function() {
                    return Boolean(window.localStorage);
                },
                _deserialize: function(t) {
                    var e;
                    try {
                        e = JSON.parse(t);
                    } catch (i) {
                        e = {
                            raw: t
                        };
                    }
                    return e;
                },
                _handleStatus: function(t) {
                    return 'ok' === t.status ? (this.onSuccess(t), !0) : 'error' === t.status && (this.onFailure(t), !0);
                },
                isClosed: function() {
                    return !this._window || this._window.closed;
                },
                _navigate: function(t) {
                    window.location.href = t;
                },
                _getDefaultParams: function() {
                    var t = BEM.blocks['i-global'],
                        e = t.param('id');
                    return {
                        startUrl: t.param('social-startUrl') || t.param('social-host') + '/broker/start',
                        retpath: t.param('social-retpath') || [location.protocol, '//', location.host, t.param('lego-path'), '/common.blocks/social-broker/__closer/social-broker__closer.html'].join(''),
                        retnopopup: t.param('social-retnopopup') || !1,
                        consumer: e || 'morda',
                        popupName: 'social_' + (e || 'morda'),
                        action_if_anonymous: 'authorize',
                        result_location: 'fragment'
                    };
                },
                _getPositionedParams: function(t, e, i, n) {
                    return ['scrollbars=yes, resizable=1, menubar=0, toolbar=0, status=0, location=0, directories=0', ', left=', e, ', top=', t, ', width=', i, ', height=', n].join('');
                },
                _getPopupParams: function() {
                    var t, e, i = this._windowWidth,
                        n = this._windowHeight;
                    return window.opera ? (t = (screen.availWidth - i) / 2, e = (screen.availHeight - n) / 2) : (t = (window.innerWidth - i) / 2, e = (window.innerHeight - n) / 2), t = Math.round(t), e = Math.round(e), this._getPositionedParams(e, t, i, n);
                },
                _cleanup: function() {
                    if (clearInterval(this._timer), this._lsLoginStatusKey) try {
                        window.localStorage.removeItem(this._lsLoginStatusKey);
                    } catch (t) {}
                    this.isClosed() || this._window.close(), this._window = null;
                },
                onSuccess: function(t) {
                    this._cleanup(), this._onSuccess && this._onSuccess(t);
                },
                onFailure: function(t) {
                    this._cleanup(), this._onFailure && this._onFailure(t);
                },
                destruct: function() {
                    this._cleanup(), this.__base.apply(this, arguments);
                }
            }), BEM.DOM.decl('captcha', {
                show: function(t) {
                    this.url = t, this._changeImg(t), this.setMod('state', 'visible'), this.params.show && home.stat.logPath('click', this.params.show);
                },
                hide: function() {
                    this.delMod('state'), this._clear();
                },
                isVisible: function() {
                    return this.hasMod('state', 'visible');
                },
                getInput: function() {
                    return this.findBlockInside('input', 'input');
                },
                _changeImg: function(t) {
                    this.elem('img').attr('src', t), this._clear();
                },
                _clear: function() {
                    this.elem('input').bem('input').val('');
                }
            }, {
                live: function() {
                    this.liveBindTo('reload', 'pointerclick', function() {
                        this._changeImg(this.url + '&cantread=1&ncrnd=' + (Math.random() + '').substr(3, 5));
                    });
                }
            }), BEM.DOM.decl('input', {
                onSetMod: {
                    js: {
                        inited: function() {
                            this._val = this.elem('control').val();
                        }
                    },
                    disabled: {
                        '*': function(t, e) {
                            this.elem('control').prop('disabled', e);
                        },
                        yes: function() {
                            this.delMod('focused');
                        }
                    },
                    focused: function(t, e) {
                        if (this.hasMod('disabled')) return !1;
                        e ? this._focused || this._focus() : this._focused && this._blur(), this.afterCurrentEvent(function() {
                            this.domElem && this.trigger(e ? 'focus' : 'blur');
                        });
                    }
                },
                isDisabled: function() {
                    return this.hasMod('disabled', 'yes');
                },
                val: function(t, e) {
                    var i = void 0 !== t,
                        n = this.elem('control');
                    return t = i ? null === t ? '' : t.toString() : n.val(), this._val !== t && (this._val = t, n.val() !== t && n.val(t), this.trigger('change', e)), i ? this : t;
                },
                name: function(t) {
                    var e = this.elem('control');
                    return arguments.length ? (e.attr('name', t), this) : e.attr('name');
                },
                getSelectionEnd: function() {
                    var t = this.elem('control')[0],
                        e = 0;
                    if ('number' == typeof t.selectionEnd) e = t.selectionEnd;
                    else {
                        var i = document.selection.createRange();
                        if (i && i.parentElement() === t) {
                            var n = t.value.length,
                                o = t.createTextRange();
                            o.moveToBookmark(i.getBookmark());
                            var s = t.createTextRange();
                            s.collapse(!1), e = o.compareEndPoints('EndToEnd', s) > -1 ? n : -o.moveEnd('character', -n);
                        }
                    }
                    return e;
                },
                _onFocus: function() {
                    if (parseInt(BEM.blocks['i-ua'].ios, 10) >= 8 && !this.hasMod('type', 'textarea')) {
                        var t = this.elem('control')[0];
                        t.selectionStart === t.value.length && (t.scrollLeft = t.scrollWidth);
                    }
                    return this._focused = !0, this.setMod('focused', 'yes');
                },
                _onBlur: function() {
                    return this._returnFocus ? (this.afterCurrentEvent(function() {
                        this.domElem && this._focus();
                    }), this) : this.hasMod(this.elem('clear'), 'pressed') ? this : (this._focused = !1, this.delMod('focused'));
                },
                _focus: function() {
                    if (this.hasMod('disabled', 'yes')) return !1;
                    this.elem('control').focus();
                },
                _blur: function() {
                    this._returnFocus = !1, this.elem('control').blur();
                },
                _updateVal: function() {
                    this.val(this.elem('control').val());
                },
                destruct: function() {
                    this._blur(), this.__base.apply(this, arguments);
                }
            }, {
                live: function() {
                    this.liveBindTo('control', 'focusin focusout', function(t) {
                        this['focusin' === t.type ? '_onFocus' : '_onBlur'](t);
                    }), this.liveBindTo('control', 'input', function() {
                        this._updateVal();
                    }), 9 === document.documentMode && (this.liveBindTo('control', 'focusin', function() {
                        this.bindToDoc('selectionchange', this._updateVal);
                    }), this.liveBindTo('control', 'focusout', function() {
                        this.unbindFromDoc('selectionchange');
                    }));
                }
            }), BEM.DOM.decl('input', {
                _onIOSTouchStart: function() {}
            }, {
                live: function() {
                    this.__base.apply(this, arguments), this.liveBindTo('clear', 'pointerclick', function(t) {
                        t.preventDefault();
                    });
                }
            }), BEM.DOM.decl('input', {
                onSetMod: {
                    js: function() {
                        this.__base.apply(this, arguments), this.afterCurrentEvent(function() {
                            this.elem('control').is(':focus') && this.setMod('focused', 'yes'), this.val() && this.trigger('change', {
                                suggest: !1
                            });
                        });
                    }
                },
                onElemSetMod: {
                    clear: {
                        visibility: function(t, e, i) {
                            this.setMod('clear-visibility', i);
                        }
                    }
                },
                val: function(t) {
                    return t !== undefined && t === this._val ? this : this.__base.apply(this, arguments);
                }
            }, {
                live: function() {
                    this.__base.apply(this, arguments), (home.getData('i-ua2.data.isMSIE') || 'Edge' === home.getData('i-ua2.data.browserName')) && this.liveBindTo('control', 'deactivate', function(t) {
                        this._onBlur(t);
                    });
                }
            }),
            function(t, e) {
                var i = {};
                /msie|trident/i.test(e) ? i.ie = parseInt(e.split(/msie|rv:/i)[1], 10) : -1 !== e.indexOf('Opera') && (i.opera = parseInt(e.split(/Version\//i)[1], 10));
                var n, o = {},
                    s = {};
                (n = e.match(/Windows\sPhone[^\d]*\s([\d.]+)/)) ? o.wp = n[1]: (n = e.match(/Android\s+([\d.]+)/)) ? o.android = n[1] : e.match(/\sHTC[\s_].*AppleWebKit/) ? o.android = '2.3' : (n = e.match(/iPhone\sOS\s([\d_]+)/)) ? (o.ios = n[1].replace(/_/g, '.'), s.iphone = !0) : (n = e.match(/iPad.*OS\s([\d_]+)/)) ? (o.ios = n[1].replace(/_/g, '.'), s.ipad = !0) : (n = e.match(/Bada\/([\d.]+)/)) ? o.bada = n[1] : (n = e.match(/MSIE\s9/)) ? o.wp = '7.5' : o.other = !0, BEM.DOM.decl('i-ua', {
                    onSetMod: {
                        js: {
                            inited: function() {
                                var t = this.__self,
                                    e = 'other';
                                ['ios', 'android', 'bada', 'wp', 'opera'].some(function(i) {
                                    return t[i] && (e = i);
                                }), this.setMod('platform', e);
                            }
                        }
                    },
                    setVersion: function() {
                        var t = this.parseVersion();
                        t && (this.setMod(t.platform, t.major), this.setMod(t.platform + '-subversion', t.subversion));
                    },
                    parseVersion: function() {
                        if (this.__self.ios || this.__self.android) {
                            var t = (this.__self.ios || this.__self.android).split('.'),
                                e = t.shift(),
                                i = t.join('-');
                            return {
                                platform: this.getMod('platform'),
                                major: e,
                                subversion: i
                            };
                        }
                    }
                }, {
                    ios: o.ios,
                    iphone: s.iphone,
                    ipad: s.ipad,
                    android: o.android,
                    bada: o.bada,
                    wp: o.wp,
                    other: o.other,
                    ua: e,
                    ie: i.ie,
                    opera: i.opera
                });
            }(window, navigator.userAgent),
            function(t, e) {
                var i, n = {},
                    o = {};
                if ((i = e.match(/\s(CrMo|Chrome)\/([\d.]+)/)) && (n.chrome = i[2]), (i = e.match(/\sVersion\/([\d\.]+)/)) && (n.safari = i[1]), navigator.connection) switch (navigator.connection.type) {
                    case navigator.connection.ETHERNET:
                    case navigator.connection.WIFI:
                        o.connection = 'wifi';
                        break;
                    case navigator.connection.CELL_3G:
                        o.connection = '3g';
                        break;
                    case navigator.connection.CELL_2G:
                        o.connection = '2g';
                }
                if (o._videoElement = document.createElement('video'), o.video = Boolean(o._videoElement.canPlayType && o._videoElement.canPlayType('video/mp4; codecs="avc1.42E01E, mp4a.40.2"').replace(/no/, '')), o.svg = Boolean(document.createElementNS && document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect), navigator.plugins && navigator.plugins.length)
                    for (var s, r = navigator.plugins.length; r--;)
                        if ('Shockwave Flash' === (s = navigator.plugins[r]).name && (i = s.description.match(/Flash ([\d.]+)/))) {
                            o.flash = i[1];
                            break;
                        }
                BEM.DOM.decl('i-ua', {
                    onSetMod: {
                        js: {
                            inited: function() {
                                var t = this.__self,
                                    e = document.documentElement,
                                    i = '';
                                this.__base.apply(this, arguments), t.opera ? i = 'opera' : t.chrome ? i = 'chrome' : t.safari && (i = 'safari'), this.setMod('browser', i).setMod('screen-size', t.screenSize), this.setVersion(), t.wp && parseFloat(t.wp) < 8.1 && e.setAttribute('class', e.getAttribute('class').replace('i-ua_svg_yes', 'i-ua_svg_no')), this.setMod('android-vowels-hack', t.android >= '3.0' && t.android < '3.2' || t.android >= '4.0' && t.android < '4.0.3' ? 'yes' : '');
                            }
                        }
                    }
                }, {
                    chrome: n.chrome,
                    safari: BEM.blocks['i-ua'].ios && n.safari,
                    screenSize: screen.width > 320 ? 'large' : screen.width < 320 ? 'small' : 'normal',
                    connection: o.connection,
                    flash: o.flash,
                    video: o.video,
                    svg: o.svg
                });
            }(window, navigator.userAgent), BEM.DOM.decl('input', {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.__base.apply(this, arguments), this.on('change', this._updateClear)._updateClear();
                        }
                    }
                },
                _onClearClick: function() {
                    return this.trigger('clear'), this.removeInsets && this.removeInsets(), this.clearInput({
                        source: 'clear'
                    })._focus();
                },
                clearInput: function(t) {
                    return this.val('', t), this;
                },
                _updateClear: function() {
                    return this.toggleMod(this.elem('clear'), 'visibility', 'visible', Boolean(this._val));
                }
            }, {
                live: function() {
                    return this.liveBindTo('clear', 'pointerpress', function(t) {
                        this.setMod(this.elem('clear'), 'pressed', 'yes');
                    }).liveBindTo('clear', 'pointerover', function(t) {
                        this.setMod(this.elem('clear'), 'hovered', 'yes');
                    }).liveBindTo('clear', 'pointerout', function(t) {
                        this.delMod(this.elem('clear'), 'hovered');
                    }).liveBindTo('clear', 'pointerclick', function() {
                        this.delMod(this.elem('clear'), 'pressed'), this._onClearClick();
                    }).liveBindTo('control', 'paste', function() {
                        this.setMod(this.elem('clear'), 'visibility', 'visible');
                    }), this.__base();
                }
            }), BEM.DOM.decl('input', {
                _focus: function() {
                    var t = this;
                    if (!1 === t.__base.apply(t, arguments)) return !1;
                    window.setImmediate && setImmediate(function() {
                        t.elem('control').val(t.elem('control').val());
                    });
                }
            }), BEM.DOM.decl('input', {
                onSetMod: {
                    js: function() {
                        var t = this;
                        this.__base.apply(this, arguments), this.elem('clear').on('click touchend MSPointerUp', function(e) {
                            if (t.delMod(t.elem('clear'), 'pressed'), t._onClearClick(), 'touchend' !== e.type || !home.getData('i-ua2.data.isIOS')) return !1;
                        }), this.bindTo('clear', 'mouseup', function() {
                            this.delMod(this.elem('clear'), 'pressed'), this._onClearClick();
                        }), this.bindToWin('pageshow', function(t) {
                            t.originalEvent.persisted && 'off' === this.elem('control').attr('autocomplete') && this.clearInput();
                        });
                    }
                }
            }), BEM.DOM.decl({
                block: 'dialog',
                modName: 'type',
                modVal: 'notifications'
            }, {
                show: function() {
                    var t = BEM.blocks['i-globalstate'],
                        e = Math.max(268, Math.min(t.width(), t.height()));
                    return this.domElem.css('max-width', e), this.__base.apply(this, arguments);
                },
                hide: function() {
                    return this.domElem.css('max-width', ''), this.__base.apply(this, arguments);
                }
            }),
            function() {
                try {
                    navigator && 'onLine' in navigator && navigator.onLine && home.localStorage.setItem('mOnlineFlag', '1');
                } catch (a) {}
                var t = home.getData('time-banner.data');
                if (t) {
                    var e = parseInt(new Date().getTime() / 1000, 10),
                        i = s(e, t.wdf) && t.wdf || s(e, t.wda) && t.wda;
                    if (i) {
                        try {
                            if (navigator && 'onLine' in navigator && !navigator.onLine && home.localStorage.getItem('mOnlineFlag')) return;
                        } catch (a) {}
                        $(function() {
                            BEM.blocks['i-message-locker'].acquireLock('time-banner').then(function() {
                                var e = new Date().getTime(),
                                    s = $('.time-banner');
                                new Image().src = i.show_url + '?' + e, home.stat.logPath('click', i.count.show);
                                var a = n(o(t.timestamp), i.datePlaceholder, t.l10n);
                                (function(t) {
                                    return t['%date1%'] === t['%date2%'];
                                }(a) && t.fallbackDatePlaceholder && i.canFallbackDate && (a = n(o(t.timestamp), t.fallbackDatePlaceholder, t.l10n)), s.find('.text').html(function(t, e) {
                                    return t.replace(/%date1%|%date2%/gi, function(t) {
                                        return e[t];
                                    });
                                }(i.mainTextTemplate, a)), s.addClass(i.flag_name), s.find('.button').attr('href', function(t, e) {
                                    return i.count.search ? i.count.search : e;
                                }).click(function() {
                                    return s.animate({
                                        height: 0
                                    }, 300, function() {
                                        $(this).hide(), BEM.blocks['i-message-locker'].releaseLock('time-banner');
                                    }), !0;
                                }), s.css('display', 'block').animate({
                                    height: r()
                                }, 300), $('.time-banner__cross').click(function() {
                                    new Image().src = i.close_url + '?' + e, home.stat.logPath('click', i.count.close), s.animate({
                                        height: 0
                                    }, 300, function() {
                                        $(this).hide(), BEM.blocks['i-message-locker'].releaseLock('time-banner');
                                    }), BEM.channel('i-height-event').trigger('change');
                                }), $(window).on('resize orientationchange', function() {
                                    s.stop().css({
                                        height: r()
                                    }), BEM.channel('i-height-event').trigger('change');
                                }), BEM.channel('dialog').on('hide', function() {
                                    s.stop().css({
                                        height: r()
                                    });
                                }));
                            });
                        });
                    }
                }

                function n(t, e, i) {
                    return $.each(t, function(n, o) {
                        var s = {
                            '%day': o.getDate(),
                            '%month': i.monthNames[o.getMonth()],
                            '%year': o.getFullYear()
                        };
                        t[n] = e.replace(/%year|%day|%month/gi, function(t) {
                            return s[t];
                        });
                    }), t;
                }

                function o(t) {
                    return {
                        '%date1%': new Date(),
                        '%date2%': new Date(t)
                    };
                }

                function s(t, e) {
                    var i = t < (e = e || {}).till_ts,
                        n = t > e.from_ts;
                    return i || n;
                }

                function r() {
                    return $('.time-banner-inner').outerHeight(!0);
                }
            }(), BEM.DOM.decl('timeload', {
                onSetMod: {
                    js: function() {
                        var t = home.getData('reload.data');
                        if (!t || !t.on) {
                            var e = new Date(),
                                i = e.getMinutes(),
                                n = e.getHours();
                            this._begin = e, this.elem('alert').append(' ' + n + ':' + (i < 10 ? '0' : '') + i), this._countdown();
                        }
                    }
                },
                _countdown: function() {
                    var t = this;
                    clearInterval(t._checkTime), t._checkTime = setInterval(function() {
                        new Date() - t._begin >= 600000 && (t.setMod('show', 'yes'), BEM.channel('i-height-event').trigger('change'), clearInterval(t._checkTime));
                    }, 1000);
                },
                postpone: function() {
                    this._begin = new Date(), this.delMod('show')._countdown();
                }
            }), BEM.decl('i-visibilitychange', {}, {
                waitForVisible: function(t) {
                    document.hidden ? BEM.channel('sys').onFirst('visible', t) : t();
                }
            }), BEM.DOM.declMix('mix-direct-counter-touch', {
                onSetMod: {
                    js: {
                        inited: function() {
                            this._initCounter();
                        }
                    }
                },
                _initCounter: function() {
                    this._counterSent = !1;
                    var t, e = this._getCounterData(),
                        i = e && e.counter,
                        n = e && e.timeout;
                    if (i) {
                        var o = function() {
                                this.channel('sys').un('visibilitychange', s), this.unbindFromWin('morientationchange', s), this._sendCounter(i);
                            }.bind(this),
                            s = function() {
                                clearTimeout(t), 'visible' !== document.visibilityState || this._isLandscapeOrientation() || (t = setTimeout(o, n));
                            }.bind(this);
                        this.channel('sys').on('visibilitychange', s), this.bindToWin('morientationchange', s), s();
                    }
                },
                _getCounterData: function() {
                    return this._getData().counter;
                },
                _sendCounter: function(t) {
                    this._counterSent || (this._counterSent = !0, navigator.sendBeacon && navigator.sendBeacon(t, ' ') || (new Image().src = t));
                },
                _isLandscapeOrientation: function() {
                    return $('html').hasClass('i-ua_orient_landscape');
                }
            }), BEM.DOM.decl('fm', {
                onSetMod: {
                    js: {
                        inited: function() {
                            var t = 0 === this.elem('close-block').length;
                            this.bindTo('Cr', 'click', function() {
                                t ? (this.renderCloseBlock(), t = !1, setTimeout(function() {
                                    this.toggleMod('A1', 'Ix', 'AP');
                                }.bind(this), 50)) : this.toggleMod('A1', 'Ix', 'AP');
                            });
                        }
                    }
                },
                renderCloseBlock: function() {
                    var t = {
                        pseudo: 'yes'
                    };
                    this.hasMod('cx', 'Ke') ? t.violet = 'yes' : t.blue = 'yes';
                    var e = this.params.data || home.getData('direct.data.' + this.params.id + '.closeData'),
                        i = [{
                            options: '3-2',
                            text: home.l10n('direct.not_interest')
                        }, {
                            options: '14-2',
                            text: home.l10n('direct.bought_already')
                        }, {
                            options: '5-3',
                            text: home.l10n('direct.spam')
                        }].map(function(e) {
                            return home.view('home-link', {
                                content: e.text,
                                mods: t,
                                mix: 'direct-close-block__close-reason ' + 'fm' + '__close-reason',
                                attrs: {
                                    'data-id': e.options
                                },
                                stat: ''
                            });
                        }).join('');
                    this.domElem.prepend(home.view('direct-close-block__close-block', {
                        buttons: i
                    }), home.view('direct-close-block__confirm-block', {})), e && e.sendStat && home.stat.logPath('click', e.statName + '.close');
                },
                _onReasonClick: function(t) {
                    var e = t.data.domElem.data('id').split('-'),
                        i = this.params.data && this.params.data.abuseUrl || home.getData('direct.data.' + this.params.id + '.closeData.abuseUrl'),
                        n = home.parseUrl(i);
                    e.length > 0 && (n.query.reason = e[0], n.query['action-id'] = e[1], new Image().src = home.makeUrl(n), this.setMod('A1', 'k9'));
                }
            }, {
                live: function() {
                    return this.liveBindTo('close-reason', 'click', function(t) {
                        return this._onReasonClick(t);
                    }), !1;
                }
            }), BEM.channel('i-sight').on('block_viewed_no:before', function(t, e) {
                e.removeClass('block_viewed_no');
            }), BEM.DOM.decl({
                block: 'Fh',
                baseMix: ['mix-direct-counter-touch']
            }, {
                _initCounter: function() {
                    this._counterSent = !1;
                    var t, e = this._getCounterData(),
                        i = e && e.counter,
                        n = e && e.timeout,
                        o = this.domElem,
                        s = $(window);
                    if (i) {
                        var r = function() {
                                l(), this._sendCounter(i);
                            }.bind(this),
                            a = function() {
                                clearTimeout(t), c() && (t = setTimeout(r, n));
                            },
                            c = function() {
                                var t = 0.5 * o.height(),
                                    e = o.offset().top,
                                    i = s.scrollTop(),
                                    n = s.height();
                                return 'visible' === document.visibilityState && i < e - t && i + n > e + t;
                            },
                            h = function() {
                                this.channel('sys').on('visibilitychange', a), this.channel('i-scroll-event').on('scroll', a), a();
                            }.bind(this),
                            l = function() {
                                this.channel('sys').un('visibilitychange', a), this.channel('i-scroll-event').un('scroll', a);
                            }.bind(this);
                        this.channel('i-sight').on('Fh' + ':full', h);
                    }
                },
                _getData: function() {
                    var t = this.params.id;
                    return home.getData('direct.data.' + t) || this.params.data || {};
                }
            }), BEM.DOM.decl({
                block: 'Pw',
                baseMix: ['mix-direct-counter-touch']
            }, {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.__base.apply(this, arguments);
                            var t = this._getData();
                            t && t.sendStat && this.bindTo('BA', 'click', function() {
                                home.stat.logPath('click', t.statName + '.card');
                            }), this._moveDirectWarning(), this._initAnimation();
                        }
                    }
                },
                _getData: function() {
                    var t = this.params.id;
                    return home.getData('direct.data.' + t) || this.params.data || {};
                },
                _moveDirectWarning: function() {
                    var t = this.elem('Ey'),
                        e = this.elem('P4'),
                        i = !1,
                        n = 25;

                    function o(t) {
                        e.css({
                            '-webkit-transform': 'translateX(' + -t + 'px)',
                            transform: 'translateX(' + -t + 'px)'
                        });
                    }
                    t.on('contextmenu', function(t) {
                        t.preventDefault();
                    }), t.on('click', function() {
                        return function() {
                            var s = t.width(),
                                r = e.width() - s + n,
                                a = 1000 * r / 50,
                                c = (a / 1000).toFixed(1);
                            if (i) return;
                            if (i = !0, r < 0) return;
                            e.css({
                                '-webkit-transition': '-webkit-transform ' + c + 's linear',
                                transition: 'transform ' + c + 's linear'
                            }), setTimeout(function() {
                                o(r), setTimeout(function() {
                                    (i = !1) || (e.css({
                                        '-webkit-transition': 'none',
                                        transition: 'none'
                                    }), o(0));
                                }, a + 2000);
                            }, 0);
                        }(), !1;
                    });
                },
                _initAnimation: function() {
                    this._startAnimation(), this._iosAnimationFix();
                },
                _startAnimation: function() {
                    setTimeout(function() {
                        this.setMod('H9', 'Be');
                    }.bind(this), 100);
                },
                _iosAnimationFix: function() {
                    if (home.getData('i-ua2.data.isIOS')) {
                        var t = this;
                        window.addEventListener('blur', function() {
                            t.setMod('H9', 'kO');
                        }), window.addEventListener('focus', function() {
                            t.setMod('H9', 'Be');
                        });
                    }
                }
            }, {
                live: !1
            });
        var O = function() {};
        O.prototype.sendCounts = function(t, e) {
            home.getData('common.reportVisibilityCheck') ? BEM.blocks['i-visibilitychange'].waitForVisible(function() {
                this.sendCountsChecked(t, e);
            }.bind(this)) : this.sendCountsChecked(t, e);
        }, O.prototype.sendCountsChecked = function(t, e) {
            t.counters && t.counters.length && this.activateDelayedCounts(t.counters, t.delay, 'count', e);
        }, O.prototype.activateDelayedCounts = function(t, e, i, n) {
            var o = this,
                s = n ? $('.' + n) : null,
                r = function() {
                    o.bannerIsInvisible() || (BEM.channel('sys').un('visibilitychange', a), s && s.off('mouseover', r), o._delayedTimeoutId && (clearTimeout(o._delayedTimeoutId), o._delayedTimeoutId = null), t.forEach(function(t) {
                        o.sendCount(t, 0, i);
                    }));
                },
                a = function() {
                    o._delayedTimeoutId && clearTimeout(o._delayedTimeoutId), o._delayedTimeoutId = setTimeout(r, e);
                };
            BEM.channel('sys').on('visibilitychange', a), s && s.on('mouseover', r), a();
        }, O.prototype.sendCount = function(t, e, i) {
            var n = this;
            t && (this.shownHash = this.shownHash || {}, setTimeout(function() {
                n.bannerIsInvisible() || (new Image().src = t, i && !n.shownHash[i] && home.stat.logPath('show', 'rtb_vis.' + i));
            }, e), window.home.bnCounts || (window.home.bnCounts = []), home.bnCounts.push(t));
        }, O.prototype.bannerIsInvisible = function() {
            var t = home && home.getData && home.getData('rtb.vis'),
                e = !0;
            if (10 === t || 11 === t) e = $('.' + 'ag').is(':visible');
            else if (12 === t || 13 === t) {
                var i = $('.' + 'RL__bZ');
                i.length && (e = i.is(':visible'));
            }
            return t && !e ? t : 0;
        }, O.prototype.addImageContent = function() {
            var t = home.getData('rtb.image');
            if (t) {
                var e = 'v2';
                this.sendCounts(t, e), t.href && $('.' + e).click(function() {
                    home.openWindow(t.href);
                });
            }
        }, O.prototype.addIframeContent = function() {
            var t = home.getData('rtb.iframe');
            if (t) {
                var e = 'RL__bZ',
                    i = 'RL';
                this.sendCounts(t, e);
                var n = $('<iframe class="' + e + '" frameborder="no" scrolling="no" allowtransparency="true" hidefocus="true" tabindex="-1" marginwidth="0" marginheight="0" sandbox="allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-scripts allow-forms"></iframe>');
                $('.' + i).html(n);
                var o = t.html.replace('<head>', '<head><base href="' + t.basePath + '" target="_blank"></base>'),
                    s = n[0].contentDocument;
                s.open(), s.write(o), s.close();
            }
        }, $(function() {
            var t = new O();
            t.addImageContent(), t.addIframeContent();
        }), home.openWindow = function(t) {
            var e = window.open('', '_blank');
            e.opener = null, e.location = t;
        }, $(function() {
            var t, e = home.getData('banner');
            if (e)
                if (home.getData('banner.expand')) {
                    t = $('.ak');
                    var i, n = home.getData('banner.testExpand'),
                        o = $('.ak__Lb, .ak__bc'),
                        s = !1,
                        r = function(e) {
                            var o;
                            if (s !== e && (n || !(t.hasClass('ak_yO_cj') || $('html').hasClass('i-ua_orient_landscape') && e))) {
                                s = e, t.toggleClass('ak_rM_cj', s), home.stat.logPath('click', 'banner.' + (e ? 'expand' : 'collapse')), (o = home.getData('banner.stat.' + (e ? 'expand' : 'collapse'))) && (new Image().src = o);
                                var r = $('.ak__aW');
                                if (s) {
                                    if (!r.attr('src')) {
                                        var a = [$.Deferred(), $.Deferred()],
                                            c = new Date();
                                        r.off('load').on('load', function() {
                                            a[0].resolve(), c && (home.stat.logPath('banner_expand', 'timing=' + (new Date() - c)), c = null);
                                        }).attr('src', r.data('src')), setTimeout(function() {
                                            a[1].resolve();
                                        }, 400), $.when(a[0], a[1]).then(function() {
                                            t.addClass('ak_Zs_cj');
                                        });
                                    }
                                    BEM.channel('page').trigger('interaction');
                                } else r.removeAttr('src'), t.removeClass('ak_Zs_cj');
                                i = null;
                            }
                        },
                        a = function() {
                            return !t.hasClass('ak_yO_cj') && !$('html').hasClass('i-ua_orient_landscape');
                        };
                    n && $('html').removeClass('i-ua_orient_landscape').addClass('i-ua_orient_portrait'), $(window).on('morientationchange', function(e, i) {
                        if (n ? $('html').removeClass('i-ua_orient_landscape').addClass('i-ua_orient_portrait') : i.orientation, home.getData('i-ua2.data.isIOS') && !i.orientation) {
                            var o = t.parent();
                            t.detach(), t.appendTo(o);
                        }
                    }), BEM.channel('dialog').on('open', function() {
                        r(!1);
                    }), o.on('touchstart', function(t) {
                        if (!n && a()) return i = home.getTouchEvent(t), !1;
                    }), o.on('touchmove', function(t) {
                        if (i) {
                            var e = home.getTouchEvent(t).y;
                            return s ? e < i.y && r(!1) : e - i.y > 10 && r(!0), !1;
                        }
                    }), o.on('touchend touchcancel', function(t) {
                        if (i && Math.abs(home.getTouchEvent(t).y - i.y) < 10) return r(!s), !1;
                        i = null;
                    }), o.on('click', function() {
                        return s || a() || n ? (r(!s), !1) : (window.open(home.getData('banner.link')), !1);
                    }), $('.ak__jX').on('click', function() {
                        return r(!1), !1;
                    }), BEM.channel('i-scroll-event').on('scroll', function(t, e) {
                        e > 100 && r(!1);
                    }), $(window).on('message', function(t) {
                        if (t = t.originalEvent, $('.ak__aW')[0].contentWindow === t.source) {
                            var e;
                            try {
                                e = JSON.parse(t.data);
                            } catch (i) {
                                return;
                            }
                            e && e.command && 'close' === e.command && setTimeout(function() {
                                r(!1);
                            }, 500);
                        }
                    }), c();
                } else {
                    if (t = $('.i-ua_orient_landscape .ak_uS_US'), !e['support-landscape'] && t.length) return void t.remove();
                    c();
                }
            function c() {
                var t = !1,
                    i = {},
                    n = function(e, n) {
                        var o = 'undefined' != typeof e.timeout ? e.timeout : 0;
                        setTimeout(function() {
                            new Image().src = e.url, n && !i[n] && home.stat.logPath('show', 'awaps_vis.' + n), t || 'bncount' !== n || !home.getData('banner.intersectionCheck') && !home.getData('banner.intersectionCheckAlt') || (t = !0, home.stat.logPath('tech', 'banner.intersection_old'));
                        }, 1000 * o);
                    },
                    o = function(t, e) {
                        t && (t = 'string' == typeof t ? {
                            url: t
                        } : t, home.getData('common.reportVisibilityCheck') ? BEM.blocks['i-visibilitychange'].waitForVisible(function() {
                            n(t, e);
                        }) : n(t, e));
                    };
                e.win && e.win.forEach(function(t) {
                    o(t, 'win');
                }), e.counters && e.counters.forEach(function(t) {
                    o(t, 'bncount');
                });
            }
        });
        var L, R, A, j, N, F, U, H, q, Y, K, V, z, W, G, X, Q, J, Z = {},
            tt = function(t) {
                function e(t) {
                    t || (t = {}), this._url = t.url || '/portal/ntp/banner', this._node = t.node, this._loadTimeout = t.loadTimeout || 30, this._timeout = t.timeout, this._limit = t.limit || 3, this._ratio = t.ratio || 1;
                    var e = t.autoRefreshCheck || function(t) {
                        this._onError('No autorefresh check'), t();
                    };
                    this._check = e.bind(this, this.refreshBanner.bind(this)), this._query = t.queryParams, this._bannerClass = t.className, this._loadingClass = t.loadingClassName, this._wrapClass = t.wrapClass, this._onBannerMessage = t.onBannerMessage, this._onRefreshBanner = t.onRefreshBanner || function() {}, this._container = this._node && this._node.parentNode, 'number' != typeof this._timeout && (this._onError('invalid timeout ' + this._timeout + ' set to 90'), this._timeout = 90), this._node && this._container || this._onError('invalid or detached node'), t.skip && this._updateUsedBanners(t.skip.slice());
                }
                return e.prototype = {
                    _updateUsedBanners: function(t) {
                        Array.isArray(t) ? t.forEach(function(t) {
                            Z[t] = 1;
                        }) : Z[t] = 1;
                    },
                    _getUsedBanners: function() {
                        return Object.keys(Z);
                    },
                    _onError: function(t) {
                        var e = new Error('BannerRefresh:' + t);
                        e.block = 'banner-refresh', this._node && (e.meta = {
                            cls: this._node.className
                        }, this._container && (e.meta.cnt = this._container.className)), home.error.log(e);
                    },
                    _bindOnMessage: function(e) {
                        this._onMessage && this._unbindOnMessage(), this._onMessage = function(t) {
                            if (!e || e.contentWindow === t.source) {
                                var i;
                                try {
                                    i = JSON.parse(t.data);
                                } catch (n) {
                                    return;
                                }
                                i && i.type && (r(), this._unbindOnMessage(), this._onEvent(i, e));
                            }
                        }.bind(this);
                        var i = function() {
                                s(), e._loaded = !0;
                            },
                            n = function() {
                                r(), this._onEvent({
                                    type: 'none'
                                }, e);
                            }.bind(this),
                            o = setTimeout(n, 1000 * this._loadTimeout);

                        function s() {
                            e.removeEventListener('load', i), e.removeEventListener('error', n);
                        }

                        function r() {
                            clearTimeout(o), s();
                        }
                        e.addEventListener('load', i), e.addEventListener('error', n), t.addEventListener('message', this._onMessage);
                    },
                    _unbindOnMessage: function() {
                        this._onMessage && (t.removeEventListener('message', this._onMessage), this._onMessage = null);
                    },
                    setRefresh: function() {
                        this._timeout ? setTimeout(this._check, 1000 * this._timeout) : this._check();
                    },
                    refreshBanner: function() {
                        if (!(this._limit <= 0)) {
                            this._limit--, this._timeout *= this._ratio;
                            var t = home.deepExtend({}, this._query),
                                e = this._getUsedBanners();
                            e.length && (t['skip-banner'] = e.join(','));
                            var i = home.addQueryToUrl(this._url, t);
                            this._container ? this._container.appendChild(this._createNew(i)) : this._onError('No container on refresh');
                        }
                    },
                    _onEvent: function(t, e) {
                        this._onBannerMessage && this._onBannerMessage(t), 'none' !== t.type ? 'statpixel' !== t.type && (e._loaded ? this._switchBanners() : e.addEventListener('load', this._switchBanners.bind(this)), t.bannerId && this._updateUsedBanners([t.bannerId])) : this._destroyNew();
                    },
                    _switchBanners: function() {
                        this._new && (this._container.removeChild(this._node), this._new.className = this._new.className.replace(new RegExp('\\b' + this._loadingClass + '\\b'), ''), this._node = this._new, this._new = null, this.setRefresh(), this._onRefreshBanner());
                    },
                    _createNew: function(t) {
                        this._destroyNew();
                        var e = this._new = document.createElement('iframe');
                        if (e.className = this._bannerClass, this._bindOnMessage(e), e.src = t, this._wrapClass) {
                            var i = this._new = document.createElement('div');
                            i.className = this._wrapClass, i.appendChild(e);
                        }
                        return this._new.className += ' ' + this._loadingClass, this._new;
                    },
                    _destroyNew: function() {
                        if (this._new) {
                            var t = this._new;
                            t.parentNode.removeChild(t), this._unbindOnMessage(), this._new = null;
                        }
                    }
                }, e;
            }(window);
        return function() {
                var t = home.getData('banner.refresh'),
                    e = t && document.querySelector('.' + t.bannerContainer),
                    i = 'ak__Dd',
                    n = home.getData('banner.directTouchFeed.refresh.skipBanner');
                if (e && t) {
                    var o = t.skipBanner && t.skipBanner.split(',') || [];
                    if (n)
                        for (var s in n) o.push(n[s]);
                    new tt({
                        url: t.url,
                        node: e,
                        timeout: t.timeout,
                        limit: t.limit,
                        ratio: t.ratio,
                        skip: o,
                        autoRefreshCheck: function(t) {
                            var e = function() {
                                r() && (BEM.channel('sys').un('visibilitychange', e), $(window).off('orientationchange', e), t());
                            };
                            r() ? t() : (BEM.channel('sys').on('visibilitychange', e), $(window).on('orientationchange', e));
                        },
                        queryParams: {
                            'morda-refresh': 'touch',
                            refresh_timeout: t.timeout,
                            'dark-theme': t.darkTheme
                        },
                        wrapClass: i,
                        className: 'ak ak_sg_cj',
                        loadingClassName: 'ak_r4_cj'
                    }).setRefresh();
                }

                function r() {
                    return !document.hidden && 90 !== Math.abs(window.orientation);
                }
            }(), $(function() {
                var t = home.getData('banner.intersectionCheck'),
                    e = home.getData('banner.intersectionTimeout');
                if (t) {
                    var i = $('.ak');
                    if (i.length) {
                        var n, o = $('.mtabs'),
                            s = !1,
                            r = !document.hidden;
                        BEM.channel('sys').on({
                            visible: a,
                            hidden: c
                        }), BEM.channel('i-scroll-event').on('scroll', h), h(null, $(window).scrollTop());
                    }
                }

                function a() {
                    r = !0, l();
                }

                function c() {
                    r = !1, l();
                }

                function h(e, n) {
                    s = n <= ('lower' === t ? o.offset().top + o.height() - i.height() - 5 : i.offset().top) + i.height() / 2, l();
                }

                function l() {
                    clearTimeout(n), s && r && (n = setTimeout(u, e));
                }

                function u() {
                    home.stat.logPath('tech', 'banner.intersection_new'), BEM.channel('i-scroll-event').un('scroll', h), BEM.channel('sys').un({
                        visible: a,
                        hidden: c
                    });
                }
            }), BEM.DOM.decl('menu2', {
                onSetMod: {
                    js: {
                        inited: function() {
                            this._shown = !1, this.channel('i-hash').on('change', function(t) {
                                var e = this;
                                'menu2' in t.hash && (BEM.blocks['i-hash'].get('menu2') ? this.show() : setTimeout(function() {
                                    e.hide();
                                }, home.getData('i-ua2.data.isMSIE') ? 100 : 0));
                            }, this), this.findBlockOn('i-swipe-controller').on({
                                'swipe-start': function() {
                                    this._blockClicks = !0;
                                },
                                'swipe-touch': function() {
                                    this._blockClicks = !1;
                                },
                                'swipe-toggle': this.toggle
                            }, this), home.getData('i-ua2.data.isMSIE') && this.elem('list').on('touchstart', function() {}), this._initMessenger();
                        }
                    }
                },
                toggle: function() {
                    this._shown ? this.hide() : this.show();
                },
                show: function() {
                    this._shown || (BEM.channel('menu2').trigger('show'), this._shown = !0, this._show(), BEM.blocks['i-hash'].contains('menu2') || BEM.blocks['i-hash'].set('menu2'));
                },
                hide: function() {
                    this._shown && (BEM.channel('menu2').trigger('hide'), this._shown = !1, this._hide(), BEM.blocks['i-hash'].remove('menu2', !0));
                },
                _show: function() {
                    var t = this.elem('wrapper').height();
                    $('body').addClass('body_menu_shown'), BEM.blocks['i-crossbrowser'].setTransform($('.content'), -280, 0, !0), BEM.blocks['i-crossbrowser'].setTransform(this.elem('wrapper'), -280, 0, !0), $('html').hasClass('i-ua_scroll_no') && $('.body__wrapper').css('min-height', t + 'px'), BEM.channel('page').trigger('interaction'), BEM.channel('menu').trigger('open'), home.stat.logPath('resize', this.params.counters.show);
                },
                _hide: function() {
                    var t = $('.content');
                    BEM.blocks['i-crossbrowser'].setTransform(t, 0, 0, !0), BEM.blocks['i-crossbrowser'].setTransform(this.elem('wrapper'), 0, 0, !0), clearTimeout(this._timer), this._timer = setTimeout(function() {
                        $('body').removeClass('body_menu_shown'), $('.body__wrapper').css('min-height', ''), t.css({
                            '-webkit-transform': 'none',
                            transform: 'none'
                        });
                    }, 400), home.stat.logPath('resize', this.params.counters.hide);
                },
                _onItemClick: function(t) {
                    var e, i, n;
                    if (this._blockClicks) return !1;
                    (e = $(t.target).closest('.menu2__item')).length && (i = e.data('search')) && (n = $('.search3 .mini-suggest__input').val()) && (/\/\/(clck\.yandex\.\w+|(www\.)?yandex\.\w+\/clck)/.test(i) ? e.attr('href', i + encodeURIComponent(encodeURIComponent('=' + encodeURIComponent(n)))) : e.attr('href', i + '=' + encodeURIComponent(n)));
                },
                _showDomik: function() {
                    this._blockClicks || BEM.blocks.dialog.show('domik');
                },
                _showUsermenu: function() {
                    this._blockClicks || BEM.blocks.dialog.show('user-info');
                },
                _initMessenger: function() {
                    var t = this.elem('item', 'type', 'messenger');
                    t.length && (this.bindTo(t, 'click', function() {
                        return BEM.blocks['i-messenger'].showWidget(), !1;
                    }), BEM.blocks['i-messenger'].listenCount(function(e) {
                        var i = this.findElem('messenger-badge');
                        i.length || (i = $('<div class="menu2__messenger-badge"></div>')).appendTo(t), e > 0 ? i.text(e) : i.remove();
                    }.bind(this)));
                }
            }, {
                live: function() {
                    return BEM.blocks['i-hash'].remove('menu2', !0), this.liveBindTo('show-domik', 'click', function() {
                        return this._showDomik(), !1;
                    }), this.liveBindTo('user', 'click', function() {
                        return this._showUsermenu(), !1;
                    }), this.liveBindTo('item', 'click', function(t) {
                        return this._onItemClick(t);
                    }), this.liveBindTo('overlay', 'click', function() {
                        return this._blockClicks || this.toggle(), !1;
                    }), !0;
                }
            }), BEM.DOM.decl('i-swipe-controller', {
                _onTouchStart: function(t) {
                    this._startCoords = home.getTouchEvent(t), this._moveCoords = null, this._verticalSwipe = !1, this._horizontalSwipe = !1, this.trigger('swipe-touch');
                },
                _onTouchMove: function(t) {
                    var e = home.getTouchEvent(t);
                    this._moveCoords = e, this._startCoords && (3 * Math.abs(e.x - this._startCoords.x) < Math.abs(e.y - this._startCoords.y) && (this._verticalSwipe = !0), !this._verticalSwipe && 3 * Math.abs(e.y - this._startCoords.y) < e.x - this._startCoords.x && e.x - this._startCoords.x > this.__self.MIN_SWIPE_DISTANCE && (this._horizontalSwipe = !0)), (this._horizontalSwipe || this._verticalSwipe) && this.trigger('swipe-start');
                },
                _onTouchEnd: function(t) {
                    if (this._startCoords) {
                        if (!this._verticalSwipe) {
                            var e = home.getTouchEvent(t);
                            e.x || e.y || (e = this._moveCoords), e.x - this._startCoords.x > this.__self.MIN_SWIPE_DISTANCE && this.trigger('swipe-right', {
                                dist: e.x - this._startCoords.x
                            }), this._startCoords.x - e.x > this.__self.MIN_SWIPE_DISTANCE && this.trigger('swipe-left', {
                                dist: this._startCoords.x - e.x
                            });
                        }
                        return this._startCoords = undefined, !this._verticalSwipe && this._horizontalSwipe ? (this.trigger('swipe-toggle'), !1) : void 0;
                    }
                }
            }, {
                MIN_SWIPE_DISTANCE: 20,
                live: function() {
                    if ($('html').hasClass('i-ua_swipe_yes')) {
                        var t = 'onpointerdown' in window;
                        this.liveBindTo(t ? 'pointerdown' : 'touchstart', function(t) {
                            this._onTouchStart(t);
                        }), this.liveBindTo(t ? 'pointermove' : 'touchmove', function(t) {
                            this._onTouchMove(t);
                        }), this.liveBindTo(t ? 'pointerup pointercancel' : 'touchend touchcancel', function(t) {
                            this._onTouchEnd(t);
                        });
                    }
                }
            }), BEM.DOM.decl({
                block: 'menu-plus-promo'
            }, {
                onSetMod: {
                    js: function() {
                        this.params.showUrl && BEM.channel('menu').onFirst('open', function() {
                            new Image().src = this.params.showUrl;
                        }, this);
                    }
                }
            }), BEM.DOM.decl('menu-login-promo', {
                onSetMod: {
                    js: function() {
                        this._sentBkShow = !1, this.channel('menu2').on('show', this.sendBkShow, this), this.bindTo('button', 'click', this.sendBkCLose);
                    }
                },
                sendBkShow: function() {
                    if (!this._sentBkShow) {
                        var t = this.domElem.data('show-url');
                        t && (new Image().src = t, this._sentBkShow = !0);
                    }
                },
                sendBkCLose: function(t) {
                    var e = $(t.target),
                        i = e.data('close-url'),
                        n = e.attr('href');
                    home.sendBkClose(t, i, n);
                }
            }), home.sendBkClose = function(t, e, i) {
                if (e) return i ? (t.preventDefault(), Promise.race([o(), new Promise(function(t) {
                    setTimeout(t, 300);
                })]).then(n, n)) : o();

                function n() {
                    location.href = i;
                }

                function o() {
                    return new Promise(function(t, i) {
                        var n = new Image();
                        n.onload = t, n.onerror = i, n.src = e;
                    });
                }
            }, BEM.DOM.decl('grefer-promo', {
                onSetMod: {
                    js: function() {
                        BEM.blocks['i-message-locker'].acquireLock('grefer-promo').then(this.changeThis(this._show)), this.bindTo('close', 'click', this.close), this.bindTo('phone', 'click', this.close), this.bindTo('title', 'click', this.close), this.bindTo('button', 'click', this.close);
                    }
                },
                _show: function() {
                    this.setMod('show', 'yes');
                },
                close: function() {
                    BEM.blocks['i-message-locker'].releaseLock('grefer-promo'), this.params.carantineLink && (new Image().src = this.params.carantineLink), this.destruct();
                }
            }), BEM.DOM.decl('notification-promo', {
                onSetMod: {
                    js: {
                        inited: function() {
                            BEM.blocks['i-multiline-overflow'].calcOverflow(this.elem('line-clamp'), 3, this.__self.getName()), this.params.closeUrl && this.bindTo('click', function(t) {
                                var e = $(t.target).attr('href'),
                                    i = '_blank' === $(t.target).attr('target'),
                                    n = this.params.closeUrl;
                                home.sendBkClose(t, n, i ? undefined : e);
                            }.bind(this));
                        }
                    }
                }
            }, {
                live: function() {
                    return !1;
                }
            }), BEM.DOM.decl({
                block: 'notification-promo',
                modName: 'type',
                modVal: 'social-alert'
            }, {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.__base.apply(this, arguments), this.params.markAsReadParams && this.bindTo('click', this._markAsRead);
                        }
                    }
                },
                _markAsRead: function() {
                    var t = this.params.markAsReadParams;
                    this._sendRequest({
                        method: 'post',
                        url: t.read_url,
                        source: 'bell',
                        headers: {
                            'X-CSRF-Token': t.csrf_token
                        }
                    }), this._sendRequest({
                        method: 'put',
                        url: t.read_url_legacy,
                        source: 'bell_legacy'
                    });
                },
                _sendRequest: function(t) {
                    $.ajax({
                        method: t.method,
                        url: t.url,
                        xhrFields: {
                            withCredentials: !0
                        },
                        headers: t.headers,
                        dataType: 'json',
                        timeout: 10000
                    }).asPromise()['catch'](function(e) {
                        home.error.logError({
                            block: this.__self.getName(),
                            message: '_sendRequest',
                            source: t.source
                        }, e);
                    }.bind(this));
                }
            }), BEM.DOM.decl('media-promo', {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.params.scroll && ('scrollRestoration' in history && (history.scrollRestoration = 'manual'), this._scrollTo(this.domElem));
                        }
                    }
                },
                _scrollTo: function(t) {
                    var e = t.offset().top,
                        i = t.outerHeight(),
                        n = BEM.blocks['i-globalstate'].height();
                    i < n && (e -= (n - i) / 2.618), $('html,body').stop().animate({
                        scrollTop: e
                    }, 'slow');
                }
            }), BEM.DOM.decl({
                block: 'block',
                modName: 'switcher',
                modVal: 'yes'
            }, {
                onSetMod: {
                    state: {
                        min: function() {
                            this._saveState(this.params.cslmin), this.trigger('state', 'min'), BEM.channel('i-height-event').trigger('change'), this.trigger('change', {
                                state: 'min'
                            });
                        },
                        full: function() {
                            this._saveState(this.params.cslfull), this.trigger('state', 'full'), BEM.channel('i-height-event').trigger('change'), this.trigger('change', {
                                state: 'full'
                            });
                        }
                    }
                },
                _saveState: function(t) {
                    t && (new Image().src = t);
                },
                _sendStatOnClick: function() {
                    var t = home.stat;
                    this.hasMod('state', 'full') ? (t.logPath('click', this.params.stattomin), t.logPath('show', this.params.stattofull)) : (t.logPath('click', this.params.stattofull), t.logPath('show', this.params.stattomin));
                },
                _onSwitcherClick: function(t) {
                    t.preventDefault(), this._sendStatOnClick(), this.toggleMod('state', 'min', 'full'), BEM.channel('i-height-event').trigger('change');
                }
            }, {
                live: function() {
                    this.liveBindTo('arrow', 'click', function(t) {
                        this._onSwitcherClick(t);
                    });
                }
            }), L = $('html, body'), R = home.getData('bridges.counters') || {}, BEM.DOM.decl('bridges', {
                onSetMod: {
                    js: function() {
                        this._totalTime = home.getData('bridges.totalTime'), this._expandedRanges = home.getData('bridges.expandedRanges'), this._serverDate = parseInt(home.getData('bridges.serverDate'), 10), this._inited = !1, this._block = this.findBlockOn('block'), this._prevScrollLeft = 0, this._block.hasMod('state', 'full') && (this._inited = !0, this._initWidth()), this._block.on('state', this.changeThis(this._toggleState)), this._totalTime && (this._scroller = this.findBlockInside('scroller', 'scroller'), this._block.hasMod('state', 'full') && this._scrollToTimeline(), this.elem('scroller').on('scroll', $.throttle(this.changeThis(this._updateScroll), 100)), this._scroller.addScrollStats(R.scroll), $('html').hasClass('i-ua_platform_bada') || this.bindTo('short-names', 'click', this._onShortNamesClick), this._startTimeSync()), this.bindTo('collapsed-title-wrapper title', 'click', function() {
                            return this._block.toggleMod('state', 'full', 'min'), !1;
                        });
                    }
                },
                _initWidth: function() {
                    this._overlayWidth || (this._overlayWidth = this.elem('overlay-content').width(), this._namesWidth = this.elem('names').width(), this._shortNamesWidth = this.elem('short-names').width());
                },
                _toggleState: function(t, e) {
                    'full' === e && (!this._inited && this._totalTime && (this._inited = !0, this.afterCurrentEvent(function() {
                        this._initWidth(), this._scroller.updateSize(), this._syncTime();
                    })), this._scrollToBridges()), home.stat.logPath('resize', R['full' === e ? 'show' : 'hide']);
                },
                _scrollToTimeline: function() {
                    var t, e = this.elem('timeline').position().left + this._namesWidth,
                        i = Math.round(e - (BEM.blocks['i-globalstate'].width() + this._shortNamesWidth) / 2);
                    i > this._overlayWidth || i <= 70 ? i = 0 : this._expandedRanges.length > 1 && (t = 100 * (i + this._shortNamesWidth - this._namesWidth + 50) / (this._overlayWidth - this._namesWidth), this._expandedRanges.some(function(e, n, o) {
                        var s = o[n + 1];
                        if (t > e.right && s && s.left > t) return i = Math.round(s.left * this._overlayWidth / 100), !0;
                    })), this._scroller.scrollTo(i, !1), this._prevScrollLeft = this._scroller.scrollLeft();
                },
                _updateScroll: function() {
                    var t = this._scroller.scrollLeft() > 70;
                    this.toggleMod(this.elem('short-names'), 'visible', 'yes', t);
                },
                _scrollToBridges: function() {
                    var t = this.domElem.offset().top;
                    this._verticalScroll(t);
                },
                _verticalScroll: function(t) {
                    home.getData('i-ua2.data.isMSIE') && L.scrollTop(t), L.animate({
                        scrollTop: t
                    }, 200);
                },
                _onShortNamesClick: function() {
                    this._scroller.scrollTo(0, !0);
                },
                _startTimeSync: function() {
                    this._loadDate = new Date().getTime(), this._block.hasMod('state', 'full') && this._syncTime();
                },
                _syncTime: function() {
                    var t, e;
                    this._block.hasMod('state', 'full') && (t = new Date(), e = this._serverDate + (t - this._loadDate), this.elem('timeline').css('left', this._timeToPercent(e) + '%'), this._scroller.scrollLeft() === this._prevScrollLeft && this._scrollToTimeline(), setTimeout(this.changeThis(this._syncTime), 10000));
                },
                _timeToPercent: function(t) {
                    return ((t - this._totalTime.min) / this._totalTime.length * 100).toFixed(2);
                }
            }), BEM.channel('i-sight').on('news:full', function(t, e) {
                var i = e.find('.swiper__category_selected_yes');
                i && i.length && BEM.blocks['tabs-stat'].sendTabStat(i);
            }), BEM.DOM.decl('sidebar', {
                onSetMod: {
                    state: function() {
                        home.stat.logDOMShow(this.domElem);
                    }
                }
            }, {
                addClickHandler: function(t, e, i, n) {
                    var o = $(e),
                        s = this;
                    o.length ? ((n = n || {}).handler || (n.handler = this._defaultClickHandler), n.turbo && this._preloadOverlay(), this._typeMap[t] = n, o.on('click', e !== i ? i : undefined, function(e) {
                        var i, o, r = $(this),
                            a = n.handler(r);
                        if (a) {
                            if (n.turbo) {
                                a = s._makeTurboHref(a, n);
                                var c = home.parseUrl(a);
                                if (i = r.data('fallback-href') || c.query.text || a, !a) return;
                            }
                            if ((o = r.attr(home.stat.attr)) && r.prop('href') && 0 !== r.data('statlog-redir') && home.stat.logPath('click', o), !n.turbo || !home.getData('sidebar.alternate')) {
                                s._open(t, $.extend({}, n, {
                                    href: a,
                                    fallbackHref: i
                                }));
                                try {
                                    var h;
                                    n.turbo ? (n.urlChecker && n.urlChecker(i) ? (h = home.parseUrl(location.href)).query = {
                                        sidebar: t,
                                        sidebar_href: i
                                    } : (h = home.parseUrl(a)).host = location.host, h = home.makeUrl(h)) : h = location.href, history.replaceState({
                                        fakeHistoryState: !0
                                    }, document.title, location.href), history.pushState({
                                        fakeHistoryState: !0,
                                        sidebar: t,
                                        iframeUrl: a,
                                        fallbackHref: i
                                    }, document.title, h);
                                } catch (l) {}
                                return !1;
                            }
                            s._openAlternate(t, a, i, {
                                event: e
                            });
                        }
                    }), this._initEvents(), this._tryRestoreInitParams()) : this._tryRestoreUrl(t, n);
                },
                _typeMap: {},
                _canRestore: function(t, e) {
                    return !!(t && e && e.turbo) && (!!t.fallbackHref && !(!e.urlChecker || !e.urlChecker(t.fallbackHref)));
                },
                _tryRestoreUrl: function(t, e) {
                    var i = this._initParams;
                    this._canRestore(i, e) && i.name === t && (location.href = i.fallbackHref);
                },
                _makeTurboHref: function(t, e) {
                    return home.view('sidebar__turbo-href', {
                        href: t,
                        turboQuery: e.turboQuery
                    });
                },
                _init: function() {
                    this._initParams = this._getCurrentParams(), this._tryRestoreInitParams(), this._initInactiveReload();
                },
                _tryRestoreInitParams: function() {
                    this._initParams && this._tryRestore(this._initParams) && (this._initParams = null);
                },
                _defaultClickHandler: function(t) {
                    return t.data('sidebar') || t.data('statlog-orig-href') || t.prop('href');
                },
                _getCurrentParams: function() {
                    var t = {},
                        e = home.parseUrl(location.href);
                    if (e.query.sidebar) return t.name = e.query.sidebar, t.fallbackHref = e.query.sidebar_href, t;
                },
                _tryRestore: function(t, e) {
                    var i, n = this._typeMap[t.name];
                    return e = e || {}, !!this._canRestore(t, n) && (!!(i = this._makeTurboHref(t.fallbackHref, n)) && (n && n.turbo && home.getData('sidebar.alternate') ? this._openAlternate(t.name, i, t.fallbackHref, {
                        restore: !0
                    }) : (this._open(t.name, $.extend({}, n, {
                        href: i,
                        fallbackHref: t.fallbackHref
                    }, e)), !0)));
                },
                _open: function(t, e) {
                    this._prevHref = e.href, this._prevName = t, this._initDialog(), this._appendSidebarContents(t, e), this._dialog.show(), home.stat.logPath('show', t + '.sidebar.close'), this._sidebar.setMod('visible', 'yes'), $('body').addClass('body_content_hidden'), home.getData('i-ua2.data.isIOS') && $(document).scrollTop(0);
                },
                _onBackClick: function() {
                    history.back();
                },
                _closeSidebar: function() {
                    this._sidebar && this._prevName && (this._sidebar.delMod('visible'), $('body').removeClass('body_content_hidden'), home.stat.logPath('click', this._prevName + '.sidebar.close'), this._prevName = null, setTimeout(function() {
                        this._dialog.hide(), this._removeIframe();
                    }.bind(this), 100), clearTimeout(this._errorTimeout));
                },
                _retry: function() {
                    this._appendIframe(this._prevHref), this._sidebar.delMod('state');
                },
                _initEvents: function() {
                    this._sidebarInited || (this._sidebarInited = !0, BEM.DOM.win.on('message', function(t) {
                        var e = t.originalEvent,
                            i = e.data;
                        this._$iframe && this._sidebar && this._prevName && e.source === this._$iframe[0].contentWindow && ('pageHeaderReady' === i ? this._sidebar.setMod('header-loaded', 'yes') : 'overlayClose' === i ? this._closeSidebar() : i && 'fallback' === i.action ? this._handleFallback() : i && ('show' === i.type || 'active-document-changed' === i.action) && i.url ? this._handleShow(i) : i && 'navigate-turbo-link' === i.action && this._handleNavigate(i));
                    }.bind(this)), BEM.DOM.win.on('popstate', function() {
                        var t = this._getCurrentState(),
                            e = home.parseUrl(location.href);
                        t.sidebar && t.iframeUrl && t.sidebar in this._typeMap ? t.sidebar !== this._prevName ? this._open(t.sidebar, $.extend(this._typeMap[t.sidebar], {
                            href: t.iframeUrl,
                            fallbackHref: t.fallbackHref
                        })) : t.fixSwipe && t.iframeUrl && (this._appendIframe(t.iframeUrl), this._sidebar.delMod('state')) : '/turbo' === e.path && e.host === location.hostname && e.query.text && !home.getData('sidebar.alternate') ? location.reload() : home.getData('i-ua2.data.isMSIE') ? setTimeout(function() {
                            this._closeSidebar();
                        }.bind(this), 100) : this._closeSidebar();
                    }.bind(this)));
                },
                _handleFallback: function() {
                    this._processTurboFallback();
                },
                _processTurboFallback: function() {
                    var t = this._getCurrentState().fallbackHref;
                    home.stat.logPath('tech', this._prevName + '.sidebar.fallback', {
                        callback: function() {
                            if (t) {
                                var e = home.parseUrl(location.href);
                                e.query = {
                                    sidebar: undefined,
                                    sidebar_href: undefined
                                };
                                try {
                                    history.replaceState({}, document.title, home.makeUrl(e));
                                } catch (n) {}
                                var i = this._typeMap[this._prevName].fallbackUrl;
                                i && (t = i(t)), location.href = t;
                            }
                        }.bind(this),
                        callbackTimeout: 300
                    });
                },
                _handleShow: function(t) {
                    clearTimeout(this._errorTimeout), this._sidebar.hasMod('state', 'loaded') || this._sidebar.setMod('state', 'loaded');
                    var e, i, n = home.parseUrl(t.url),
                        o = this._getCurrentState();
                    if ('/turbo' === n.path) {
                        e = this._typeMap[this._prevName] && this._typeMap[this._prevName].turbo && this._typeMap[this._prevName].urlChecker && n.query.text && this._typeMap[this._prevName].urlChecker(n.query.text), 'active-document-changed' === t.action && (o.fallbackHref = t.orig, o.iframeUrl = t.url), e ? (i = n.query.text, (n = home.parseUrl(location.href)).query = {
                            sidebar: this._prevName,
                            sidebar_href: i
                        }, n.path = '/') : n.host = location.host;
                        try {
                            history.replaceState(o, document.title, home.makeUrl(n));
                        } catch (s) {}
                    }
                    this._frameLoadStart && (home.stat.logPath('tech', this._prevName + '.sidebar.loaded', {
                        customParams: {
                            time: Date.now() - this._frameLoadStart
                        }
                    }), this._frameLoadStart = null);
                },
                _handleNavigate: function(t) {
                    if (t.fixSwipe && t.url) {
                        try {
                            history.replaceState($.extend(this._getCurrentState(), {
                                fixSwipe: 1
                            }), document.title, location.href), history.pushState($.extend(this._getCurrentState(), {
                                fallbackHref: t.orig,
                                iframeUrl: t.url,
                                fixSwipe: 1
                            }), document.title, location.href);
                        } catch (e) {}
                        this._appendIframe(t.url), this._sidebar.delMod('state');
                    } else {
                        this._processFrameStartLoad(), this._sidebar.setMod('state', 'navigate');
                        try {
                            history.replaceState($.extend(this._getCurrentState(), {
                                fallbackHref: t.orig
                            }), document.title, location.href);
                        } catch (e) {}
                    }
                },
                _getCurrentState: function() {
                    var t = {};
                    try {
                        t = history.state || {};
                    } catch (e) {}
                    return t;
                },
                _initDialog: function() {
                    if (!this._dialog) {
                        var t = $('<div class="dialog dialog_type_sidebar dialog_sidebar_yes dialog_scroll_toggle" data-bem="{&quot;dialog&quot;:{}}"></div>');
                        this._dialog = BEM.DOM.append($('.dialog__wrapper'), t).bem('dialog');
                    }
                    return this._dialog;
                },
                _appendSidebarContents: function(t, e) {
                    this._$sidebar && this._$sidebar.remove(), this._$sidebar = $(home.view('sidebar', {
                        mods: {
                            title: e.title ? 'yes' : '',
                            header: e.header || 'mixed'
                        },
                        header: {
                            mods: {
                                theme: e.headerTheme
                            }
                        },
                        name: t,
                        title: e.title
                    })), this._sidebar = this._$sidebar.bem('sidebar'), this._sidebar.bindTo('back', 'click', this._onBackClick.bind(this)), this._sidebar.bindTo('retry', 'click', this._retry.bind(this)), this._dialog.domElem.append(this._$sidebar), this._appendIframe(e.href);
                },
                _removeIframe: function() {
                    this._$iframe && (this._$iframe.remove(), this._$iframe = null);
                },
                _appendIframe: function(t) {
                    var e = this._typeMap[this._prevName];
                    this._removeIframe(), t += (t.indexOf('?') > -1 ? '&' : '?') + 'ncrnd=' + (Math.random() + '').substr(3, 4), e.turbo && (t += '&act=' + Date.now()), this._$iframe = $('<iframe class="sidebar__frame" name="sidebar" height="100%" scrolling="no"></iframe>').appendTo(this._$sidebar.find('.sidebar__content')), this._$iframe.one('load', function() {
                        clearTimeout(this._errorTimeout), this._sidebar.setMod('state', 'loaded');
                    }.bind(this)), this._$iframe.one('error', this._handleIframeError.bind(this)), this._processFrameStartLoad(), this._$iframe.attr('src', t);
                },
                _handleIframeError: function() {
                    this._typeMap[this._prevName].turbo ? this._processTurboFallback() : (this._sidebar.setMod('state', 'retry'), this._removeIframe());
                },
                _processFrameStartLoad: function() {
                    var t = this._typeMap[this._prevName];
                    clearTimeout(this._errorTimeout), this._errorTimeout = setTimeout(this._handleIframeError.bind(this), t.turbo ? home.getData('sidebar.turboTimeout') : 30000), this._frameLoadStart = Date.now();
                },
                _initInactiveReload: function() {
                    var t, e = home.getData('sidebar.inactiveReloadTimeout');
                    e && BEM.channel('sys').on('visibilitychange', function(i, n) {
                        n.hidden ? 'news' === this._prevName && (t = Date.now()) : n.hidden || (t && Date.now() - t > e ? location.href = '/' : t = null);
                    }, this);
                }
            }), $(function() {
                BEM.blocks.sidebar._init();
            }), BEM.DOM.decl('sidebar', {}, {
                _preloadOverlay: function() {
                    if (home.getData('sidebar.alternate') && !this._preloadedAlternate) {
                        this._preloadedAlternate = !0, window.Ya = window.Ya || {}, window.Ya.turboOverlayLoaded = this._initAlternate.bind(this);
                        var t = document.createElement('script');
                        t.id = 'overlay-script';
                        var e = home.getData('sidebar.alternateBase');
                        e && t.setAttribute('turbo-url', e), t.setAttribute('turbo-fallback-timeout', home.getData('sidebar.turboTimeout', 30000)), t.src = 'https://yastatic.net/s3/turbo-static/overlay/v1.3.0/overlay.js', document.head.appendChild(t);
                    }
                },
                _initAlternate: function() {
                    var t = window.Ya.turboOverlay;
                    t.onOverlayOpen = function() {
                        $('body').addClass('body_sidebar_no body_dialog_shown body_content_hidden');
                    }, t.onOverlayClose = function() {
                        $('body').removeClass('body_sidebar_no body_dialog_shown body_content_hidden'), home.stat.logPath('click', this._prevName + '.sidebar.close'), this._prevName = null;
                    }.bind(this), t.onOverlayFallback = function(t) {
                        return home.stat.logPath('tech', this._prevName + '.sidebar.fallback', {
                            callback: function() {
                                var e = t.originalUrl,
                                    i = this._typeMap[this._prevName].fallbackUrl;
                                i && (e = i(e)), t.callback(e);
                            }.bind(this),
                            callbackTimeout: 300
                        }), {
                            preventDefault: !0
                        };
                    }.bind(this);
                    var e = this._onUrlChange.bind(this);
                    t.onOverlayNavigate = e, t.onOverlayRelocate = e, t.onOverlayNewFrameOpened = e, t.onOverlayContentShown = function() {
                        return this._frameLoadStart && (home.stat.logPath('tech', this._prevName + '.sidebar.loaded', {
                            customParams: {
                                time: Date.now() - this._frameLoadStart
                            }
                        }), this._frameLoadStart = null), e.apply(this, arguments);
                    }.bind(this), t.onOverlayActiveDocumentChanged = e, this._tryRestoreInitParams();
                },
                _onUrlChange: function(t) {
                    var e, i = t.to || t.displayUrl;
                    if (i) {
                        var n = home.parseUrl(i);
                        if (n.query.text) {
                            var o = n.query.text,
                                s = this._typeMap[this._prevName];
                            return s && s.urlChecker && s.urlChecker(o) ? (e = home.parseUrl(location.href)).query = {
                                sidebar: this._prevName,
                                sidebar_href: o
                            } : (e = home.parseUrl(i)).host = location.host, {
                                displayUrl: home.makeUrl(e)
                            };
                        }
                    }
                },
                _openAlternate: function(t, e, i, n) {
                    if (window.Ya.turboOverlay) {
                        var o, s = this._typeMap[t];
                        if (!s) return;
                        return s.urlChecker && s.urlChecker(i) ? (o = home.parseUrl(location.href)).query = {
                            sidebar: t,
                            sidebar_href: i
                        } : (o = home.parseUrl(e)).host = location.host, o = home.makeUrl(o), this._prevName = t, window.Ya.turboOverlay.open({
                            urls: [{
                                frameUrl: e,
                                displayUrl: o,
                                originalUrl: i
                            }],
                            title: s.title
                        }, !(n && n.restore)), home.stat.logPath('show', t + '.sidebar.close'), this._frameLoadStart = Date.now(), n && n.event && n.event.preventDefault(), !0;
                    }
                }
            }), BEM.DOM.decl({
                block: 'dialog',
                modName: 'sidebar',
                modVal: 'yes'
            }, {
                onSetMod: {
                    visibility: function(t, e) {
                        this.__base.apply(this, arguments), $('body').toggleClass('body_sidebar_no', !!e);
                    }
                }
            }), BEM.DOM.decl({
                block: 'dialog',
                modName: 'scroll',
                modVal: 'toggle'
            }, {
                onSetMod: {
                    visibility: {
                        visible: function() {
                            this._contentScrollTop = BEM.DOM.win.scrollTop(), this.__base.apply(this, arguments), $('.content').scrollTop(this._contentScrollTop);
                        },
                        '': function() {
                            $('.content').scrollTop(0), home.getData('i-ua2.data.isIOS') && BEM.DOM.win.scrollTop(this._contentScrollTop + 1), this.__base.apply(this, arguments), BEM.DOM.win.scrollTop(this._contentScrollTop);
                        }
                    }
                }
            }), BEM.afterCurrentEvent(function() {
                BEM.blocks.sidebar.addClickHandler('news', '.news_exp-sidebar_yes', '.news__item:not(.news__item_type_promo):not([data-turbooff])', {
                    header: 'our',
                    title: home.l10n('news.geotouch.title'),
                    turbo: !0,
                    urlChecker: function(t) {
                        var e = home.parseUrl(t);
                        return /^(m\.)?(news\.)?yandex\.(ru|ua|kz|by|az|com\.am|com\.ge|co\.il|kg|lv|lt|md|tj|tm|uz|fr|ee|com)$/.test(e.host);
                    }
                });
            }),
            function() {
                var t = null,
                    e = $.Deferred(),
                    i = !1;
                try {
                    t = history.state || null;
                } catch (r) {}
                window.addEventListener('popstate', function(n) {
                    !i && n.state && (t = n.state, i = !0, e.resolve());
                }, !0), setTimeout(function() {
                    !i && t && (i = !0, e.resolve());
                }, 0);
                var n = function() {
                        return t || {};
                    },
                    o = function(e) {
                        try {
                            history.replaceState(e, document.title), t = e;
                        } catch (r) {}
                    },
                    s = function(t, e) {
                        var i, n = Date.now(),
                            s = !1;
                        for (var r in t) t.hasOwnProperty(r) && (i = t[r]) && i.value && i.timestamp && (i.timestamp + (i.lifetime || 900000) > n ? (i.timestamp = n, s = !0) : (s = !0, delete t[r]));
                        e && !s || o(t);
                    };
                BEM.decl('i-history-storage', {}, {
                    getItem: function(t) {
                        var e = n()[t];
                        return e && e.value;
                    },
                    setItem: function(t, e, i) {
                        var o, r = n();
                        o = {
                            value: e
                        }, i !== Infinity && (o.timestamp = Date.now()), i && (o.lifetime = i), r[t] = o, s(r);
                    },
                    removeItem: function(t) {
                        var e = n();
                        e[t] && (delete e[t], s(e));
                    },
                    clear: function() {
                        o({});
                    },
                    ready: e
                }), e.then(function() {
                    s(n(), !0);
                });
            }(), BEM.DOM.decl({
                block: 'swiper',
                modName: 'saved',
                modVal: 'yes'
            }, {
                onSetMod: {
                    js: {
                        inited: function() {
                            var t = this;
                            this.__base.apply(this, arguments), this.afterCurrentEvent(function() {
                                BEM.blocks['i-history-storage'].ready.then(function() {
                                    t.restoreSavedCategory();
                                });
                            });
                        }
                    }
                },
                onElemSetMod: {
                    category: {
                        selected: {
                            yes: function(t) {
                                var e = t.data('key');
                                this.__base.apply(this, arguments), BEM.blocks['i-history-storage'].setItem(this.params.dataKey + '.category', e), BEM.blocks['i-history-storage'].setItem('swiper.saved', !0);
                            }
                        }
                    }
                },
                restoreSavedCategory: function() {
                    var t = BEM.blocks['i-history-storage'].getItem(this.params.dataKey + '.category');
                    return !!t && this.setSelectedCategory(t, !1);
                }
            }, {
                live: function() {
                    return this.__base.apply(this, arguments), !BEM.blocks['i-history-storage'].getItem('swiper.saved');
                }
            }),
            function() {
                var t = $('html').hasClass('i-ua_swipe_yes');
                BEM.DOM.decl({
                    block: 'swiper',
                    modName: 'different',
                    modVal: 'yes'
                }, {
                    updateHeight: function() {
                        this._initPagesHeight(), this.setMod('animated', 'yes'), t && this.elem('pages').height(this.getCurrentPage().height() + this.elem('inner-static').height());
                    },
                    setData: function() {
                        this.__base.apply(this, arguments), this.afterCurrentEvent(function() {
                            this.updateHeight();
                        });
                    },
                    scrollToCategory: function() {
                        this.__base.apply(this, arguments), this.setMod('animated', 'yes'), this.updateHeight();
                    }
                });
            }(), BEM.DOM.decl({
                block: 'swiper',
                modName: 'load-data',
                modVal: 'yes'
            }, {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.__base.apply(this, arguments), this._data = home.getData(this.params.dataKey + '.data'), this._externalDataLoaded = !1;
                        }
                    }
                },
                onElemSetMod: {
                    category: {
                        selected: {
                            yes: function() {
                                this.__base.apply(this, arguments), this._hasLoadError || this._loadExternalData();
                            }
                        }
                    }
                },
                _createPage: function(t) {
                    var e, i = this._getPageData(t),
                        n = this._mapCategoryKeyToIndex(t);
                    return i && i.length ? this.__base.apply(this, arguments) : (this._externalDataLoaded ? e = this._createLoadErrorPageContents(!0) : (e = this._createLoadContents(), this._loadExternalData()), home.view('swiper__page', {
                        items: home.view('swiper__page-load', {
                            height: this.elem('pages').height(),
                            content: e
                        }),
                        left: 100 * n + '%',
                        key: t
                    }));
                },
                _onCategoriesScroll: function() {
                    this.__base.apply(this, arguments), this._hasLoadError || this._loadExternalData();
                },
                _loadExternalData: function() {
                    var t = this.params.data,
                        e = t.url,
                        i = t.id;
                    this._loadInProgress || !e || this._externalDataLoaded || (this._loadInProgress = !0, this.afterCurrentEvent(function() {
                        var t = new Date();
                        $.ajax({
                            url: e,
                            timeout: this.__self.dataLoadTimeout,
                            dataType: 'json',
                            context: this
                        }).then(function(e) {
                            if (e && e.block) {
                                home.stat.logPath('timing', this.params.statKey + '_request=' + (new Date() - t)), this._loaderShowTimestamp && home.stat.logPath('timing', this.params.statKey + '_user_wait=' + (new Date() - this._loaderShowTimestamp));
                                for (var n = 0; n < e.block.length; ++n)
                                    if (e.block[n].id === i) return void this._processExternalData(e.block[n].data);
                            }
                            home.error.logError({
                                block: this.getMod('load-type'),
                                message: 'Incorrect data'
                            }), this._processDataLoadError();
                        }, function(t, e, i) {
                            home.error.logAjaxError({
                                block: this.getMod('load-type'),
                                message: '_loadExternalData: ajax',
                                source: 'morda_api'
                            }, t, e, i), this._processDataLoadError();
                        }).always(function() {
                            this._loadInProgress = !1;
                        });
                    }));
                },
                _showLoadProgress: function() {
                    var t = this;
                    this.findElem('page-load').each(function() {
                        $(this).html(t._createLoadContents());
                    });
                },
                _createLoadContents: function() {
                    return home.view('swiper__loader', {
                        stat: this.params.statKey + '.loader'
                    });
                },
                _createLoadErrorPageContents: function(t) {
                    var e, i;
                    return t ? e = this.params.statKey + '.missing' : i = home.view('button', {
                        mods: {
                            theme: 'swiper-retry'
                        },
                        mix: 'swiper__load-error-retry',
                        content: home.l10n('loading.retry'),
                        attrs: {
                            'data-statlog': this.params.statKey + '.retry'
                        },
                        stat: ''
                    }), home.view('swiper__load-error', {
                        stat: e,
                        button: i
                    });
                },
                _showLoadError: function() {
                    var t = this;
                    this.findElem('page-load').each(function() {
                        $(this).html(t._createLoadErrorPageContents());
                    }), home.stat.logDOMShow(this.getCurrentPage(), {
                        visibilityCheck: !1
                    });
                },
                _showLoadedItems: function() {
                    var t, e = this,
                        i = [];
                    t = this.getCurrentPage().find('.swiper__page-load').length > 0, this.findElem('page-load').each(function() {
                        var t, n = $(this).closest('.swiper__page'),
                            o = n.attr('data-key');
                        e._getPageData(o) ? (t = $(e._createPage(o)), n.replaceWith(t), i.push(t)) : (n.find('.swiper__page-load').html(e._createLoadErrorPageContents(!0)), home.error.logError({
                            block: e.params.statKey,
                            message: 'missing data (' + o + ')'
                        }));
                    }), this._swipe || this._updatePagesAroundVisibility(), t && (this.updateHeight(), this._onCategoryShow(this.getSelectedCategory())), i.length && i.forEach(function(t) {
                        this.trigger('createPage', {
                            page: t,
                            hasLoader: !1
                        });
                    }, this);
                },
                _processExternalData: function(t) {
                    $.extend(!0, this._data, t), this._hasLoadError = !1, this._externalDataLoaded = !0, this._showLoadedItems();
                },
                _processDataLoadError: function() {
                    this._hasLoadError = !0, this._showLoadError();
                },
                _onCategoryShow: function() {
                    var t, e = this._getPageData(this._currentCategoryKey);
                    e && e.length ? this.__base.apply(this, arguments) : this.params.disablePageStat || (t = this.findElem('page').filter('[data-key="' + this._currentCategoryKey + '"]'), home.stat.logDOMShow(t, {
                        visibilityCheck: !1
                    }), t.find('.loader').length && (this._loaderShowTimestamp = new Date()));
                }
            }, {
                dataLoadTimeout: 10000,
                live: function() {
                    var t = this.__base.apply(this, arguments);
                    return this.liveBindTo('load-error-retry', 'click', function() {
                        this._showLoadProgress(), this._loadExternalData();
                    }), $('.swiper_load-data_yes').each(function() {
                        var t = $(this),
                            e = t.data('bem').swiper.dataKey;
                        BEM.channel('i-sight').onFirst(e + ':full', function() {
                            t.bem('swiper')._loadExternalData();
                        });
                    }), t;
                }
            }), BEM.DOM.decl({
                block: 'swiper',
                modName: 'load-type',
                modVal: 'news'
            }, {
                _processExternalData: function(t) {
                    var e = home.getData('news.fallbackData.personal');
                    if (t && Array.isArray(t.items)) {
                        e = [], this.params.iconsExp && t.items.forEach(function(t) {
                            Array.isArray(t.obj.annot_docs) && t.obj.annot_docs[0] && t.obj.annot_docs[0].source_name && (t.agency_logo = t.obj.annot_docs[0].logo_square ? t.obj.annot_docs[0].logo_square + '/logo-square' : undefined, t.agency_name = t.obj.annot_docs[0].source_name);
                        });
                        var i = this.params.iconsExp;
                        t.items.forEach(function(t) {
                            e.push({
                                full: t.obj.title,
                                href: t.obj.url,
                                ishot: t.obj.is_hot,
                                turbo_off: !t.obj.turbo,
                                tabKey: 'personal',
                                agency_logo: i ? t.agency_logo : '',
                                agency_name: i ? t.agency_name : ''
                            });
                        }, this);
                    }
                    this.__base({
                        personal: e
                    });
                },
                _loadExternalData: function() {
                    var t = this.params.data.url;
                    'personal' !== this._currentCategoryKey || this._loadInProgress || this._externalDataLoaded || (this._loadInProgress = !0, this.afterCurrentEvent(function() {
                        $.ajax({
                            url: t,
                            dataType: 'json',
                            context: this,
                            xhrFields: {
                                withCredentials: !0
                            }
                        }).then(function(t) {
                            this._processExternalData(t);
                        }, function(t, e, i) {
                            home.error.logAjaxError({
                                block: this.getMod('load-type'),
                                message: '_loadExternalData: ajax',
                                source: 'morda_api'
                            }, t, e, i), this._processExternalData(null);
                        }).always(function() {
                            this._loadInProgress = !1;
                        });
                    }));
                }
            }), A = 'Error dealing with local storage: ', BEM.DOM.decl('zen', {
                onSetMod: {
                    js: function() {
                        this._initBlock();
                        var t = this._getItemsFromLs();
                        t && t.data && t.stat && t.data.items && t.stat.lastCardSent < Math.round(t.data.items.length / 2) && (this.data = t.data, this.stat = t.stat), this.data ? (this.fromLS = !0, this._processData(this.data)) : this._loadData().done(this._processData.bind(this));
                    }
                },
                _initBlock: function() {
                    home.stat.logPath('show', this.params.statRoot + '.init'), this.$cardContainer = this.elem('list-scroller'), this.imageloader = this.domElem.bem('imageloader'), this.scroller = this.findBlockInside('list-scroller', 'scroller'), this._lsKeys = {
                        TTL_PREFIX: 'home:' + this.params.blockName + '-ttl-',
                        DATA_PREFIX: 'home:' + this.params.blockName + '-data-',
                        STAT_PREFIX: 'home:' + this.params.blockName + '-stat-'
                    }, this.stat = null, this.data = null, this.statBulkUrl = '', this.scrollSent = !1, this._debounceZenStatSend = $.debounce(this._zenStatSend.bind(this), 600), this.lsKeyTTL = this._lsKeys.TTL_PREFIX + this.params.login, this.lsKeyData = this._lsKeys.DATA_PREFIX + this.params.login, this.lsKeyStat = this._lsKeys.STAT_PREFIX + this.params.login;
                },
                _countFirstCards: function() {
                    this.imageloader.on('sightChange', this._onCardChange.bind(this)), this._onCardChange(null, this.imageloader.getAlreadyShownCards());
                },
                _onCardChange: function(t, e) {
                    this._countCardsInSight(e);
                },
                _attachAnalytics: function() {
                    home.stat.logDOMShow(this.elem('title'), {
                        visibilityCheck: !1
                    }), this.stat.ALL_SENT || this._countFirstCards();
                },
                _loadData: function() {
                    var t = this.params.zenUrl;
                    return $.ajax({
                        url: t,
                        xhrFields: {
                            withCredentials: !0
                        },
                        timeout: 30000
                    }).fail(function(e, i, n) {
                        home.stat.logPath('show', this.params.statRoot + '.error'), home.error.logAjaxError({
                            block: 'zen',
                            message: '_loadData: ajax',
                            url: t,
                            source: 'zen'
                        }, e, i, n), this._hideBlock();
                    }.bind(this));
                },
                _getItemsFromLs: function() {
                    if (home.disabledLS) return null;
                    var t, e;
                    try {
                        (t = JSON.parse(home.localStorage.getItem(this.lsKeyTTL))) && (e = Number(t.ttl));
                    } catch (i) {
                        this._logEvent(A + i);
                    }
                    if (!e || e < new Date().getTime()) return null;
                    try {
                        return {
                            data: JSON.parse(home.localStorage.getItem(this.lsKeyData)),
                            stat: JSON.parse(home.localStorage.getItem(this.lsKeyStat))
                        };
                    } catch (i) {
                        return this._logEvent(A + i), null;
                    }
                },
                _putToLS: function(t, e) {
                    home.disabledLS || home.localStorage.setItem(e, JSON.stringify(t));
                },
                _clearLS: function() {
                    if (!home.disabledLS) try {
                        home.localStorage.removeItem(this.lsKeyTTL), home.localStorage.removeItem(this.lsKeyData), home.localStorage.removeItem(this.lsKeyStat);
                    } catch (t) {
                        this._logEvent(A + t);
                    }
                },
                _getDataError: function(t) {
                    var e;
                    return t && t.items && t.items.length && t.stats && t.stats.bulk ? '' : (t ? t.items ? t.items.length ? t.stats && t.stats.bulk || (e = 'emptystats') : e = 'emptyitems' : e = 'noitems' : e = 'nodata', e);
                },
                _getItemsError: function(t, e) {
                    var i;
                    return 0 === t.length ? (e.items[0] ? e.items[0].title ? e.items[0].feed_link ? e.items[0].domain_title ? e.items[0].bulk_params ? e.items[0].stat_events && e.items[0].stat_events.show || (i = 'nostat_events') : i = 'nobulkparams' : i = 'nodomain' : i = 'nofeed_link' : i = 'notitle' : i = 'falsyitem', i) : '';
                },
                _validateDataItem: function(t) {
                    return !!(t && t.title && t.feed_link && t.domain_title && t.bulk_params && t.stat_events && t.stat_events.show);
                },
                _processData: function(t) {
                    this.setMod(this.elem('loader'), 'visible', 'false');
                    var e = this._getDataError(t);
                    if (e) return home.stat.logPath('show', this.params.statRoot + '.error'), this._hideBlock(), this._clearLS(), void this._logEvent('Data error: ' + e);
                    if (this.data = t, this.statPrefix = this.params.statRoot + '.' + (this.data && this.data.context && this.data.context.ice_start ? 'ice' : 'personal') + '.', this.statBulkUrl = this.data.stats.bulk, this.data.bare_feed_link) {
                        var i = this.elem('title');
                        i.attr('href', this.data.bare_feed_link).attr('target', '_blank').attr('rel', 'noopener').attr('data-statlog', this.statPrefix + 'title').replaceWith(i[0].outerHTML.replace('<div', '<a').replace('div>', 'a>')), this.dropElemCache('title');
                    }
                    var n = this.params.defaultCardsNumber || 8,
                        o = this.data.items.length,
                        s = this.fromLS ? 'localstorage' : 'api';
                    o !== n && (this._logEvent('Wrong cards number from ' + s + '. Got ' + o + ' instead of ' + n), o > n && (this.data.items = this.data.items.slice(0, n)));
                    var r = this.data.items.filter(this._validateDataItem);
                    if (this._getItemsError(r, this.data)) return home.stat.logPath('show', this.params.statRoot + '.error'), this._hideBlock(), this._clearLS(), void this._logEvent('Items error: ' + e);
                    this.data.items = r, this.params.dynamicTitle && (this.data.themeName = r && r.length && r[0].source && r[0].source.title && r[0].source.title.toLowerCase()), this._updateCardList(this.data), this.setMod(this.$cardContainer, 'visible', 'true'), this.scroller.updateSize(), this.scroller.addScrollStats(this.statPrefix + 'scroll', this.elem('item').width() / 2), this.stat || (this.stat = {
                        lastCardSent: 0,
                        lastCardViewed: 0
                    }), (!this.fromLS || o > n) && (this._putToLS(this.data, this.lsKeyData), this._putToLS({
                        ttl: new Date().getTime() + 1000 * (this.data.ttl || 3600)
                    }, this.lsKeyTTL), this._putToLS(this.stat, this.lsKeyStat)), this._attachAnalytics(), home.stat.logPath('show', this.params.statRoot + '.loaded');
                },
                _updateCardList: function(t) {
                    if (this.data.themeName) {
                        var e = this.params.dynamicTitle.replace('%s', this.data.themeName);
                        this.domElem.find('.block__title-text').text(e), this.domElem.attr('aria-label', e);
                    }
                    this._appendCards(t.items), this.imageloader.updateItems();
                },
                _appendCards: function(t) {
                    var e, i, n = this.params.extendedLog,
                        o = this.params.isDarkTheme,
                        s = this.statPrefix;
                    e = t.map(function(t, e) {
                        return home.view('zen__item', {
                            item: t,
                            index: e,
                            extendedLog: n,
                            isDarkTheme: o,
                            statPrefix: s
                        });
                    }), i = home.view('enrich-list-with-promo', {
                        list: e,
                        promo: home.getData('zen.loginPromoCard')
                    });
                    var r = this.params.bro;
                    r && (i += home.view('zen__bro-item', {
                        attrs: {
                            href: r.link,
                            'data-statlog': this.statPrefix + 'card.bro'
                        },
                        image: {
                            'data-image': r.background
                        },
                        logo: {
                            'data-image': JSON.stringify(r.logoSrc)
                        },
                        phone: {
                            'data-image': r.phoneSrc
                        }
                    })), this.data.bare_feed_link && (i += home.view('zen__more-item', {
                        attrs: {
                            href: this.data.bare_feed_link,
                            target: '_blank',
                            rel: 'noopener',
                            'data-statlog': this.statPrefix + 'card.more'
                        },
                        logo: {
                            'data-image': JSON.stringify(this.params.logoSrc)
                        },
                        title: r ? home.l10n('mobile.zen.more-short') : home.l10n('mobile.zen.more')
                    })), BEM.DOM.append(this.$cardContainer, i);
                },
                _logEvent: function(t) {
                    this.params.logDisabled || home.error.logError({
                        block: 'zen',
                        message: t
                    });
                },
                _hideBlock: function() {
                    this.setMod('mode', 'hidden');
                },
                _countCardsInSight: function(t) {
                    !this.stat.ALL_SENT && t && (this.stat.lastCardViewed >= t || (this.stat.lastCardViewed = Math.min(t, this.data.items.length), this._debounceZenStatSend()));
                },
                _zenStatSend: function() {
                    if (!(this.stat.ALL_SENT || this.stat.lastCardViewed <= this.stat.lastCardSent)) {
                        for (var t = [], e = this.stat.lastCardSent + 1; e <= this.stat.lastCardViewed; e++) t.push(this.data.items[e - 1]);
                        this._logZenEvent(t.map(function(t) {
                            return {
                                event: t.stat_events.show,
                                data: t.bulk_params
                            };
                        })), this.stat.lastCardSent = this.stat.lastCardViewed, this.stat.ALL_SENT = this.stat.lastCardSent === this.data.items.length, this._putToLS(this.stat, this.lsKeyStat);
                    }
                },
                _logZenEvent: function(t) {
                    return $.ajax({
                        method: 'POST',
                        url: this.statBulkUrl,
                        timeout: 30000,
                        xhrFields: {
                            withCredentials: !0
                        },
                        data: JSON.stringify({
                            stats: Array.isArray(t) ? t : [t]
                        }),
                        context: this
                    }).fail(function(t, e, i) {
                        home.error.logAjaxError({
                            block: 'zen',
                            message: '_logZenEvent: ajax',
                            url: this.statBulkUrl,
                            source: 'zen_stat'
                        }, t, e, i);
                    });
                }
            }, {
                live: function() {
                    return this.liveBindTo('item-link title', 'click', function() {
                        this._clearLS();
                    }), this.liveBindTo('item-link', 'click', function(t) {
                        var e = t.data.domElem.parent().index('.zen__item'),
                            i = this.data.items[e];
                        i && i.stat_events.click && this._logZenEvent({
                            event: i.stat_events.click,
                            data: i.bulk_params
                        });
                    }), !1;
                }
            }), BEM.channel('i-sight').on('login-promo-card:full', function(t, e) {
                var i = e.data('show-url');
                i && (new Image().src = i);
            }), BEM.DOM.decl('login-promo-card', {}, {
                live: function() {
                    this.liveBindTo('click', function(t) {
                        var e = this.domElem.attr('href'),
                            i = this.domElem.data('close-url');
                        home.sendBkClose(t, i, e);
                    });
                }
            }),
            function() {
                function t(t) {
                    var e = '#' === t.charAt(0) ? t.slice(1) : t,
                        i = 6 === e.length ? [e.slice(0, 2), e.slice(2, 4), e.slice(4, 6)] : [e.slice(0, 1) + e.slice(0, 1), e.slice(1, 2) + e.slice(1, 2), e.slice(2, 3) + e.slice(2, 3)];
                    return {
                        r: (i = i.map(function(t) {
                            return parseInt(t, 16);
                        }))[0],
                        g: i[1],
                        b: i[2]
                    };
                }

                function e(t) {
                    var e, i, n = t.r / 255,
                        o = t.g / 255,
                        s = t.b / 255,
                        r = Math.max(n, o, s),
                        a = Math.min(n, o, s),
                        c = (r + a) / 2;
                    if (r === a) e = i = 0;
                    else {
                        var h = r - a;
                        switch (i = c > 0.5 ? h / (2 - r - a) : h / (r + a), r) {
                            case n:
                                e = (o - s) / h + (o < s ? 6 : 0);
                                break;
                            case o:
                                e = (s - n) / h + 2;
                                break;
                            case s:
                                e = (n - o) / h + 4;
                        }
                        e /= 6;
                    }
                    return {
                        h: e,
                        s: i,
                        l: c
                    };
                }

                function i(t) {
                    var e, i, n, o = t.h,
                        s = t.s,
                        r = t.l;
                    if (0 === s) e = i = n = r;
                    else {
                        var a = function(t, e, i) {
                                return i < 0 && (i += 1), i > 1 && (i -= 1), i < 1 / 6 ? t + 6 * (e - t) * i : i < 0.5 ? e : i < 2 / 3 ? t + (e - t) * (2 / 3 - i) * 6 : t;
                            },
                            c = r < 0.5 ? r * (1 + s) : r + s - r * s,
                            h = 2 * r - c;
                        e = a(h, c, o + 1 / 3), i = a(h, c, o), n = a(h, c, o - 1 / 3);
                    }
                    return {
                        r: Math.round(255 * e),
                        g: Math.round(255 * i),
                        b: Math.round(255 * n)
                    };
                }

                function n(t) {
                    return 1 === t.length && (t = '0' + t), t;
                }

                function o(t, n) {
                    return function(t, n, o) {
                        var s = e(t);
                        return s[n] += 'l' === n && o > 0 ? (1 - s.l) * o / 100 : s[n] * (o / 100), i(s);
                    }(t, 'l', n);
                }

                function s() {
                    return 1 === this.opacity ? '#' + n(this.rgb.r.toString(16)) + n(this.rgb.g.toString(16)) + n(this.rgb.b.toString(16)) : 'rgba(' + this.rgb.r + ',' + this.rgb.g + ',' + this.rgb.b + ',' + Number(this.opacity.toFixed(2)) + ')';
                }
                home.color = function(n) {
                    return {
                        rgb: t(n),
                        get hsl() {
                            return e(this.rgb);
                        },
                        opacity: 1,
                        toString: s,
                        lighter: function(t) {
                            return this.rgb = o(this.rgb, t), this;
                        },
                        setOpacity: function(t) {
                            return this.opacity = t, this;
                        },
                        setHsl: function(t) {
                            return this.rgb = i(t), this;
                        }
                    };
                }, home.color.parseHex = t, home.color.rgbToHsl = e, home.color.hslToRgb = i;
            }(), j = $('html').hasClass('i-ua_inlinesvg_yes'), BEM.DOM.decl('imageloader', {
                onSetMod: {
                    js: function() {
                        this._cardsInited = !1, this._cache = {};
                    },
                    visible: {
                        yes: function() {
                            this._processBeforeShowFirstCards();
                        }
                    }
                },
                updateItems: function() {
                    this._cardsInited = !1, this._unbindEvents(), this.hasMod('visible', 'yes') && this._processBeforeShowFirstCards();
                },
                _unbindEvents: function() {
                    this._scroller && this.unbindFrom(this._scroller, 'scroll'), this.unbindFromWin('orientationchange resize');
                },
                _processBeforeShowFirstCards: function() {
                    if (!this._cardsInited) {
                        if (this._cardsInited = !0, !this._scroller) {
                            var t = this.elem('scroller');
                            t.length && (this._scroller = t);
                        }
                        this._scroller && this._loadFirstCards();
                    }
                },
                _scrollLeft: function() {
                    return this._scroller && this._scroller.prop('scrollLeft');
                },
                _loadFirstCards: function() {
                    var t = this._scroller.find('.imageloader__card').eq(0),
                        e = this._scrollLeft();
                    this._throttleCheckHorizontal = home.throttle(this._checkHorizontal.bind(this), 200), this.bindTo(this._scroller, 'scroll', this._throttleCheckHorizontal), this.bindToWin('orientationchange resize', this._throttleCheckHorizontal), t.length && (this._leftOffset = t.offset().left + e - this._scroller.offset().left), this._itemWidth = t.outerWidth() + parseInt(t.css('margin-right'), 10), this._loadCards(e);
                },
                _checkHorizontal: function() {
                    this._scroller && this._loadCards(this._scrollLeft());
                },
                _loadCards: function(t) {
                    var e = this.domElem.outerWidth() - this._leftOffset + t + (t ? 150 : 50),
                        i = this._getViewedCards(e, 0);
                    this._startLoad(i);
                },
                _getViewedCards: function(t, e) {
                    var i = t / this._itemWidth;
                    return i = i % 1 < e ? Math.floor(i) : Math.ceil(i), this._getLeftCards(i);
                },
                _getLeftCards: function(t) {
                    var e = this._scroller.find('.imageloader__card');
                    return e.length === t && this._unbindEvents(), e.slice(0, t);
                },
                _loadImage: function(t, e) {
                    var i, n = this._cache,
                        o = function() {
                            t.css('background-image', 'url("' + e + '")').removeClass('imageloader__image_loaded_no').addClass('imageloader__image_loaded_yes');
                        };
                    e && (n[e] || e.indexOf('data:image/') > -1 ? o() : ((i = new Image()).onload = function() {
                        n[e] = !0, o();
                    }, i.src = e));
                },
                _selectFromDPI: function(t) {
                    var e = [];
                    for (var i in t) t.hasOwnProperty(i) && e.push(i);
                    e = e.sort().reverse();
                    for (var n = 0; n < e.length; ++n)
                        if (this.__self._getPixelRatio() >= e[n]) return t[e[n]];
                    return t[e[e.length - 1]];
                },
                _selectFromSVG: function(t) {
                    return j && t.svg ? t.svg : t.png;
                },
                _selectImage: function(t, e) {
                    for (var i = t; i && 'object' == typeof i;) i = i.png || i.svg ? this._selectFromSVG(i) : this._selectFromDPI(i);
                    return i || (e[0].style.backgroundImage.match(this.__self._STYLE_TO_URL_REGEX) || [])[1];
                },
                _startLoad: function(t) {
                    var e = this;
                    t.each(function() {
                        var t = $(this);
                        if (!t.data('loaded')) {
                            var i = t.hasClass('imageloader__image') ? t : t.find('.imageloader__image');
                            t.data('loaded', !0), i.each(function() {
                                var t = $(this),
                                    i = t.data('image'),
                                    n = e._selectImage(i, t);
                                n ? e._loadImage(t, n) : t.removeClass('imageloader__image_loaded_no').addClass('imageloader__image_viewed_yes');
                            });
                        }
                    });
                }
            }, {
                _STYLE_TO_URL_REGEX: /url\(['"]?(.+?)["']?\)/,
                _getPixelRatio: function() {
                    if (!this._pixelRatio) try {
                        this._pixelRatio = window.devicePixelRatio || 1;
                    } catch (t) {
                        this._pixelRatio = 1;
                    }
                    return this._pixelRatio;
                },
                live: !0
            }), BEM.channel('i-sight').on('imageloader:before', function(t, e) {
                e.bem('imageloader').setMod('visible', 'yes');
            }), BEM.DOM.decl('imageloader', {
                _scrollLeft: function() {
                    return this._scroller && this._scroller.bem('scroller').scrollLeft();
                }
            }), BEM.DOM.decl({
                block: 'imageloader',
                modName: 'tracking',
                modVal: 'yes'
            }, {
                onSetMod: {
                    'full-visible': {
                        yes: function() {
                            this._calcTrackingCardsOnScroll(this._lastOffsetLeft || 0);
                        }
                    }
                },
                getAlreadyShownCards: function() {
                    return this._lastCard;
                },
                _loadFirstCards: function() {
                    this._lastCard = 0, this.__base.apply(this, arguments);
                },
                _loadCards: function(t) {
                    this.__base.apply(this, arguments), this.hasMod('full-visible', 'yes') && this._calcTrackingCardsOnScroll(t);
                },
                _calcTrackingCardsOnScroll: function(t) {
                    if (this._lastOffsetLeft = t, this._leftOffset) {
                        var e = this.domElem.outerWidth() - this._leftOffset + t,
                            i = this._getViewedCards(e, 0.8);
                        this._processViewedCardsInSight(i);
                    }
                },
                _processViewedCardsInSight: function(t) {
                    if (!(t.length <= this._lastCard)) {
                        for (var e = this._lastCard; e < t.length; ++e) home.stat.logDOMShow(t.eq(e), {
                            visibilityCheck: !1,
                            precise: !0
                        });
                        this.trigger('sightChange', t.length), this._lastCard = t.length;
                    }
                }
            }), BEM.channel('i-sight').on('imageloader_tracking_yes:full', function(t, e) {
                e.bem('imageloader').setMod('full-visible', 'yes');
            }), BEM.DOM.decl('stocks', {
                onSetMod: {
                    js: function() {
                        this.bindTo('short-more-inner title', 'click', this._toggle);
                    }
                },
                _toggle: function() {
                    var t = 'full' === this.getMod('state') ? 'min' : 'full',
                        e = home.getData('stocks.stateUrl'),
                        i = e && e[t],
                        n = home.getData('stocks.counters.' + t);
                    return home.stat.logDOMShow(this.domElem.find('.stocks__' + ('full' === t ? 'full' : 'short')), {
                        visibilityCheck: !1
                    }), i && (new Image().src = i), n && home.stat.logPath('resize', n), this.setMod('state', t), BEM.channel('i-height-event').trigger('change'), !1;
                }
            }), BEM.channel('i-sight').on('teaser_type_general:full', function(t, e) {
                var i = e.data('show-url');
                i && (new Image().src = i);
            }), BEM.channel('i-sight').on('teaser_type_service:full', function(t, e) {
                var i = e.data('show-url');
                i && (new Image().src = i);
            }), BEM.DOM.decl('votes', {
                onSetMod: {
                    expanded: function(t, e) {
                        var i = 'yes' === e,
                            n = this.elem('list-hidden');
                        n.css('max-height', i ? n.prop('scrollHeight') : 0), MBEM.blocks['i-mini-scroll-to'].scrollY(this.domElem.offset().top, 400), this.elem('more').find('.button__text').text(i ? home.l10n('votes.collapse') : home.l10n('votes.expand')), this.afterCurrentEvent(function() {
                            var t = 'votes.' + (i ? 'less' : 'more');
                            this.elem('more').attr('data-statlog', t), home.stat.logPath('show', t);
                        }), setTimeout(function() {
                            this.channel('i-height-event').trigger('change');
                        }.bind(this), 500);
                    }
                }
            }, {
                live: function() {
                    this.liveBindTo('more', 'click', function() {
                        return this.toggleMod('expanded', 'yes'), !1;
                    });
                }
            }), BEM.channel('i-sight').on('block_viewed_no:before', function(t, e) {
                e.hasClass('market') && e.bem('market').setMod('loading', 'yes').setMod('visible', 'yes');
            }), BEM.DOM.decl('market', {
                onSetMod: {
                    js: function() {
                        this._addScrollStats(this.findBlockInside('scroller')), this._calcOverflow(this.domElem), this.params.apiUrl || this._addTurboClickHandlers();
                    },
                    visible: {
                        yes: function() {
                            this._loadBlockData();
                        }
                    }
                },
                _addTurboClickHandlers: function() {
                    this.params.isTurbo && BEM.blocks.sidebar.addClickHandler('beru', '.market__items', '.market__card_item', {
                        header: 'our',
                        turbo: !0,
                        urlChecker: function(t) {
                            var e = home.parseUrl(t);
                            return /^yandex\.(ru|ua|kz|by)$/.test(e.host);
                        },
                        fallbackUrl: function(t) {
                            var e = home.parseUrl(t);
                            return e.query.no_turbo = 1, home.makeUrl(e);
                        }
                    });
                },
                _calcOverflow: function(t) {
                    BEM.blocks['i-multiline-overflow'].calcOverflow(t, 2, 'market');
                },
                _addScrollStats: function(t) {
                    var e = this.params.serviceName;
                    t.addScrollStats(e + '.scroll', this.elem('card').width() / 2);
                },
                _updateContent: function(t) {
                    var e = t.models,
                        i = t.context,
                        n = this.findBlockOn('imageloader');
                    this.delMod('loading'), BEM.DOM.update(this.elem('items'), home.view('market__content', {
                        items: e,
                        marketUrl: i.marketUrl,
                        currency: i.currency,
                        isTurbo: this.params.isTurbo,
                        serviceName: this.params.serviceName
                    })), this._addTurboClickHandlers(), this.elem('title').attr('href', i.marketUrl), n.updateItems(), BEM.blocks['i-multiline-overflow'].calcOverflow(this.elem('item'), 2);
                },
                _destruct: function() {
                    BEM.DOM.destruct(this.domElem);
                },
                _loadBlockData: function() {
                    if (!this._loadStarted) {
                        this._loadStarted = !0;
                        var t = this.params.apiUrl;
                        $.ajax({
                            url: t,
                            xhrFields: {
                                withCredentials: !0
                            },
                            dataType: 'json',
                            timeout: 10000
                        }).then(function(e) {
                            if (!(e.models && e.models.length > 0)) return this._destruct(), home.error.logError({
                                block: this.__self.getName(),
                                url: t,
                                message: '_loadBlockData: incorrect data',
                                meta: {
                                    payloadType: typeof e.models
                                }
                            }), $.Deferred().reject();
                            this._updateContent(e);
                        }.bind(this), function(e, i, n) {
                            this._destruct(), home.error.logAjaxError({
                                block: this.__self.getName(),
                                url: t,
                                message: '_loadBlockData: request error',
                                source: 'market_api'
                            }, e, i, n);
                        }.bind(this));
                    }
                }
            }), BEM.DOM.decl('mix-stream-thumb-preview', {
                _bindEvents: function() {
                    this._observeIntersection();
                },
                _unBindEvents: function() {
                    this._observer && this._observer.unobserve(this.domElem[0]);
                },
                _observeIntersection: function() {
                    this._observer = BEM.blocks['i-intersectionobserver-wrapper'].create(function(t) {
                        this._isElementVisible = t[0].isIntersecting, this._onVisibilityStateChange(this._isElementVisible);
                    }.bind(this)), this._observer.observe(this.domElem[0]);
                },
                _onVisibilityStateChange: function(t) {
                    t ? this._playVideoPreview() : this._stopVideoPreview();
                },
                _playVideoPreview: function() {
                    this._thumbPreview && this._thumbPreview.setMod('active', 'yes');
                },
                _stopVideoPreview: function() {
                    this._thumbPreview && this._thumbPreview.stop();
                },
                destruct: function() {
                    this._unBindEvents(), this.__base.apply(this, arguments);
                }
            }), BEM.DOM.decl({
                block: 'stream-intro',
                baseMix: ['mix-stream-thumb-preview']
            }, {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.__base.apply(this, arguments);
                            var t = this.findBlockInside({
                                    block: 'scroller',
                                    modName: 'channels',
                                    modVal: 'yes'
                                }),
                                e = home.getData('stream-intro.data.allowTouchVideoPreview');
                            t.addScrollStats('tv_online.scroll', 2 * this.elem('item').width()), BEM.blocks['i-multiline-overflow'].calcOverflow(this.elem('item-program'), 2, 'stream-intro'), e && this._bindEvents();
                        }
                    }
                },
                _onVisibilityStateChange: function(t) {
                    t ? this._startVideoPreview() : this._stopVideoPreview();
                },
                _startVideoPreview: function() {
                    this._getCurrentProgram().then(function(t) {
                        t && this._setPersonalPreview(t), this._thumbPreview = this.findBlockOn(this.elem('item'), 'thumb-preview'), this._playVideoPreview();
                    }.bind(this));
                },
                _setPersonalPreview: function(t) {
                    if (!this._updatedPersonalPreview && t.ya_video_preview) {
                        var e = this.blockInside('thumb-preview');
                        e.setPreview(t.ya_video_preview), e.delMod('disabled'), this._updatedPersonalPreview = !0;
                    }
                },
                _getCurrentProgram: function() {
                    return this._gettingCurrentProgram || (this._gettingCurrentProgram = this.params.isPersonal ? Promise.resolve() : this._fetchCurrentProgram().then(function(t) {
                        return t;
                    })), this._gettingCurrentProgram;
                },
                _fetchCurrentProgram: function() {
                    var t = Math.floor(home.now() / 1000);
                    return Ya.streamCms.fetchEpisodes({
                        personal: !0,
                        parent_id: this.params.personalId,
                        end_date__from: t,
                        now: t,
                        limit: 2
                    }).then(function(t) {
                        return t && t[0] && t[0].data[0];
                    }, function(t) {
                        return Promise.reject({
                            message: '_fetchCurrentProgram -> ' + (t && t.message),
                            originalMessage: t && t.originalMessage
                        });
                    });
                },
                destruct: function() {
                    this._unBindEvents(), this.__base.apply(this, arguments);
                }
            }), BEM.DOM.decl('player-control', {
                _onClick: function(t) {
                    var e = t.data.domElem.data();
                    return this.__self.process(e), !1;
                }
            }, {
                process: function(t) {
                    return this.testOptions(t) ? this._open ? Promise.resolve() : (this._open = !0, this.beforePlay(t).then(this.play.bind(this)).then(this.onPlaySuccess.bind(this))['catch'](this.onPlayFail.bind(this))) : (home.error.logError({
                        block: this.getName(),
                        message: 'testOptions failed',
                        meta: t,
                        sourceType: 'logic'
                    }), Promise.reject());
                },
                testOptions: function(t) {
                    return !!t.fromBlock;
                },
                beforePlay: function(t) {
                    return this._initTiming(), this._lockAutoReload(), Promise.all([this._showLoader(t), this._awaitData()]).then(function() {
                        return t;
                    });
                },
                play: function(t) {
                    return Promise.resolve(t);
                },
                onPlaySuccess: function() {
                    return this._firstPaintTiming(), $(':focus').blur(), this._hideLoader();
                },
                onPlayFail: function(t) {
                    this.hide(), this._rejectTiming(), t && home.error.logError({
                        block: this.getName(),
                        message: 'player-control.onPlayFail: unexpected error',
                        sourceType: t.timeout ? 'timeout' : 'logic'
                    }, t);
                },
                getContainer: function() {
                    return $('body');
                },
                _initTiming: function() {
                    this.TIMINGSUFFIX && !this._timing && (this._timing = Ya.Rum.makeSubPage('28.15.1242.' + this.TIMINGSUFFIX), Ya.Rum.sendTTI(!1, Ya.Rum.getTime(), this._timing));
                },
                _rejectTiming: function() {
                    this._timing && this._timing.cancel();
                },
                _firstPaintTiming: function() {
                    this._timing && !this._timingSent && (Ya.Rum.sendTimeMark('2793', Ya.Rum.getTime(), !1, this._timing), this._timingSent = !0);
                },
                _lockAutoReload: function() {
                    BEM.channel('reload').trigger('lock', {
                        block: this.getName()
                    });
                },
                _releaseAutoReload: function() {
                    BEM.channel('reload').trigger('release', {
                        block: this.getName()
                    });
                },
                _awaitData: function() {
                    return this._awaitDataPromise || (this._awaitDataPromise = new Promise(function(t) {
                        home.subscribeData(t);
                    })), this._awaitDataPromise;
                },
                _createLoader: function() {
                    return $(home.view('player-control__loader', {}));
                },
                _showLoader: function() {
                    if (this._loader) return Promise.resolve();
                    var t = this._createLoader();
                    return t.appendTo(this.getContainer()), t.one('click', '.player-control__close', function() {
                        return this.hide(), !1;
                    }.bind(this)), this._loader = t, this._loader.show(), Promise.resolve();
                },
                _hideLoader: function() {
                    this._loader && (this._loader.off('click'), this._loader.remove(), this._loader = null);
                },
                hide: function() {
                    this._hideLoader(), this._releaseAutoReload(), this._open = !1;
                },
                live: function() {
                    this.liveBindTo('link', 'pointerclick', function(t) {
                        return this._onClick(t);
                    });
                }
            }), BEM.DOM.decl({
                block: 'stream-control',
                baseBlock: 'player-control'
            }, {}, {
                getContainer: function() {
                    return $('body');
                },
                downloadResources: function() {
                    return home.bundles.load('stream');
                },
                beforePlay: function(t) {
                    var e = this._currentEvent = {},
                        i = {
                            active: t.streamActive,
                            programParams: {
                                from_block: t.fromBlock
                            },
                            container: this.getContainer()
                        },
                        n = {};
                    return t.streamDefault && (t.streamChannel = 'default'), t.streamId || t.streamChannel || t.streamActive ? (n.id = t.streamId, n.type = t.type, n.channel_id = t.streamChannel, n.category = t.streamCategory, this._initTiming(), this._lockAutoReload(), Promise.all([this._showLoader({
                        scroll: t.scroll ? n : null
                    }), this._awaitData().then(this._logDisabled.bind(this, t)).then(this.downloadResources.bind(this))]).then(function() {
                        return this._loader && this._currentEvent === e ? Promise.resolve({
                            stream: n,
                            startParams: i
                        }) : Promise.reject();
                    }.bind(this))) : (home.error.logError({
                        block: this.getName(),
                        method: 'beforePlay',
                        message: 'beforePlay: bad options - nothing to play',
                        sourceType: 'logic',
                        meta: {
                            options: t
                        }
                    }), Promise.reject());
                },
                play: function(t) {
                    var e = t.stream,
                        i = t.startParams;
                    return BEM.DOM.blocks.stream.play(e, i)['catch'](function(t) {
                        throw t.message = 'play->' + t.message, t;
                    });
                },
                onPlaySuccess: function() {
                    return this.__base();
                },
                startPlayerFromQuery: function() {
                    this._awaitData().then(function() {
                        if (!home.getData('stream.stream')) return Promise.reject();
                        var t, e, i = home.getData('stream.stream') || {},
                            n = i.clientData;
                        if (!n || i.disabled) return Promise.reject();
                        if (this._history.on('closed', this.onHistoryChange.bind(this)), !n.queryChannel && !n.queryId) return Promise.reject();
                        var o = n.queryId,
                            s = n.queryChannel,
                            r = n.queryCategory;
                        return e = {
                            id: o,
                            channel_id: s,
                            category: r
                        }, t = {
                            active: n.queryActive,
                            programParams: {
                                from_block: n.queryFrom
                            },
                            container: this.getContainer()
                        }, this._initTiming(), this._lockAutoReload(), Promise.all([this._showLoader({
                            scroll: n.queryDisableScroll ? '' : e
                        }), this._awaitBlock()]).then(function() {
                            return this.play({
                                stream: e,
                                startParams: t
                            });
                        }.bind(this)).then(this.onPlaySuccess.bind(this))['catch'](function(t) {
                            if (this.hide(), this._rejectTiming(), t) throw t;
                        }.bind(this));
                    }.bind(this))['catch'](function(t) {
                        t && home.error.logError({
                            block: this.getName(),
                            method: 'startPlayerFromQuery',
                            message: 'startPlayerFromQuery: fail',
                            sourceType: t.timeout ? 'network' : 'logic'
                        }, t);
                    }.bind(this));
                },
                _logDisabled: function(t) {
                    var e = home.getData('stream.stream');
                    if (!e || e.disabled) return home.error.logError({
                        block: this.getName(),
                        method: '_logDisabled',
                        message: '_logIfDisabled: entrypoint with ' + (e ? 'disabled stream' : 'stream.stream not init'),
                        sourceType: 'logic',
                        meta: {
                            options: t
                        }
                    }), Promise.reject();
                },
                _awaitBlock: function() {
                    return this._getBlockPromise || (this._getBlockPromise = new Promise(function(t, e) {
                        var i = +new Date();
                        ! function n() {
                            if (BEM.DOM.blocks.stream) t();
                            else if (+new Date() - i > 10000) {
                                var o = Error('_awaitBlock: no block after 10s');
                                o.timeout = 1, e(o);
                            } else setTimeout(n, 100);
                        }();
                    })), this._getBlockPromise;
                },
                _awaitOrDownload: function() {
                    return this._awaitData().then(function() {
                        if (!home.getData('stream.stream')) return Promise.reject();
                        var t = home.getData('stream.stream').clientData;
                        return t ? (this._showLoader(), t.queryChannel || t.queryId ? this._awaitBlock() : this.downloadResources()) : Promise.reject();
                    }.bind(this));
                },
                _initTiming: function() {
                    var t = window.Ya = window.Ya || {},
                        e = t.Stream = t.Stream || {};
                    e.timing && e.timing.cancel(), e.timing = t.Rum.makeSubPage('2952');
                },
                _rejectTiming: function() {},
                _firstPaintTiming: function() {},
                onHistoryChange: function(t, e) {
                    e && this._awaitOrDownload().then(function() {
                        var t = e.params,
                            i = {
                                active: e.active,
                                container: this.getContainer(),
                                program_params: {
                                    from_block: 'history'
                                }
                            };
                        return this._history.lock(), this._lockAutoReload(), BEM.DOM.blocks.stream.play(t, i);
                    }.bind(this)).then(function() {
                        this._history.release(), this.onPlaySuccess();
                    }.bind(this), function(t) {
                        t && home.error.logError({
                            block: 'stream-control',
                            method: 'onHistoryChange',
                            message: 'history play: playerStartFail',
                            sourceType: 'logic'
                        }, t), this._history.release(), this.hide();
                    }.bind(this));
                },
                live: function() {
                    return this._history = BEM.blocks['stream-history'].get(), this.startPlayerFromQuery(), this.__base();
                }
            }), BEM.DOM.decl('stream-control', {}, {
                live: function() {
                    return 'zen' !== BEM.blocks['i-hash'].get('stream') && BEM.blocks['i-hash'].remove('stream', !0), this.__base();
                },
                _showLoader: function() {
                    this.__base();
                    var t = this.getContainer().bem('dialog');
                    return this._clearCloseTimeout(), home.getData('i-ua2.data.isIOS') && (this._dialogTop = $(window).scrollTop()), t.show(), Promise.resolve();
                },
                _clearCloseTimeout: function() {
                    this._closeTimeout && (clearTimeout(this._closeTimeout), this._closeTimeout = null);
                },
                hide: function() {
                    this._playSucceeded ? (this._clearCloseTimeout(), this._closeTimeout = setTimeout(this._hideDialog.bind(this), 500)) : this._hideDialog(), this.__base();
                },
                _hideDialog: function() {
                    this.getContainer().bem('dialog').hide(), this._playSucceeded = !1, home.getData('i-ua2.data.isIOS') && $(window).scrollTop(this._dialogTop || 1);
                },
                onPlaySuccess: function() {
                    this._playSucceeded = !0, this._history.onFirst('x-closed', function() {
                        this._clearCloseTimeout(), setTimeout(this._hideDialog.bind(this), 0);
                    }.bind(this)), this.__base.apply(this, arguments);
                },
                getContainer: function() {
                    return this._container || (this._container = $(home.view('dialog__layout', {
                        mods: {
                            type: 'stream',
                            fullscreen: 'yes',
                            scroll: 'toggle'
                        }
                    })), BEM.DOM.append($('.dialog__wrapper'), this._container)), this._container;
                }
            }), BEM.decl('stream-history', {
                onSetMod: {
                    js: function() {
                        this._w = this.params.window, this._h = this._w.history;
                        var t = this;
                        this._listener || $(this._w).on('popstate', function() {
                            setTimeout(function() {
                                t._getPopStateId() !== t._lastPopState && t._onPopStateCold();
                            }, 10);
                        }), this._list = [], this._lastPopState = t._getPopStateId(), (this.params.flat || this.params.fallback) && (this._interval = setInterval(function() {
                            t._getPopStateId() !== t._lastPopState && t._onPopStateCold();
                        }, 50));
                    },
                    player: {
                        '': function() {
                            var t = this._getDepth();
                            t && !this.params.flat ? this._h.go(-t) : this.clean();
                        }
                    }
                },
                _getPopStateId: function() {
                    var t = this._w.location.href + '|';
                    return this.params.flat ? t += this._list.length : t += this._getDepth(), t;
                },
                destroy: function() {
                    $(this._w).off('popstate', this._listener);
                },
                lock: function() {
                    this._nohistory = !0;
                },
                release: function() {
                    this._nohistory = !1;
                },
                update: function(t, e) {
                    if (!this._nohistory && 'continue' !== e.auto) {
                        var i = {},
                            n = this._getCleanUrl();
                        e.commentId && (i.commentId = e.commentId), e.filters && (i.filters = e.filters), e.channel_id && (i.stream_channel = e.channel_id), 'watching' !== t && 'error' !== t && (i.stream_active = t), e.id && !e.linktolive && (i.stream_id = e.id), 'category' === t && (i.stream_category = e.category), 'blogger' === t && (i.stream_publisher = e.blogger), 'theme' === t && (i.stream_publisher = e.theme), e.searchText && (i.search_text = e.searchText);
                        var o = home.makeUrl({
                                path: n.path,
                                hash: n.hash,
                                query: $.extend({}, n.query, i)
                            }),
                            s = this._getDepth(),
                            r = e.replace,
                            a = this._extractOtherParams(e);
                        !this.hasMod('player', 'opened') && s && (r = !0), this.params.flat && (this._list.push({
                            url: this._w.location.href,
                            other: a
                        }), r = !0), r || s++;
                        var c = {
                                streamDepth: s,
                                other: a
                            },
                            h = r ? 'replaceState' : 'pushState';
                        this._h[h](c, this._w.document.title, o), this._lastPopState = this._getPopStateId();
                    }
                },
                back: function(t) {
                    var e = this._getDepth();
                    if (t && e < 2) {
                        var i = this._getState(),
                            n = $.extend({
                                replace: !0
                            }, i.params, t.params);
                        return this.update(t.active || i.active, n), void this._onPopState();
                    }
                    if (this.params.flat) {
                        var o = this._list.pop(),
                            s = o && o.url;
                        s || (s = this._getCleanUrl()), this._otherParams = o.other, this._h.replaceState(null, this._w.document.title, s), this._onPopState();
                    } else this._h.back();
                },
                _getCleanUrl: function() {
                    var t = home.parseUrl(this._w.location.href),
                        e = t.query;
                    return delete e.filters, delete e.commentId, delete e.stream_channel, delete e.stream_id, delete e.stream_active, delete e.stream_category, delete e.stream_publisher, delete e.search_text, {
                        path: t.path,
                        query: e,
                        hash: t.hash
                    };
                },
                clean: function() {
                    var t = this._getCleanUrl(),
                        e = home.makeUrl({
                            path: t.path,
                            hash: t.hash,
                            query: t.query
                        });
                    this._h.replaceState(this._h.state, this._w.document.title, e), this._lastPopState = this._getPopStateId(), this.trigger('x-closed');
                },
                _getState: function() {
                    var t = home.parseUrl(this._w.location.href).query,
                        e = t.stream_channel,
                        i = t.stream_id,
                        n = t.stream_active || 'watching',
                        o = {},
                        s = this._getOtherParams();
                    if (i || e || t.stream_active) {
                        for (var r in i ? o.id = i : e && (o.channel_id = e, o.live = !0), t.stream_category && (o.category = t.stream_category), t.stream_publisher && (o.publisher = t.stream_publisher), t.search_text && (o.searchText = t.search_text), s) s.hasOwnProperty(r) && (o[r] = s[r]);
                        return {
                            active: n,
                            params: o
                        };
                    }
                },
                _getDepth: function() {
                    if (this.params.flat) return this._list.length;
                    try {
                        return this._h.state && this._h.state.streamDepth || 0;
                    } catch (t) {
                        return 1;
                    }
                },
                _getOtherParams: function() {
                    return this.params.flat ? this._otherParams || {} : this._h.state && this._h.state.other || {};
                },
                _extractOtherParams: function(t) {
                    var e = {
                            auto: 1,
                            replace: 1,
                            id: 1,
                            channel: 1,
                            channel_id: 1,
                            program: 1,
                            current: 1,
                            live: 1,
                            category: 1,
                            publisher: 1
                        },
                        i = {};
                    for (var n in t) t.hasOwnProperty(n) && !e[n] && (i[n] = t[n]);
                    return i;
                },
                _getEventName: function() {
                    return this.getMod('player') || 'closed';
                },
                _onPopStateCold: function() {
                    return this._onPopState();
                },
                _onPopState: function() {
                    this._lastPopState = this._getPopStateId();
                    var t = this._getEventName(),
                        e = this._getState();
                    if ('closed' !== t || e) {
                        var i = this._getDepth();
                        !e || this.params.flat || i ? this.trigger(t, e) : 'closed' === t ? this.clean() : this.trigger(t);
                    } else this.trigger('x-closed');
                }
            }, {
                get: function(t) {
                    return this._instance || (this._instance = new BEM.blocks['stream-history']({}, {
                        window: t || window,
                        flat: $('.i-ua_browser_msie,.i-ua_browser_edge').length
                    })), this._instance;
                }
            }),
            function(t, e) {
                var i = 'yc',
                    n = 1209600;
                t.Ya = t.Ya || {};
                var o = t.Ya.ycCookie = t.Ya.ycCookie || {};

                function s() {
                    for (var t, n = e.cookie.split('; '), o = 0; o < n.length; ++o)
                        if ((t = n[o].split('='))[0] === i) return c(t.slice(1).join('=')) || {};
                    return {};
                }

                function r(t) {
                    var o, s, r = function(t) {
                            if (!t || 'object' != typeof t) return;
                            for (var e, i, n = [], o = 0, s = Object.keys(t), r = s.length; o < r; o++) e = t[s[o]], i = [s[o], encodeURIComponent(e.value || e)], /^\d+$/.test(e.expires) && i.unshift(e.expires), n.push(i.join('.'));
                            return n.join('#');
                        }(t),
                        a = new Date(),
                        c = a.getTime();
                    r ? a.setTime(c + 1000 * n) : a.setTime(c - 487), o = 'expires=' + a.toUTCString(), s = 'domain=' + e.domain.replace(/^\S*yandex/, '.yandex'), e.cookie = i + '=' + r + '; ' + o + '; ' + s + '; path=/';
                }

                function a(t) {
                    try {
                        return decodeURIComponent(t);
                    } catch (e) {
                        return t;
                    }
                }

                function c(t) {
                    if (!t || 'string' != typeof t || !t.length) return {};
                    /%23\d{10}/.test(t) && (t = a(t)), t = t.split('#');
                    for (var e, i = Date.now() / 1000, n = {}, o = 0, s = t.length; o < s; o++) 2 === (e = t[o].split('.')).length ? n[e[0]] = a(e[1]) : e.length > 2 && (isNaN(e[0]) ? n[e[0]] = a(e.slice(1).join('.')) : e[0] > i && (n[e[1]] = {
                        value: a(e.slice(2).join('.')),
                        expires: e[0]
                    }));
                    return n;
                }
                o.get = function(t) {
                    var e, i, n, o = s(),
                        r = {};
                    if (!o[t]) return {};
                    (e = o[t]) && e.value && (e = e.value);
                    for (var a = 0, c = (i = e.split(',')).length; a < c; ++a) r[(n = i[a].split(':'))[0]] = parseInt(n[1], 10);
                    return r;
                }, o.set = function(t, e) {
                    if (!t || !e || 'object' != typeof e) return this;
                    var i, n, o, a = s(),
                        c = [];
                    for (i = 0, n = (o = Object.keys(e)).length; i < n; i++) c.push(o[i] + ':' + e[o[i]]);
                    return c.length ? (a[t] = {
                        value: c.join(','),
                        expires: String(Math.floor(Date.now() / 1000 + 259200))
                    }, r(a), this) : this;
                }, o.remove = function(t) {
                    if (!t) return this;
                    var e = s();
                    return delete e[t], r(e), this;
                };
            }(window, document), BEM.DOM.decl({
                block: 'dialog',
                modName: 'fullscreen',
                modVal: 'yes'
            }, {
                onSetMod: {
                    visibility: function(t, e) {
                        this.__base.apply(this, arguments), $('body').toggleClass('body_padding_no body_content_hidden', !!e);
                    }
                }
            }), BEM.decl('i-intersectionobserver-wrapper', {}, {
                create: function(t, e) {
                    this._eventsInited || (this._eventsInited = !0, 'THROTTLE_TIMEOUT' in IntersectionObserver.prototype && (this._initEvents(), IntersectionObserver.prototype.THROTTLE_TIMEOUT = 200, IntersectionObserver.prototype.USE_MUTATION_OBSERVER = !1));
                    var i = new IntersectionObserver(t, e);
                    return this._instances.push(i), i;
                },
                _instances: [],
                _THROTTLE_TIMEOUT: 200,
                _initEvents: function() {
                    this._throttledCallback = home.throttle(this._fire.bind(this), this._THROTTLE_TIMEOUT, {
                        leading: !1
                    }), this._listenEvents();
                },
                _listenEvents: function() {},
                _fire: function() {
                    this._instances.forEach(function(t) {
                        t._checkForIntersections();
                    });
                }
            }), BEM.decl('i-intersectionobserver-wrapper', {}, {
                _listenEvents: function() {
                    this.__base.apply(this, arguments), BEM.channel('i-height-event').on('change', this._throttledCallback);
                }
            }),
            function() {
                if ('object' == typeof window)
                    if ('IntersectionObserver' in window && 'IntersectionObserverEntry' in window && 'intersectionRatio' in window.IntersectionObserverEntry.prototype) 'isIntersecting' in window.IntersectionObserverEntry.prototype || Object.defineProperty(window.IntersectionObserverEntry.prototype, 'isIntersecting', {
                        get: function() {
                            return this.intersectionRatio > 0;
                        }
                    });
                    else {
                        var t = window.document;
                        i.prototype.THROTTLE_TIMEOUT = 100, i.prototype.POLL_INTERVAL = null, i.prototype.USE_MUTATION_OBSERVER = !0, i.prototype.observe = function(t) {
                            if (!this._observationTargets.some(function(e) {
                                    return e.element == t;
                                })) {
                                if (!t || 1 != t.nodeType) throw new Error('target must be an Element');
                                this._registerInstance(), this._observationTargets.push({
                                    element: t,
                                    entry: null
                                }), this._monitorIntersections(), this._checkForIntersections();
                            }
                        }, i.prototype.unobserve = function(t) {
                            this._observationTargets = this._observationTargets.filter(function(e) {
                                return e.element != t;
                            }), this._observationTargets.length || (this._unmonitorIntersections(), this._unregisterInstance());
                        }, i.prototype.disconnect = function() {
                            this._observationTargets = [], this._unmonitorIntersections(), this._unregisterInstance();
                        }, i.prototype.takeRecords = function() {
                            var t = this._queuedEntries.slice();
                            return this._queuedEntries = [], t;
                        }, i.prototype._initThresholds = function(t) {
                            var e = t || [0];
                            return Array.isArray(e) || (e = [e]), e.sort().filter(function(t, e, i) {
                                if ('number' != typeof t || isNaN(t) || t < 0 || t > 1) throw new Error('threshold must be a number between 0 and 1 inclusively');
                                return t !== i[e - 1];
                            });
                        }, i.prototype._parseRootMargin = function(t) {
                            var e = (t || '0px').split(/\s+/).map(function(t) {
                                var e = /^(-?\d*\.?\d+)(px|%)$/.exec(t);
                                if (!e) throw new Error('rootMargin must be specified in pixels or percent');
                                return {
                                    value: parseFloat(e[1]),
                                    unit: e[2]
                                };
                            });
                            return e[1] = e[1] || e[0], e[2] = e[2] || e[0], e[3] = e[3] || e[1], e;
                        }, i.prototype._monitorIntersections = function() {
                            this._monitoringIntersections || (this._monitoringIntersections = !0, this.POLL_INTERVAL ? this._monitoringInterval = setInterval(this._checkForIntersections, this.POLL_INTERVAL) : (n(window, 'resize', this._checkForIntersections, !0), n(t, 'scroll', this._checkForIntersections, !0), this.USE_MUTATION_OBSERVER && 'MutationObserver' in window && (this._domObserver = new MutationObserver(this._checkForIntersections), this._domObserver.observe(t, {
                                attributes: !0,
                                childList: !0,
                                characterData: !0,
                                subtree: !0
                            }))));
                        }, i.prototype._unmonitorIntersections = function() {
                            this._monitoringIntersections && (this._monitoringIntersections = !1, clearInterval(this._monitoringInterval), this._monitoringInterval = null, o(window, 'resize', this._checkForIntersections, !0), o(t, 'scroll', this._checkForIntersections, !0), this._domObserver && (this._domObserver.disconnect(), this._domObserver = null));
                        }, i.prototype._checkForIntersections = function() {
                            var t = this._rootIsInDom(),
                                i = t ? this._getRootRect() : {
                                    top: 0,
                                    bottom: 0,
                                    left: 0,
                                    right: 0,
                                    width: 0,
                                    height: 0
                                };
                            this._observationTargets.forEach(function(n) {
                                var o = n.element,
                                    r = s(o),
                                    a = this._rootContainsTarget(o),
                                    c = n.entry,
                                    h = t && a && this._computeTargetAndRootIntersection(o, i),
                                    l = n.entry = new e({
                                        time: window.performance && performance.now && performance.now(),
                                        target: o,
                                        boundingClientRect: r,
                                        rootBounds: i,
                                        intersectionRect: h
                                    });
                                c ? t && a ? this._hasCrossedThreshold(c, l) && this._queuedEntries.push(l) : c && c.isIntersecting && this._queuedEntries.push(l) : this._queuedEntries.push(l);
                            }, this), this._queuedEntries.length && this._callback(this.takeRecords(), this);
                        }, i.prototype._computeTargetAndRootIntersection = function(e, i) {
                            if ('none' != window.getComputedStyle(e).display) {
                                for (var n, o, r, c, h, l, u, d, m = s(e), f = a(e), p = !1; !p;) {
                                    var _ = null,
                                        g = 1 == f.nodeType ? window.getComputedStyle(f) : {};
                                    if ('none' == g.display) return;
                                    if (f == this.root || f == t ? (p = !0, _ = i) : f != t.body && f != t.documentElement && 'visible' != g.overflow && (_ = s(f)), _ && (n = _, o = m, void 0, void 0, void 0, void 0, void 0, void 0, r = Math.max(n.top, o.top), c = Math.min(n.bottom, o.bottom), h = Math.max(n.left, o.left), l = Math.min(n.right, o.right), d = c - r, !(m = (u = l - h) >= 0 && d >= 0 && {
                                            top: r,
                                            bottom: c,
                                            left: h,
                                            right: l,
                                            width: u,
                                            height: d
                                        }))) break;
                                    f = a(f);
                                }
                                return m;
                            }
                        }, i.prototype._getRootRect = function() {
                            var e;
                            if (this.root) e = s(this.root);
                            else {
                                var i = t.documentElement,
                                    n = t.body;
                                e = {
                                    top: 0,
                                    left: 0,
                                    right: i.clientWidth || n.clientWidth,
                                    width: i.clientWidth || n.clientWidth,
                                    bottom: i.clientHeight || n.clientHeight,
                                    height: i.clientHeight || n.clientHeight
                                };
                            }
                            return this._expandRectByRootMargin(e);
                        }, i.prototype._expandRectByRootMargin = function(t) {
                            var e = this._rootMarginValues.map(function(e, i) {
                                    return 'px' == e.unit ? e.value : e.value * (i % 2 ? t.width : t.height) / 100;
                                }),
                                i = {
                                    top: t.top - e[0],
                                    right: t.right + e[1],
                                    bottom: t.bottom + e[2],
                                    left: t.left - e[3]
                                };
                            return i.width = i.right - i.left, i.height = i.bottom - i.top, i;
                        }, i.prototype._hasCrossedThreshold = function(t, e) {
                            var i = t && t.isIntersecting ? t.intersectionRatio || 0 : -1,
                                n = e.isIntersecting ? e.intersectionRatio || 0 : -1;
                            if (i !== n)
                                for (var o = 0; o < this.thresholds.length; o++) {
                                    var s = this.thresholds[o];
                                    if (s == i || s == n || s < i != s < n) return !0;
                                }
                        }, i.prototype._rootIsInDom = function() {
                            return !this.root || r(t, this.root);
                        }, i.prototype._rootContainsTarget = function(e) {
                            return r(this.root || t, e);
                        }, i.prototype._registerInstance = function() {}, i.prototype._unregisterInstance = function() {}, window.IntersectionObserver = i, window.IntersectionObserverEntry = e;
                    }
                function e(t) {
                    this.time = t.time, this.target = t.target, this.rootBounds = t.rootBounds, this.boundingClientRect = t.boundingClientRect, this.intersectionRect = t.intersectionRect || {
                        top: 0,
                        bottom: 0,
                        left: 0,
                        right: 0,
                        width: 0,
                        height: 0
                    }, this.isIntersecting = !!t.intersectionRect;
                    var e = this.boundingClientRect,
                        i = e.width * e.height,
                        n = this.intersectionRect,
                        o = n.width * n.height;
                    this.intersectionRatio = i ? Number((o / i).toFixed(4)) : this.isIntersecting ? 1 : 0;
                }

                function i(t, e) {
                    var i, n, o, s = e || {};
                    if ('function' != typeof t) throw new Error('callback must be a function');
                    if (s.root && 1 != s.root.nodeType) throw new Error('root must be an Element');
                    this._checkForIntersections = (i = this._checkForIntersections.bind(this), n = this.THROTTLE_TIMEOUT, o = null, function() {
                        o || (o = setTimeout(function() {
                            i(), o = null;
                        }, n));
                    }), this._callback = t, this._observationTargets = [], this._queuedEntries = [], this._rootMarginValues = this._parseRootMargin(s.rootMargin), this.thresholds = this._initThresholds(s.threshold), this.root = s.root || null, this.rootMargin = this._rootMarginValues.map(function(t) {
                        return t.value + t.unit;
                    }).join(' ');
                }

                function n(t, e, i, n) {
                    'function' == typeof t.addEventListener ? t.addEventListener(e, i, n || !1) : 'function' == typeof t.attachEvent && t.attachEvent('on' + e, i);
                }

                function o(t, e, i, n) {
                    'function' == typeof t.removeEventListener ? t.removeEventListener(e, i, n || !1) : 'function' == typeof t.detatchEvent && t.detatchEvent('on' + e, i);
                }

                function s(t) {
                    var e;
                    try {
                        e = t.getBoundingClientRect();
                    } catch (i) {}
                    return e ? (e.width && e.height || (e = {
                        top: e.top,
                        right: e.right,
                        bottom: e.bottom,
                        left: e.left,
                        width: e.right - e.left,
                        height: e.bottom - e.top
                    }), e) : {
                        top: 0,
                        bottom: 0,
                        left: 0,
                        right: 0,
                        width: 0,
                        height: 0
                    };
                }

                function r(t, e) {
                    for (var i = e; i;) {
                        if (i == t) return !0;
                        i = a(i);
                    }
                    return !1;
                }

                function a(t) {
                    var e = t.parentNode;
                    return e && 11 == e.nodeType && e.host ? e.host : e && e.assignedSlot ? e.assignedSlot.parentNode : e;
                }
            }(), BEM.DOM.decl('thumb-preview', {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.hasMod('video') || (this._loaded = [], this._preloader = BEM.create({
                                block: 'i-preloader',
                                mods: {
                                    nosize: 'yes',
                                    batch: 'yes'
                                }
                            }), this._preloader.on('success', this._onPreloaderSuccess, this), this._preloader.on('notfound error', this._onPreloaderError, this));
                        }
                    },
                    active: {
                        yes: function() {
                            this._isActive = !0, this._activeStartTime = Date.now();
                            var t = this._getCurrent();
                            t && t.delMod('active'), this._setCurrent(this), this._start();
                        },
                        '': function() {
                            this._isActive = !1, this._stop();
                        }
                    }
                },
                destruct: function() {
                    this._preloader && (this._preloader.un('success', this._onPreloaderSuccess, this), this._preloader.un('notfound error', this._onPreloaderError, this), this._preloader.destruct()), clearTimeout(this._tick), this._getCurrent() === this ? (this._stop(), this._setCurrent(null)) : (clearTimeout(this._timer), clearTimeout(this._startTimer)), this.__base.apply(this, arguments);
                },
                start: function() {
                    this._outTimer && clearTimeout(this._outTimer), this._isActive || this.hasMod('disabled', !0) || (clearTimeout(this._startTimer), this._startTimer = setTimeout(function() {
                        this.setMod('active', 'yes');
                    }.bind(this), this.params.startDelay));
                },
                stop: function() {
                    clearTimeout(this._startTimer), this.delMod('active');
                },
                _getCurrent: function() {
                    return this.__self.getCurrent();
                },
                _setCurrent: function(t) {
                    return this.__self._current = t, this;
                },
                _start: function() {
                    if (delete this._currentIndex, this._saveState(), !this._loaded.length) return this._preload(1);
                    this._onStart(), this._restartTimer();
                },
                _stop: function() {
                    this.trigger('stop'), clearTimeout(this._timer), this._restoreState();
                },
                _restartTimer: function() {
                    if (clearTimeout(this._timer), !this.params.infinite && this._isLast()) return this.trigger('end'), this._stop(), void this.setMod('disabled', !0);
                    this._next(), this.trigger('change', this._currentIndex), BEM.blocks['thumb-preview'].trigger('thumb-change', this._currentIndex), this._timer = setTimeout(this._restartTimer.bind(this), this.params.delay);
                },
                _isLast: function() {
                    var t = this._loaded.length - 1;
                    return this._currentIndex === t && 0 === this.params.thumbs.length;
                },
                _onPreloaderSuccess: function(t, e) {
                    var i = this._findThumb(e.url);
                    i && (this._isActive && !this._loaded.length && (this._onStart(), this._tick = setTimeout(this._restartTimer.bind(this))), this._loaded.push(i));
                },
                _onPreloaderError: function(t, e) {
                    this._findThumb(e) && this._preload(this.params.step);
                },
                _onStart: function() {
                    this.trigger('start');
                },
                _findThumb: function(t) {
                    for (var e = null, i = this.params.thumbs, n = 0; n < i.length; n++)
                        if (-1 !== i[n].indexOf(t)) {
                            e = i.splice(n, 1)[0];
                            break;
                        }
                    return e;
                },
                _preload: function(t) {
                    this._preloader.setImages(this._getImagesForPreload(t)).batchLoad();
                },
                _getImagesForPreload: function(t) {
                    var e = this.__self.getPixelRatio();
                    return this.params.thumbs.slice(0, t).map(function(t) {
                        return [{
                            url: t[(e > t.length ? t.length : e) - 1]
                        }];
                    });
                },
                _next: function() {
                    this._setImageById(this._getNextIndex()), this._preload(this.params.step);
                },
                _getNextIndex: function() {
                    var t = 'undefined' != typeof this._currentIndex ? this._currentIndex + 1 : 0;
                    return t >= this._loaded.length && (t = this.params.thumbs.length ? t - 1 : 0), this._currentIndex = t;
                },
                _saveState: function() {
                    var t = this.elem('target');
                    this._isImg() ? this._state = {
                        src: t.attr('src'),
                        srcset: t.attr('srcset')
                    } : this._state = t.css('background-image');
                },
                _restoreState: function() {
                    var t = this.elem('target');
                    this._state && (this._isImg() ? (t.attr('src', this._state.src), t.attr('srcset', this._state.srcset || null)) : t.css('background-image', this._state));
                },
                _setImageById: function(t) {
                    var e = this.elem('target');
                    this._isImg() ? (e.attr('srcset', this._loaded[t].map(function(t, e) {
                        return t + ' ' + (e + 1) + 'x';
                    }).join(', ')), e.attr('src', this._loaded[t][0])) : e.css('background-image', 'url(' + this._loaded[t][0] + ')');
                },
                _isImg: function() {
                    return this.elem('target').is('img');
                }
            }, {
                getCurrent: function() {
                    return this._current;
                },
                live: function() {
                    BEM.blocks['b-page'] && BEM.blocks['b-page'].on('blur', this.stop, this);
                },
                getPixelRatio: function() {
                    return this._pixelRatio || (this._pixelRatio = Math.ceil(window.devicePixelRatio || 1)), this._pixelRatio;
                },
                stop: function() {
                    this._current && this._current.delMod('active');
                }
            }), BEM.DOM.decl('thumb-preview', {
                _longTapBrakeTimeout: 500,
                _sendHoverCounter: function() {
                    var t = encodeURIComponent(this.params.preview.url);
                    home.stat.logPath('tech', 'thumbs-preview.hover(url=' + t + ')');
                },
                _onPointerStart: function() {
                    this.setMod('active', 'yes'), this._pointerStart = home.now();
                },
                _onPointerEnd: function(t) {
                    home.now() - this._pointerStart > this._longTapBrakeTimeout && t && t.cancelable && t.preventDefault();
                }
            }, {
                live: function() {
                    this.__base(), this._isHaveTouch() ? (this.liveBindTo('touchstart', function() {
                        this._onPointerStart();
                    }), this.liveBindTo('touchend touchcancel', function(t) {
                        this._onPointerEnd(t);
                    })) : (this.liveBindTo('pointerover', function() {
                        this.hasMod('active', 'yes') || this.hasMod('disabled', 'yes') || this._sendHoverCounter(), this._onPointerStart();
                    }), this.liveBindTo('pointerout', function() {
                        this._onPointerEnd();
                    }));
                },
                _isHaveTouch: function() {
                    return $('.i-ua_browser_touch').length;
                }
            }), BEM.DOM.decl('thumb-preview', {}, {
                _isHaveTouch: function() {
                    return !0;
                }
            }), BEM.decl({
                block: 'thumb-preview',
                modName: 'video',
                modVal: !0
            }, {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.__base.apply(this, arguments), BEM.DOM.append(this.elem('target'), this.__self._getBemHtml());
                        }
                    },
                    active: {
                        yes: function() {
                            var t = this._getCurrent();
                            this._activeStartTime = Date.now(), t && t !== this && t.delMod('active'), this._setCurrent(this), this.start();
                        },
                        '': function() {
                            this.stop();
                        }
                    }
                },
                destruct: function() {
                    var t = this._getCurrent();
                    t === this && (t.stop(), t._setCurrent(null)), this.__base.apply(this, arguments);
                },
                start: function() {
                    var t;
                    this.hasMod('active', 'yes') || this.hasMod('disabled', !0) || (this._addPlayer(), this._player && (void 0 !== (t = this._player[0].play()) && t['catch'](this._onPlayError.bind(this)), this.setMod('active', 'yes'), this.trigger('start')));
                },
                stop: function() {
                    this.delMod('active'), this._playing && this._player && (this._player[0].pause(), this._player[0].readyState > 0 && (this._player[0].currentTime = 0), this.delMod(this.elem('target'), 'playing'), delete this._playing), this.trigger('stop');
                },
                _addPlayer: function() {
                    var t = this.params.preview,
                        e = {};
                    t && (e.src = t.url, e.type = t.type, this.params.loop && (e.loop = 'loop'), this._player || (this._player = this.__self._getPlayer()), BEM.DOM.prepend(this.elem('target'), this._player), this._player.attr(e));
                },
                _onError: $.noop,
                _onPlay: function() {
                    this._playing = !0, this.delMod(this.elem('target'), 'loading'), this.setMod(this.elem('target'), 'playing', !0);
                },
                _onEnded: function() {
                    this.stop(), this.trigger('end');
                },
                _onWait: function() {
                    this.setMod(this.elem('target'), 'loading', !0);
                },
                _onPlayError: function(t) {
                    this._isDestructing || (this.delMod(this.elem('target'), 'loading'), this.delMod('active'));
                },
                _getCurrent: function() {
                    return this.__self.getCurrent();
                },
                _setCurrent: function(t) {
                    return this.__self._current = t, this;
                }
            }, {
                _getBemHtml: function() {
                    if (!this._videoBemHtml) {
                        this._videoBemHtml = document.createElement('div'), this._videoBemHtml.className = BEM.INTERNAL.buildClass(this.getName(), 'loader');
                        var t = document.createElement('div');
                        t.className = BEM.INTERNAL.buildClasses('spin2', {
                            progress: 'yes',
                            size: 'xxs'
                        }), this._videoBemHtml.appendChild(t);
                    }
                    return this._videoBemHtml;
                },
                _getPlayer: function() {
                    if (!this._player) {
                        var t = document.createElement('video'),
                            e = {
                                autoplay: 'autoplay',
                                muted: 'muted',
                                'x-yandex-pip': 'false',
                                'x-webkit-airplay': 'deny',
                                playsinline: 'playsinline'
                            };
                        t.className = BEM.INTERNAL.buildClass(this.getName(), 'video'), t.muted = 'muted', Object.keys(e).forEach(function(i) {
                            t.setAttribute(i, e[i]);
                        }), this._player = BEM.DOM.append(BEM.DOM.scope, t), ['Ended', 'Playing', 'Waiting', 'Error'].forEach(this._addEvent.bind(this));
                    }
                    return this._player;
                },
                _addEvent: function(t) {
                    this._player && this._player[0].addEventListener(t.toLowerCase(), function() {
                        this._current && this['_on' + t]();
                    }.bind(this));
                },
                _onEnded: function() {
                    this._current._onEnded();
                },
                _onPlaying: function() {
                    this._current._onPlay();
                },
                _onWaiting: function() {
                    this._current._onWait();
                },
                _onError: function() {
                    this._current._onError();
                }
            }), BEM.decl({
                block: 'thumb-preview',
                modName: 'video',
                modVal: !0
            }, {
                onSetMod: {
                    js: {
                        inited: function() {
                            var t = home.getData('stream.reqparams.reqid');
                            if (this.params.preview && this.params.preview.url && t) {
                                var e = home.parseUrl(this.params.preview.url);
                                e.query.reqid = t, this.params.preview.url = home.makeUrl(e);
                            }
                            this.__base.apply(this, arguments);
                        }
                    }
                },
                _onPlay: function() {
                    var t, e = encodeURIComponent(this.params.preview.url);
                    this._activeStartTime && (t = Date.now() - this._activeStartTime, home.stat.logPath('tech', 'thumbs-preview.animation(delay=' + t + ';type=video;url=' + e + ')')), this._activeStartTime = 0, this.trigger('play'), this.__base.apply(this, arguments);
                },
                _onError: function() {
                    var t = encodeURIComponent(this.params.preview.url),
                        e = this._player && this._player[0] && this._player[0].error,
                        i = {
                            url: t
                        };
                    if (this._activeStartTime = 0, e) {
                        var n = this.__self.mediaErrorTypes;
                        n || ((n = this.__self.mediaErrorTypes = {})[MediaError.MEDIA_ERR_ABORTED] = 'load aborted', n[MediaError.MEDIA_ERR_NETWORK] = 'network error', n[MediaError.MEDIA_ERR_DECODE] = 'decode error', n[MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED] = 'src not supported'), i.type = n[e.code] || 'unknown error';
                    }
                    home.stat.logPath('tech', 'thumbs-preview.error(url=' + t + ')'), home.error.logError({
                        block: 'stream',
                        method: '_onError',
                        message: 'video-preview load error',
                        source: 'video-preview',
                        meta: i
                    }, e), this.__base.apply(this, arguments);
                },
                setPreview: function(t) {
                    this.params.preview = {
                        url: t
                    };
                },
                activeLoop: function() {
                    this.params.loop = !0;
                }
            }), BEM.afterCurrentEvent(function() {
                BEM.blocks.sidebar.addClickHandler('tv', '.tv_exp-sidebar_yes', '.tv__title, .swiper__category_selected_yes', {
                    header: 'our',
                    title: home.l10n('tv.title'),
                    turbo: !0,
                    urlChecker: function(t) {
                        var e = home.parseUrl(t);
                        return /^((m|www|pda)\.)?tv\.yandex\.(ru|ua|kz|by)$/.test(e.host);
                    }
                });
            }), BEM.DOM.decl('tv', {
                onSetMod: {
                    js: {
                        inited: function() {
                            this._updateTextOverflow(this.domElem);
                        }
                    }
                },
                _updateTextOverflow: function(t) {
                    var e = this.__self._nameLineCount;
                    t.find('.tv__item-name_long').each(function() {
                        BEM.blocks['i-multiline-overflow'].calcOverflow($(this), 2, 'tv');
                    }), t.find('.tv__name').each(function() {
                        BEM.blocks['i-multiline-overflow'].calcOverflow($(this), e, 'tv-stream');
                    });
                }
            }, {
                live: function() {
                    return !!home.getData('i-multiline-overflow.nativeSupport') || (this.liveInitOnBlockEvent('createPage', 'swiper', function(t, e) {
                        e.hasLoader || this._updateTextOverflow(e.page);
                    }), this.liveInitOnBlockEvent('togglePage', 'swiper', function(t, e) {
                        e.visible && this._updateTextOverflow(e.page);
                    }), !1);
                },
                _nameLineCount: 3
            }), BEM.DOM.decl({
                block: 'swiper',
                modName: 'load-type',
                modVal: 'tv'
            }, {
                _processExternalData: function(t) {
                    var e = {},
                        i = this.params.staticHost;
                    t.tabs.forEach(function(t) {
                        e[t.channel_id || t.key] = t.programms.map(function(e) {
                            return 'channel' === t.type && delete e.channel, e.counter = this.params.statKey + '.links.' + t.type, e.stream && e.stream.content_url && (e.counter += '.online'), this.params.nolinks && (e.href = null), t.channel_id && (e.channelId = t.channel_id), i && (e.staticHost = i), e;
                        }, this);
                    }, this), this.__base(e);
                }
            }), BEM.DOM.decl('geoblock2', {
                onSetMod: {
                    js: function() {
                        this._defaultText = '', this._bindGeolocationEvents();
                    }
                },
                _bindGeolocationEvents: function() {
                    BEM.blocks['i-geolocation'].onChanged({
                        visualStart: this._showLocateProgress.bind(this),
                        data: this._update.bind(this),
                        fail: this._showLocateError.bind(this)
                    });
                },
                _onLocateClick: function(t) {
                    $(t.target).hasClass('geoblock2__guide') || (BEM.blocks['i-geolocation'].locateAndLoad({
                        geoblock: this
                    }), this._setGuideActive());
                },
                _setGuideActive: function() {
                    $('.geoblock2__locate').removeClass('geoblock2__locate_guide_active'), this.domElem.find('.geoblock2__locate').addClass('geoblock2__locate_guide_active');
                },
                _showLocateProgress: function(t) {
                    t.geohelper && this._setLocationStatus(null, home.l10n(this.__self.getName() + '.searchInProgress'));
                },
                _showLocateError: function(t, e) {
                    var i;
                    if (!t.background) {
                        if (e && 'accuracy' === e.type) i = home.l10n('geo.geolocationInaccuracy');
                        else if (e && 'fetch' === e.type) i = home.l10n('geo.geolocationFetchFail');
                        else if (e && 'locate' === e.type && 1 === e.code) i = home.l10n('geo.geolocationDisabled');
                        else {
                            if (!e || 'region_changed' === e.type) return void(this._defaultText && this._setLocationStatus(null, this._defaultText, !0));
                            i = home.l10n('geo.geolocationFail');
                        }
                        this._setLocationStatus(e ? e.type : 'unknown', i, !0);
                        var n = this.domElem.find('.geoblock2__locate');
                        e && 'locate' === e.type && 1 === e.code ? this._showGuideLink() : n.hasClass('geoblock2__locate_guide_active') && n.removeClass('geoblock2__locate_guide_active');
                    }
                },
                _setLocationStatus: function(t, e, i) {
                    var n, o = this.domElem.find('.geoblock2__locate');
                    this.toggleMod('geoerror', 'yes', !!t), e ? (i && o.removeClass('geoblock2__locate_visibility_hidden'), n = this.domElem.find('.geoblock2__locate-text'), this._defaultText || (this._defaultText = n.html()), n.html(e)) : o.addClass('geoblock2__locate_visibility_hidden');
                },
                _showGuideLink: function() {
                    var t, e = home && home.getData && home.getData('geoguide.data'),
                        i = this.domElem.find('.geoblock2__locate_guide_active'),
                        n = $('.geoblock2__locate_guide_active .geoguide'),
                        o = i.data('guidecounter');
                    n && n.length || e && i.length && (o && o.length && home.stat.logPath('show', o), t = home.view('button', {
                        content: home.getData('geoguide.data.content'),
                        url: home.getData('geoguide.data.href'),
                        mix: home.getData('geoguide.data.mod'),
                        stat: o && o.length ? 'data-statlog="' + o + '"' : '',
                        mods: {
                            theme: this.__self.guideButtonTheme,
                            elastic: home.getData('geoguide.data.elastic')
                        }
                    }), this._appendGuideLink(i, t));
                },
                _appendGuideLink: function(t, e) {
                    t.append(e);
                },
                _update: function(t, e) {}
            }, {
                live: function() {
                    return this.liveBindTo('locate', 'click', function(t) {
                        this._onLocateClick(t);
                    }), !1;
                },
                guideButtonTheme: 'geoblock2'
            }), BEM.DOM.decl({
                block: 'afisha',
                baseBlock: 'geoblock2'
            }, {
                onSetMod: {
                    js: function() {
                        this._cinemas = {}, this._userInitiated = !0, this.__base.apply(this, arguments), home.getData('geohelper.disabled') || this._loadFavorites(), BEM.blocks['i-multiline-overflow'].calcOverflow(this.domElem, 2, 'afisha'), this.findBlockInside('scroller').addScrollStats('afisha.scroll', this.elem('film').width() / 2);
                    }
                },
                onElemSetMod: {
                    category: {
                        selected: {
                            yes: function(t) {
                                var e = t.data('stat-select'),
                                    i = t.data('key'),
                                    n = this._getSelectedCategory();
                                this.delMod(n, 'selected'), n.attr('aria-selected', 'false'), t.attr('aria-selected', 'true'), this.findBlockInside('cinemas-scroller', 'scroller').scrollToElem(t), this._showCinema(i), 'all' !== i ? BEM.blocks['i-history-storage'].setItem('afisha.category', i) : BEM.blocks['i-history-storage'].removeItem('afisha.category'), e && this._userInitiated && home.stat.logPath('click', e);
                            }
                        }
                    }
                },
                _loadFavorites: function() {
                    var t;
                    this.params.favorites && (t = 'https://' + home.getData('geo.geohelperHost') + '/geohelper/nogeoget', $.ajax({
                        dataType: 'json',
                        url: t,
                        context: this,
                        xhrFields: {
                            withCredentials: !0
                        },
                        timeout: BEM.blocks['i-const'].GEOHELPER_TIMEOUT,
                        data: {
                            geoid: home.getData('geo.id'),
                            lang: home.getData('common.locale'),
                            unsessions: 1
                        }
                    }).then(function(t) {
                        t && t.afisha && this._setFavoriteCinemas({
                            afisha: t.afisha.filter(function(t) {
                                return t.isFavorite;
                            })
                        });
                    }, function(e, i, n) {
                        home.error.logAjaxError({
                            block: 'afisha',
                            message: '_loadFavorites: ajax',
                            url: t,
                            source: 'geohelper_nogeoget'
                        }, e, i, n);
                    }));
                },
                _setFavoriteCinemas: function(t) {
                    t && t.afisha && t.afisha.length && this._setCinemas(t.afisha, this.elem('favorites-list'));
                },
                _getSelectedCategory: function() {
                    return this.findElem('category', 'selected', 'yes');
                },
                _update: function(t, e) {
                    var i = e.afisha || [],
                        n = (i || []).filter(function(t) {
                            return !t.isFavorite;
                        }).length;
                    this._clearCinemas(), n ? (this._setCinemas(i.filter(this._isNotFavorite), this.elem('cinemas-list')), this._setLocationStatus(null)) : (this._setNoCinemas(), this._setLocationStatus('empty', home.l10n('afisha.noCinemas'), !0)), this._setCinemas(i.filter(this._isFavorite), this.elem('favorites-list')), this.setMod('geo', 'yes'), this._updateCurrentCinema(t);
                },
                _isFavorite: function(t) {
                    return t.isFavorite;
                },
                _isNotFavorite: function(t) {
                    return !t.isFavorite;
                },
                _clearCinemas: function() {
                    for (var t in this._cinemas) this._cinemas.hasOwnProperty(t) && delete this._cinemas[t];
                },
                _setNoCinemas: function() {
                    this.elem('cinemas-list').empty(), this._selectedKey = undefined, this._updateCinemasScrollerSize();
                },
                _setCinemas: function(t, e) {
                    var i = 0,
                        n = 0;
                    t.forEach(function(t) {
                        this._cinemas[t.id] = t, t.isFavorite ? t.index = n++ : t.index = i++;
                    }, this), e.html(t.map(function(t) {
                        var e, i, n;
                        return this.params.nolinks && (t.href = null), e = 'afisha.tab.select.' + (n = (t.isFavorite ? 'favorites.' : 'geo.') + t.index), i = 'afisha.tab.link.' + n, home.stat.logPath('show', e), home.view('afisha__cinema-wrapper', {
                            cinema: t,
                            selectCounter: e,
                            clickCounter: i
                        }, {
                            ua: home.getData('i-ua2.data')
                        });
                    }, this).join('')), t.length && this.setMod('cinemas', 'yes'), home.stat.logDOMShow(e, {
                        visibilityCheck: !1
                    }), this._updateCinemasScrollerSize();
                },
                _updateCinemasScrollerSize: function() {
                    this.findBlockInside('cinemas-scroller', 'scroller').updateSize();
                },
                _updateCurrentCinema: function(t) {
                    var e, i, n;
                    t.background && (e = !0, n = BEM.blocks['i-history-storage'].getItem('afisha.category')), n || (n = this._selectedKey), n !== undefined && n in this._cinemas ? 'all' !== n && (i = n, this._selectedKey = undefined) : this._selectedKey = i = 'all', e && i === n && (this._userInitiated = !1), this.setMod(this.findElem('category').filter('[data-key="' + i + '"]'), 'selected', 'yes'), this._userInitiated = !0;
                },
                _showCinema: function(t) {
                    var e = this._cinemas[t];
                    t !== this._selectedKey && (this._selectedKey = t, 'all' === t || e.sessions ? this._showCinemaFilms(t) : this._loadCinemaFilms(t));
                },
                _loadCinemaFilms: function(t, e) {
                    var i, n = this,
                        o = 'https://' + home.getData('geo.geohelperHost') + '/geohelper/get_cinema_sessions';
                    i = setTimeout(function() {
                        n._selectedKey === t && (n.setMod('has-films', 'no'), n._showNoFilms(n._renderScheduleInProgress()));
                    }, e ? 0 : 500), $.ajax({
                        dataType: 'json',
                        url: o,
                        xhrFields: {
                            withCredentials: !0
                        },
                        timeout: BEM.blocks['i-const'].GEOHELPER_TIMEOUT,
                        data: {
                            id: t,
                            geoid: home.getData('geo.id'),
                            lang: home.getData('common.locale')
                        }
                    }).then(function(e) {
                        t in n._cinemas && (n._cinemas[t].sessions = e && e.length ? e : []), n._showCinemaFilms(t);
                    }, function(e, i, s) {
                        home.error.logAjaxError({
                            block: 'afisha',
                            message: '_loadCinemaFilms: ajax',
                            url: o,
                            source: 'geohelper_get_cinema'
                        }, e, i, s), n._selectedKey === t && (n.setMod('has-films', 'no'), n._showNoFilms(n._renderScheduleError()));
                    }).always(function() {
                        clearTimeout(i);
                    });
                },
                _showCinemaFilms: function(t) {
                    var e, i = this.elem('films'),
                        n = this.findBlockInside('films-scroller', 'scroller'),
                        o = this._cinemas[t],
                        s = o && (o.isFavorite ? 'favorites' : 'geo');
                    this._selectedKey === t && (e = !!('all' === t || o && o.sessions && o.sessions.length), !this._$allFilms && e && (this._$allFilms = i.children().detach()), 'all' === t ? (i.empty().append(this._$allFilms), this._$allFilms = null, this.delMod(this.elem('films'), 'times')) : o && o.sessions && o.sessions.length && (i.html(o.sessions.map(function(t, e) {
                        var i = 'afisha.links.' + s + '.' + e + '.' + o.index;
                        return t.events && t.events.length && t.events.forEach(function(t) {
                            t.counter = 'afisha.timetable.' + s + '.' + (t.href ? 'ticket' : 'link') + '.' + o.index, this.params.nolinks && (t.href = null);
                        }, this), this.params.nolinks && (t.href = null), home.view('afisha__film', {
                            film: t,
                            clickCounter: i
                        });
                    }, this).join('')), home.stat.logDOMShow(i, {
                        visibilityCheck: !1
                    }), this.setMod(this.elem('films'), 'times', 'yes')), this.domElem.bem('imageloader').updateItems(), e || this._showNoFilms(this._renderNoFilms(o.href && home.addQueryToUrl(o.href, {
                        'schedule-preset': 'tomorrow'
                    }), s)), this.toggleMod('has-films', 'no', !e), n.updateSize(), n.scrollTo(0), BEM.blocks['i-multiline-overflow'].calcOverflow(this.domElem, 2, 'afisha'));
                },
                _showNoFilms: function(t) {
                    this._$noFilms && this._$noFilms.remove(), this._$noFilms = $(home.view('afisha__no-films', {
                        content: t
                    })).appendTo(this.elem('films-wrapper')), home.stat.logDOMShow(this._$noFilms, {
                        visibilityCheck: !1
                    });
                },
                _renderScheduleInProgress: function() {
                    return home.view('afisha__schedule-loading', {});
                },
                _renderScheduleError: function() {
                    return home.view('afisha__no-films-button', {
                        text: home.l10n('afisha.scheduleError'),
                        link: home.view('button', {
                            mods: {
                                theme: 'dark-pseudo',
                                size: 'afisha'
                            },
                            attrs: {
                                'data-statlog': 'afisha.shedule_error.retry'
                            },
                            stat: '',
                            mix: 'afisha__no-films-link afisha__schedule-retry',
                            content: home.l10n('afisha.scheduleTryAgain')
                        })
                    });
                },
                _renderNoFilms: function(t, e) {
                    return home.view('afisha__no-films-button', {
                        text: home.l10n('afisha.cinemaNoSessions'),
                        link: this.params.nolinks ? '' : home.view('button', {
                            mods: {
                                theme: 'dark-pseudo',
                                size: 'afisha'
                            },
                            attrs: {
                                'data-statlog': 'afisha.no_timetable.' + e
                            },
                            stat: '',
                            url: t,
                            mix: 'afisha__no-films-link',
                            content: home.l10n('afisha.cinemaSeeNextDay')
                        })
                    });
                },
                _onCategoryClick: function(t) {
                    var e = $(t.target).closest('.afisha__category');
                    'yes' !== this.getMod(e, 'selected') ? (this.setMod(e, 'selected', 'yes'), t.preventDefault()) : home.stat.redirect(e[0], e.data('stat-link'));
                }
            }, {
                live: function() {
                    return this.__base.apply(this, arguments), this.liveBindTo('category', 'click', function(t) {
                        return this._onCategoryClick(t);
                    }), this.liveBindTo('schedule-retry', 'click', function() {
                        this._loadCinemaFilms(this._selectedKey, !0);
                    }), !1;
                }
            }), home.stringf = function(t) {
                var e = Array.prototype.slice.call(arguments, 1);
                return t.replace(/%s/g, function() {
                    return e.shift() || '';
                });
            },
            function() {
                function t(t) {
                    return (t || '').replace(/(^|\s)([а-яёa-z]{1,2})(\s)/gi, '$1$2&nbsp;');
                }

                function e(t) {
                    return (t || '').replace(/(\d)\s(\d)/g, '$1&nbsp;$2');
                }

                function i(t) {
                    return (t || '').replace(/(\S)(\s)([^а-яёa-z\d\s]{1,2})(\s|$)/gi, '$1&nbsp;$3$4');
                }

                function n(t) {
                    return (t || '').replace(/\s([а-яёa-z\d.]{1,2})$/gi, '&nbsp;$1');
                }

                function o(t) {
                    return (t || '').replace(/(\s|^)([а-яёa-z\d]{1,3}-[а-яёa-z\d]{1,3})(\s|$)/gi, '$1<nobr>$2</nobr>$3');
                }
                home.prepareSpaces = t, home.prepareSpaces.digits = e, home.prepareSpaces.punctuation = i, home.prepareSpaces.shortEnding = n, home.prepareSpaces.aroundHyphen = o, home.prepareSpaces.full = function(s) {
                    return n(i(t(e(o(s)))));
                };
            }(), BEM.DOM.declMix('mix-tabber', {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.__base.apply(this, arguments), this._keys = this._getKeys(), this._data = this._getInitData(), this._selectedKey = this._defaultKey = this._getDefaultKey(), this._panels = {}, this._defaultPanels = {}, this._statRoot = this.params.statRoot || this.__self.getName(), this.elem('panel').toArray().forEach(function(t) {
                                var e = $(t),
                                    i = e.data('key');
                                this._panels[i] = e, this._defaultPanels[i] = !0;
                            }, this), this._$panel = this._panels[this._defaultKey];
                        }
                    }
                },
                _getKeys: function() {
                    return this.params.keys;
                },
                _getDefaultKey: function() {
                    return this.params.selectedKey;
                },
                _getInitData: function() {
                    return this.params.data || {};
                },
                _selectTab: function(t, e) {
                    e = e || {}, this._selectedKey === t || this._selectedParentKey === t && !e.parentKey || this._changeTab(t, e);
                },
                _changeTab: function(t, e) {
                    var i = !this._panels[t],
                        n = this._panels[t] || (this._panels[t] = this._createPanel(t));
                    this._togglePanel(this._selectedKey, this._$panel, !1), this._togglePanel(t, n, !0), this._$panel = n, this._selectedKey = t, this._selectedParentKey = e.parentKey, this._afterPanelChange(t, n, !i);
                },
                _mapKeyToIndex: function(t) {
                    return this._keys.indexOf(t);
                },
                _createPanel: function(t) {
                    var e = $(home.view('mix-tabber__panel', {
                        block: this.__self.getName(),
                        id: this._uniqId,
                        key: t,
                        attrs: this._getPanelAttrs(t)
                    }));
                    return this._renderPanelInner(t, e, this._data[t]), e;
                },
                _getPanelAttrs: function() {
                    return {};
                },
                _renderPanelInner: function(t, e, i) {
                    e.append(this._getPanelHTML(t, i));
                },
                _afterPanelChange: function(t, e, i) {
                    i || this._onPanelDraw(t, e), this._onPanelChange(t, e);
                },
                _onPanelDraw: function(t, e) {
                    BEM.DOM.init(e), home.stat.logDOMShow(e);
                },
                _onPanelChange: function() {},
                _getPanelHTML: function() {
                    return '';
                },
                _togglePanel: function(t, e, i) {
                    e.attr('aria-hidden', i ? 'false' : 'true'), this._toggleMountPanel(t, e, i);
                },
                _toggleMountPanel: function(t, e, i) {
                    i ? e.parent().length ? e.css('display', '') : this.elem('panels').append(e) : e.css('display', 'none');
                }
            }), BEM.DOM.declMix('mix-tabber-labels', {
                _getKeys: function() {
                    var t = this.elem('tab');
                    return t.length ? t.toArray().map(function(t) {
                        return String($(t).data('key'));
                    }) : this.__base.apply(this, arguments);
                },
                _getDefaultKey: function() {
                    var t = this.elem('tab', 'selected', 'yes');
                    return t.length ? String(t.data('key')) : this.__base.apply(this, arguments);
                },
                _changeTab: function(t, e) {
                    this.__base.apply(this, arguments);
                    var i = this.elem('tab', 'selected', 'yes'),
                        n = this.elem('tab').filter('[data-key="' + (e.parentKey || t) + '"]');
                    this._toggleLabelSelection(i, !1), this._toggleLabelSelection(n, !0), e.focus && n.focus();
                },
                _toggleLabelSelection: function(t, e) {
                    t.attr({
                        tabindex: e ? 0 : -1,
                        'aria-selected': e ? 'true' : 'false',
                        'aria-controls': e ? this._uniqId + '_panel_' + this._selectedKey : null
                    }), this.toggleMod(t, 'selected', 'yes', 'no', e), t.toggleClass('mix-tabber__tab_selected_yes mix-tabber__tab_selected_no');
                },
                _getPanelAttrs: function(t) {
                    return {
                        'aria-labelledby': this._uniqId + '_tab_' + t
                    };
                },
                _onTabClick: function(t) {
                    var e = t.data.domElem,
                        i = String(e.data('key')),
                        n = this._selectedKey === i;
                    return this._selectTab(i), n ? home.stat.redirect(e[0], e.data('stat-link')) : home.stat.logPath('click', e.data('stat-select')), n;
                }
            }, {
                live: function() {
                    this.__base.apply(this, arguments), this.liveBindTo('tab', 'pointerclick', function(t) {
                        return this._onTabClick(t);
                    });
                }
            }), BEM.DOM.decl({
                block: 'tutor',
                baseMix: ['mix-tabber', 'mix-tabber-labels']
            }, {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.__base.apply(this, arguments), this._calcOverflow(this.domElem), this._addScrollStats(this.elem('panel'));
                        }
                    }
                },
                _onPanelChange: function(t, e) {
                    this.__base.apply(this, arguments), this._loadImages(), this._calcOverflow(e), this._addScrollStats(e);
                },
                _loadImages: function() {
                    var t = this.findBlockInside(this._$panel, 'imageloader');
                    t && t.setMod('visible', 'yes');
                },
                _calcOverflow: function(t) {
                    BEM.blocks['i-multiline-overflow'].calcOverflow(t, 2, 'tutor');
                },
                _addScrollStats: function(t) {
                    var e = t || this._$panel,
                        i = this.findBlockInside(e, 'scroller');
                    i && i.addScrollStats('tutor.scroll', e.find('.tutor__card').width() / 2);
                }
            }, {
                live: function() {
                    return this.__base.apply(this, arguments), !1;
                }
            }), BEM.DOM.decl('etrains', {
                onSetMod: {
                    js: function() {
                        var t;
                        this._staticData = home.getData('etrains.data'), t = this._staticData.rasp_widget_host + 'widgets/suburban/next_trains?rnd=' + +new Date() + '&locale=' + home.getData('common.locale') + '&n=' + (this._staticData.n || '5') + '&rasp_to=' + this._staticData.rasp_to + '&rasp_from=' + this._staticData.rasp_from, $.get(t, this.changeThis(this._update), 'jsonp').fail(function(e, i, n) {
                            home.error.logAjaxError({
                                block: 'etrains',
                                message: 'onSetMod.js: get',
                                url: t,
                                source: 'rasp'
                            }, e, i, n);
                        });
                    }
                },
                _update: function(t) {
                    var e = this,
                        i = [{
                            href: this._staticData.href_back,
                            title: t.from.name + '&nbsp;\u2192&nbsp;' + t.to.name,
                            selected: !0,
                            key: '0',
                            list: t.routes_forward.map(function(t, i) {
                                return e._prepareItem(t, 'forward', i);
                            }, this),
                            linkCounter: 'etrains.forward.title.link',
                            selectCounter: 'etrains.forward.title.select'
                        }, {
                            href: this._staticData.href,
                            title: t.to.name + '&nbsp;\u2192&nbsp;' + t.from.name,
                            selected: !1,
                            key: '1',
                            list: t.routes_backward.map(function(t, i) {
                                return e._prepareItem(t, 'backward', i);
                            }, this),
                            linkCounter: 'etrains.backward.title.link',
                            selectCounter: 'etrains.backward.title.select'
                        }];
                    this.domElem.html(home.view('swiper', {
                        title: home.l10n('etrain.shortTitle'),
                        href: this._staticData.href,
                        titleStat: ' data-statlog="etrains.title"',
                        mod: 'swiper_different_yes',
                        block: 'etrains',
                        itemParams: {
                            itemView: 'etrains__item'
                        },
                        tabs: i,
                        ua: home.getData('i-ua2.data')
                    })), home.stat.logDOMShow(this.domElem, {
                        visibilityCheck: !1
                    }), home.stat.logPath('show', 'etrains.forward.title.select'), home.stat.logPath('show', 'etrains.backward.title.select');
                },
                _prepareItem: function(t, e, i) {
                    return {
                        href: this._staticData.rasp_host + 'thread/' + t.uid,
                        text: t.title,
                        time: t.departure,
                        express: t.express ? home.l10n('etrain.express') : '',
                        counter: 'etrains.' + e + '.links.' + i
                    };
                }
            }), BEM.DOM.decl({
                block: 'schedule',
                baseBlock: 'geoblock2'
            }, {
                _update: function(t, e) {
                    var i;
                    e.rasp && e.rasp.length ? this._setLocationStatus(null) : this._setLocationStatus('empty', home.l10n('schedule.noStations'), !0), (i = this.findBlockOn('swiper')).setData(this._processData(e.rasp)), t.background && i.restoreSavedCategory() || BEM.blocks['i-history-storage'].removeItem('schedule.category');
                },
                _setLocationStatus: function(t, e, i) {
                    this.__base.apply(this, arguments), this.afterCurrentEvent(function() {
                        this.findBlockOn('swiper').updateHeight();
                    });
                },
                _addLink: function(t, e, i) {
                    t.push({
                        text: e,
                        href: i
                    });
                },
                _addAeroexpress: function(t, e, i) {
                    e.aeroexpress && e.aeroexpress_url && e.aeroexpress_to && (t.push({
                        text: home.stringf(home.l10n('schedule.aeroexpressTo'), home.l10n('schedule.aeroexpress.' + e.aeroexpress_to.code)),
                        href: e.aeroexpress_url,
                        info: e.aeroexpress.join(', '),
                        itemView: 'schedule__station-item-complex'
                    }), i && this._addLink(t, home.stringf(home.l10n('schedule.board'), home.l10n('schedule.airport.' + e.aeroexpress_to.code)), e.airport));
                },
                _addMapLink: function(t, e) {
                    t.push({
                        text: home.l10n('schedule.showMap'),
                        href: e.map_link,
                        info: home.view('dist', {
                            dist: e.distance,
                            mod: '',
                            theme: ''
                        }),
                        itemView: 'schedule__station-item-subinfo',
                        attrs: this.params.openapp ? home.getAttributes({
                            'data-app': 'maps',
                            'data-app-query': ['utm_source=morda', 'utm_medium=schedule__station', 'yandexuid=' + home.getData('common.yu'), 'desc=' + encodeURIComponent(e.title || e.popular_title)].join('&')
                        }) : ''
                    });
                },
                _processData: function(t) {
                    var e = this;
                    return t && t.length ? t.map(function(t, i) {
                        var n = [];
                        return 'train' === t.type ? (e._addLink(n, home.l10n('schedule.el'), t.suburbans_url), e._addLink(n, home.l10n('schedule.train'), t.trains_url), e._addAeroexpress(n, t, !0)) : 'suburban' === t.type ? (e._addMapLink(n, t), e._addLink(n, home.l10n('schedule.schedule'), t.rasp_link)) : 'plane' === t.type && (e._addLink(n, home.l10n('schedule.departure'), t.departure_table), e._addLink(n, home.l10n('schedule.arrival'), t.arrival_table), e._addAeroexpress(n, t, !1)), n.forEach(function(t) {
                            t.counter = 'rasp.yes.links.' + i;
                        }), {
                            title: t.title || t.popular_title,
                            info: t.distance ? home.view('dist', {
                                dist: t.distance,
                                theme: '',
                                mod: 'dist_inherit_yes'
                            }) : '',
                            index: i,
                            key: t.code,
                            selected: !1,
                            href: t.rasp_link,
                            list: n,
                            linkCounter: 'rasp.tab.link.' + i,
                            selectCounter: 'rasp.tab.select.' + i
                        };
                    }) : [];
                }
            }), BEM.DOM.declMix('mix-tabber-loader', {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.__base.apply(this, arguments), this._dataPromises = {};
                        }
                    }
                },
                _renderPanelInner: function(t, e, i) {
                    i ? this.__base.apply(this, arguments) : (e.append(this._renderLoader(t)).css('min-height', this._$panel.height()), this._loadAndDrawData(t, e));
                },
                _renderLoader: function() {
                    return '<div class="' + this.__self.getName() + '__loader loader"></div>';
                },
                _afterPanelChange: function(t, e, i) {
                    this._data[t] || this._defaultPanels[t] ? this.__base(t, e, i) : BEM.DOM.init(e);
                },
                _loadAndDrawData: function(t, e) {
                    return this._loadDataWrapped(t).then(this._drawData.bind(this, t, e, !0), this._drawData.bind(this, t, e, !1));
                },
                _drawData: function(t, e, i) {
                    if (t !== this._selectedKey) return delete this._panels[t], void e.remove();
                    var n;
                    try {
                        i && (n = this._getPanelHTML(t, this._data[t]));
                    } catch (o) {
                        home.error.logError({
                            block: this.__self.getName(),
                            message: o,
                            meta: {
                                key: t
                            },
                            sourceType: 'render'
                        });
                    }
                    n || (n = this._getPanelRetry(t)), e.html(n), this._onPanelReplace(t, e), i ? (this._onPanelDraw(t, e), this._onPanelChange(t, e)) : home.stat.logDOMShow(e);
                },
                _onPanelReplace: function(t, e) {
                    e.css('min-height', '');
                },
                _loadDataWrapped: function(t, e) {
                    return e = e || {}, this._dataPromises[t] || this._data[t] && !e.forceReload ? this._dataPromises[t] || Promise.resolve(this._data[t]) : (this._dataPromises[t] = this._loadData(t).then(function(e) {
                        return e && (this._data[t] = e), e;
                    }.bind(this), function(e) {
                        throw this._dataPromises[t] = null, home.error.logError({
                            block: this.__self.getName(),
                            meta: {
                                key: t
                            },
                            sourceType: 'network'
                        }, e), e;
                    }.bind(this)), this._dataPromises[t]);
                },
                _loadData: function() {
                    return Promise.reject('Not implemented');
                },
                _getPanelRetry: function(t) {
                    return home.view('mix-tabber-loader__retry', {
                        buttonMods: this._getRetryButtonMods(),
                        key: t,
                        block: this.__self.getName(),
                        statRoot: this._statRoot
                    });
                },
                _getRetryButtonMods: function() {
                    return {
                        theme: this.params.retryButtonTheme,
                        size: 's'
                    };
                },
                _onRetryClick: function(t) {
                    var e = this._panels[t];
                    e && (e.html(this._renderLoader(t)), BEM.DOM.init(e), this._loadAndDrawData(t, e));
                }
            }, {
                live: function() {
                    this.__base.apply(this, arguments), this.liveBindTo('retry-button', 'pointerclick', function(t) {
                        return this._onRetryClick(String(t.data.domElem.data('key'))), !1;
                    });
                }
            }), BEM.DOM.decl({
                block: 'edadeal',
                baseBlock: 'geoblock2',
                baseMix: ['mix-tabber', 'mix-tabber-loader', 'mix-tabber-labels']
            }, {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.__base.apply(this, arguments);
                            var t = BEM.blocks['i-history-storage'].getItem('edadeal.category');
                            'home' !== this._selectedKey || t && 'home' !== t ? ('near' !== this._selectedKey || t && 'near' !== t) && (t ? this._selectTab(t) : this._countScroller(this.findBlockInside('panel[data-key="all"]', 'scroller'))) : this._loadAndDrawData('home', this._$panel), this._countTabsScroller(this.findBlockInside('tabs-scroller', 'scroller'));
                        }
                    }
                },
                _bindGeolocationEvents: function() {
                    BEM.blocks['i-geolocation'].onChanged({
                        data: this._update.bind(this),
                        fail: this._showLocateError.bind(this)
                    });
                },
                _getInitData: function() {
                    return {
                        all: home.getData('edadeal.all')
                    };
                },
                _getPanelHTML: function(t, e) {
                    var i;
                    return e.nearRequested ? home.view('edadeal__geo', {
                        status: home.l10n('edadeal.searchInProgress')
                    }) : (e.key = t, 'all' === t ? i = e.localityURL || !1 : 'near' === t ? i = e.near_locality_url || !1 : 'home' === t && (i = e.home_locality_url || !1), i && (e.showAll = home.view('edadeal__all', {
                        img: this.params.logo,
                        href: i,
                        stat: 'data-statlog="edadeal.show_all.tab.' + t + '"'
                    })), home.view('edadeal__panel-contents', {
                        items: home.view('edadeal__items', e)
                    }));
                },
                _getPanelRetry: function() {
                    return home.view('edadeal__geo', {
                        status: home.l10n('geo.geolocationFetchFail')
                    });
                },
                _onPanelChange: function(t) {
                    this._data[t] || 'home' !== t || this._loadAndDrawData('home', this._$panel), this._loadImages(), BEM.blocks['i-multiline-overflow'].calcOverflow(this._$panel, 2, 'edadeal'), this._storeHistory(t);
                },
                _onPanelDraw: function() {
                    var t = this.findBlockInside(this._$panel, 'scroller');
                    t && this._countScroller(t), this.__base.apply(this, arguments);
                },
                _loadImages: function() {
                    var t = this.findBlockInside(this._$panel, 'imageloader');
                    t && t.setMod('visible', 'yes');
                },
                _storeHistory: function(t) {
                    t !== this.params.defaultTab ? BEM.blocks['i-history-storage'].setItem('edadeal.category', t) : BEM.blocks['i-history-storage'].removeItem('edadeal.category');
                },
                _countScroller: function(t) {
                    var e = this;
                    t.addScrollStats(function() {
                        return 'edadeal.scroll.items.' + e._selectedKey;
                    }, this.elem('item').width() / 2);
                },
                _countTabsScroller: function(t) {
                    t.addScrollStats('edadeal.scroll.tabs', this.elem('category').width() / 2);
                },
                _update: function(t, e) {
                    var i = e.edadeal;
                    if (i && i.distance && i.distance < 1000) return this.setMod(this.elem('tab').filter('[data-key="near"]'), 'hidden', 'yes'), void this._selectTab('home');
                    if (i && i.near && i.near.length) {
                        var n = e.edadeal.near_locality_url || !1;
                        this._data.near = i, this._updateTabUrl('near', n);
                    }
                    this._data.near && this._panels.near ? this._drawData('near', this._panels.near, !0) : this._data.near || (this._setLocationStatus(null, home.l10n('edadeal.notFound')), setTimeout(function() {
                        this._selectTab('all');
                    }.bind(this), 2000));
                },
                _updateTabUrl: function(t, e) {
                    e && this.domElem.find('.edadeal__tab[data-key="' + t + '"]').attr('href', e);
                },
                _loadData: function(t) {
                    return 'home' === t ? this._loadHomeShopsList() : 'near' === t ? (BEM.blocks['i-geolocation'].locateAndLoad({
                        geoblock: this
                    }), Promise.resolve({
                        nearRequested: !0
                    })) : Promise.reject('Not implemented');
                },
                _loadHomeShopsList: function() {
                    var t, e = home.getData('geo.id'),
                        i = home.getData('common.locale'),
                        n = home.getData('geo.home'),
                        o = this;
                    if (n && n.lat && n.lon) return t = 'https://' + home.getData('geo.geohelperHost') + '/geohelper/get_edadeal?' + (e ? 'geoid=' + encodeURIComponent(e) + '&' : '') + 'lat=0&lon=0&hlat=' + encodeURIComponent(n.lat) + '&hlon=' + encodeURIComponent(n.lon) + '&lang=' + encodeURIComponent(i) + '&bigradius=1', new Promise(function(e, i) {
                        $.ajax({
                            dataType: 'json',
                            type: 'get',
                            url: t,
                            xhrFields: {
                                withCredentials: !0
                            },
                            timeout: 20000
                        }).then(e, i);
                    }).then(function(t) {
                        var e = t.edadeal;
                        return e.home.length && e.home_locality_url ? e : Promise.reject();
                    }, function(e, i, n) {
                        return home.error.logAjaxError({
                            block: 'edadeal',
                            message: '_getHomeShopsList: ajax',
                            url: t,
                            source: 'geohelper_edadeal'
                        }, e, i, n), o._homeRejected || (setTimeout(function() {
                            o._selectTab('all');
                        }, 2000), o._homeRejected = !0), Promise.reject();
                    });
                },
                _setLocationStatus: function(t, e) {
                    if (this._panels.near) {
                        var i, n = this.findElem(this._panels.near, 'geo-text'),
                            o = n.find('.geoguide');
                        e && this.findElem(this._panels.near, 'geo-status').html(e), 'locate' !== t || o && o.length || !n.length || (i = home.view('link', {
                            content: home.getData('geoguide.data.content'),
                            href: home.getData('geoguide.data.href'),
                            mod: home.getData('geoguide.data.mod'),
                            stat: 'data-statlog="edadeal.guide"'
                        }), n.append(i), home.stat.logPath('show', 'edadeal.guide'));
                    }
                }
            }, {
                live: function() {
                    return this.__base.apply(this, arguments), !1;
                }
            }), BEM.DOM.decl({
                block: 'district',
                baseBlock: 'geoblock2'
            }, {
                onSetMod: {
                    js: function() {
                        this.__base.apply(this, arguments), this._posts = {}, this._scroller = this.findBlockOn('scroller', 'scroller'), this._rtxreqids = this.params.rtxreqids, this.params.isLogged ? this._getPersonalPosts(home.getData('geo.home'), home.getData('geo.work')) : this._logRtxCounter('top'), home.stat.logDOMShow(this.domElem);
                    },
                    tab: function(t, e) {
                        this._scroller.scrollTo(0, !1), 'top' === e ? this.delMod('promo') : this._posts[e] ? this._renderContent(e) : 'near' !== e || this._hasGeoData ? this.setMod('source', 'top') : this._requestGeo(), this._updateFeedAllText(e), home.stat.logDOMShow(this.domElem);
                    },
                    source: {
                        top: function() {
                            this.delMod('promo');
                        }
                    }
                },
                onElemSetMod: {
                    category: {
                        selected: {
                            yes: function(t) {
                                var e = this.getMod(t, 'tab'),
                                    i = this.findElem('category', 'selected', 'yes');
                                this.delMod(i, 'selected'), i.attr('aria-selected', 'false'), this.setMod('tab', e), t.attr('aria-selected', 'true');
                            }
                        }
                    }
                },
                _updateFeedAllText: function(t) {
                    var e = this.findElem('button', 'type', 'feed-all'),
                        i = this.findElem('button', 'type', 'feed-all-alt');
                    e && e.length && (this.findBlockInside(e, 'button').domElem.attr('href', this.params.feedLinks[t]), this.findBlockInside(e, 'button').elem('text').text(this.params.buttonContents['near' === t ? 'near' : 'my'])), i && i.length && (this.findBlockInside(i, 'button').domElem.attr('href', this.params.feedLinks[t]), this.findBlockInside(i, 'button').elem('text').text(this.params.buttonContents['near' === t ? 'near' : 'my']));
                },
                _savePosts: function(t, e) {
                    return !(!e || e.length <= this.__self.MIN_POSTS_COUNT) && (this._posts[t] = e, !0);
                },
                _setCategory: function(t) {
                    var e = this.findElem('category', 'selected', 'yes'),
                        i = this.findElem('category', 'tab', t);
                    this.setMod('tab', t), this.delMod(e, 'selected'), this.setMod(i, 'selected', 'yes');
                },
                _update: function(t, e) {
                    var i = e && Array.isArray(e.yalocal) && e.yalocal;
                    this._hasGeoData = !0, this._savePosts('near', i) && this._saveRtx('near', e.yalocal_rtxreqid), this.hasMod('loader') || 'near' !== this.getMod('tab') ? 'top' === this.getMod('tab') && 'no' === this.getMod('viewed') && this._setCategory('near') : this._posts.near ? this._renderContent('near') : 'no' === this.getMod('viewed') ? this.setMod('tab', 'top') : this.setMod('source', 'top');
                },
                _renderPosts: function(t) {
                    var e = this._posts[t];
                    return home.stat.logPath('show', 'district.more'), home.view('district__posts', {
                        posts: e,
                        tab: t,
                        feedLinks: this.params.feedLinks,
                        utm: 'top' === t ? this.params.topUtm : this.params.postUtm,
                        coloredAvatars: this.params.coloredAvatars
                    });
                },
                _renderContent: function(t) {
                    this.delMod('promo'), this.elem('posts', 'type', t).html(this._renderPosts(t)), this.afterCurrentEvent(function() {
                        this.elem('posts', 'type', t).children().each(function(t, e) {
                            var i = $(e).find('.i-multiline-overflow').data('lines');
                            BEM.blocks['i-multiline-overflow'].calcOverflow($(e), i, 'district');
                        }), this._scroller.addScrollStats('district.scroll', this.elem('post').width() / 2), home.stat.logDOMShow(this.domElem);
                    }), this._updateFeedAllText(t), this._logRtxCounter(t);
                },
                _onCategoryClick: function(t) {
                    var e = t.data.domElem,
                        i = e.data('stat-select');
                    'yes' !== this.getMod(e, 'selected') ? (home.stat.logPath('click', i), this.setMod(e, 'selected', 'yes'), t.preventDefault()) : home.stat.redirect(e[0], e.data('stat-link'));
                },
                _appendGuideLink: function(t, e) {
                    t.find('.district__geo-text').append(e);
                },
                _getPersonalPosts: function(t, e) {
                    if (this.params.isLogged) {
                        var i = BEM.blocks['i-geolocation'].getZone(),
                            n = home.getData('common.exps', ''),
                            o = {
                                mordazone: i
                            };
                        t && (o.hlat = t.lat, o.hlon = t.lon), e && (o.wlat = e.lat, o.wlon = e.lon), n && (o.experiments = n);
                        var s = home.makeUrl({
                            scheme: 'https',
                            host: home.getData('geo.geohelperHost'),
                            path: '/geohelper/api/v2/yalocal',
                            query: o
                        });
                        this.setMod('loader', 'yes'), $.ajax({
                            dataType: 'json',
                            url: s,
                            timeout: 30000,
                            context: this,
                            xhrFields: {
                                withCredentials: !0
                            }
                        }).then(function(t) {
                            t.yalocal && t.yalocal.my && this._savePosts('my', t.yalocal.my) ? (this._saveRtx('my', t.yalocal.rtxreqid), this._setCategory('my'), this.setMod('mode', 'personal')) : this.setMod('tab', 'top');
                        }.bind(this), function(t, e, i) {
                            this.setMod('tab', 'top'), home.error.logAjaxError({
                                block: 'district',
                                message: '_getPersonalPosts: ajax',
                                url: s,
                                source: 'geohelper_yalocal'
                            }, t, e, i);
                        }.bind(this)).always(function() {
                            this.delMod('loader');
                        }.bind(this));
                    }
                },
                _requestGeo: function() {
                    this.setMod('promo', 'geo'), BEM.blocks['i-geolocation'].locateAndLoad({
                        geoblock: !0
                    }), $('.geoblock2__locate').removeClass('geoblock2__locate_guide_active'), this.domElem.find('.geoblock2__locate').addClass('geoblock2__locate_guide_active');
                },
                _saveRtx: function(t, e) {
                    this._rtxreqids[t] = e;
                },
                _logRtxCounter: function(t) {
                    var e = this._rtxreqids[t];
                    e && home.stat.logPath('show', 'district.' + t + '.rtx', {
                        customParams: {
                            rtxreqid: e
                        }
                    });
                }
            }, {
                live: function() {
                    return this.liveBindTo('category', 'click', function(t) {
                        this._onCategoryClick(t);
                    }), this.liveBindTo('locate-action', 'click', function() {
                        this.setMod('tab', 'near');
                    }), !1;
                },
                MIN_POSTS_COUNT: 2,
                SCROLL_THROTTLE_TIMEOUT: 200
            }), home.shuffle = function(t) {
                for (var e = 0, i = t.length; e < i; ++e) {
                    var n = Math.floor((i - e) * Math.random()),
                        o = t[e];
                    t[e] = t[e + n], t[e + n] = o;
                }
                return t;
            },
            function() {
                home.cleverString = {};
                var t;
                t = function(t, e) {
                    var i = t.charCodeAt(),
                        n = e.charCodeAt();
                    return i >= 55296 && i <= 56319 && n >= 56320 && n <= 57343;
                }, home.cleverString.length = function(e) {
                    if (void 0 === e || null === e) return 0;
                    for (var i = 0, n = e.length, o = 0; i < n;) ++i < n && t(e[i - 1], e[i]) && ++i, ++o;
                    return o;
                }, home.cleverString.substring = function(e, i, n) {
                    if ('string' != typeof e) return e;
                    'number' != typeof i && (i = 0), n || 0 === n || (n = Infinity);
                    for (var o, s = [], r = i + n, a = 0, c = e.split(''), h = c.length, l = 0; a <= h;) o = 1, a + 1 < h && t(e[a], e[a + 1]) && (o = 2), l >= i && l < r && s.push(c.slice(a, a + o).join('')), a += o, ++l;
                    return s.join('');
                }, home.cleverString.cutMiddleOfString = function(t, e, i) {
                    var n = home.cleverString.length(t);
                    return 'string' != typeof t || n < 3 || 'number' != typeof e || 'number' != typeof i ? t : -1 === e || -1 === i ? '' : n > e + 1 + i ? home.cleverString.substring(t, 0, e) + '\u2026' + home.cleverString.substring(t, n - i) : t;
                }, home.cleverString.cutEndOfString = function(t, e) {
                    return home.cleverString.cutMiddleOfString(t, e - 1, 0);
                }, home.cleverString.cutStartOfString = function(t, e) {
                    return home.cleverString.cutMiddleOfString(t, 0, e - 1);
                };
            }(), home.decline = function(t, e) {
                return e && e.length ? 0 === t && e[3] ? e[3] : e[1] || e[2] ? e[2] ? ((t %= 100) >= 20 && (t %= 10), 1 === t ? e[0] : t > 1 && t < 5 ? e[1] : e[2]) : t >= 0 && t <= 1 ? e[0] : e[1] : e[0] : '';
            }, BEM.DOM.decl({
                block: 'district2',
                baseBlock: 'geoblock2',
                baseMix: ['mix-tabber', 'mix-tabber-labels', 'mix-tabber-loader']
            }, {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.__base.apply(this, arguments), this._rtxreqids = this.params.rtxreqids, this._addScrollStats(this.elem('panel')), this.params.isLogged ? this._loadAndDrawPersonalData() : this._logRtxCounter('top');
                        }
                    },
                    loading: {
                        '': function() {
                            this.elem('tab').attr('aria-disabled', 'false');
                        }
                    }
                },
                _getInitData: function() {
                    return home.getData('district2.data', {});
                },
                _selectTab: function() {
                    if (!this.getMod('loading')) return this.__base.apply(this, arguments);
                },
                _changeTab: function() {
                    this.__base.apply(this, arguments), this._handleFooterVisibility();
                },
                _onPanelChange: function(t, e) {
                    this._handleFooterVisibility(t), this._loadImages(), this._addScrollStats(), 'near' !== t || Array.isArray(this._data.near) || this._setGuideActive(), this.findElem(e, 'post').each(function(t, e) {
                        var i = $(e),
                            n = 'no' === this.getMod(i, 'meta') ? 6 : 5;
                        BEM.blocks['i-multiline-overflow'].calcOverflow(i, n, 'district2');
                    }.bind(this)), this._logRtxCounter(t);
                },
                _getPanelHTML: function(t, e) {
                    var i = this.getMod('dark');
                    return 'near' !== t || Array.isArray(e) ? Array.isArray(e) ? home.view('district2__panel-contents', {
                        items: home.view('district2__posts', {
                            posts: e,
                            tab: t,
                            utm: '&utm_source=m_yandex&utm_medium=promoblock&utm_content=post',
                            moreUrl: this.params.moreUrl,
                            hasImageFlag: this.params.hasImageFlag,
                            coloredAvatars: this.params.coloredAvatars
                        }),
                        'imageloader-theme': i ? 'light-on-dark' : 'light'
                    }) : '' : home.view('district2__panel_near', {
                        locate: home.view('district2__locate', {
                            darkMode: i
                        })
                    });
                },
                _loadData: function(t) {
                    return 'my' === t ? this._loadPersonalData() : 'near' === t ? (BEM.blocks['i-geolocation'].locateAndLoad({
                        geoblock: this
                    }), Promise.resolve({
                        requested: !0
                    })) : Promise.reject('No data for key=' + t);
                },
                _loadPersonalData: function() {
                    var t = this.params.personalRequestParams,
                        e = home.getData('common.exps', '');
                    return e && (t.experiments = e), $.ajax({
                        dataType: 'json',
                        url: home.makeUrl({
                            scheme: 'https',
                            host: home.getData('geo.geohelperHost'),
                            path: '/geohelper/api/v2/yalocal',
                            query: t
                        }),
                        timeout: 15000,
                        xhrFields: {
                            withCredentials: !0
                        }
                    }).asPromise().then(function(t) {
                        var e = t.yalocal && t.yalocal.my;
                        return t.yalocal ? this.__self.checkPostsCount(e) ? (this._saveRtx('my', t.yalocal.rtxreqid), e) : void 0 : Promise.reject('Not enough personal posts');
                    }.bind(this));
                },
                _update: function(t, e) {
                    var i = Array.isArray(e.yalocal) ? e.yalocal : null;
                    this.__self.checkPostsCount(i) ? (this._saveRtx('near', e.yalocal_rtxreqid), this._data.near = i, 'near' === this._selectedKey && (this._handleFooterVisibility(), this._drawData('near', this._$panel, !0))) : this._setLocationStatus(null, home.l10n('geo.geolocationFetchFail'));
                },
                _showLocateProgress: function(t) {
                    t.geohelper && this._setLocationStatus(null, home.l10n('district.searchInProgress'));
                },
                _getRetryButtonMods: function() {
                    return {
                        theme: this.params.retryButtonTheme
                    };
                },
                _handleFooterVisibility: function() {
                    var t = Array.isArray(this._data.near),
                        e = 'near' === this._selectedKey && !t;
                    this.toggleMod(this.elem('footer'), 'visibility', '', 'visible', e);
                },
                _loadImages: function() {
                    var t = this.findBlockInside(this._$panel, 'imageloader');
                    t && t.setMod('visible', 'yes');
                },
                _loadAndDrawPersonalData: function() {
                    this._loadDataWrapped('my').then(function(t) {
                        if (!t || !t.length) return this._dataPromises.my = null, this._data.my = null, Promise.reject();
                        this.delMod('loading'), this._drawData('my', this._$panel, !0);
                    }.bind(this))['catch'](function() {
                        this.delMod('loading'), ['my', 'near'].forEach(function(t) {
                            this.elem('tab').filter('[data-key="' + t + '"]').appendTo(this.elem('tabs'));
                        }, this), this.dropElemCache('tab'), delete this._panels.my, this._selectTab(Array.isArray(this._data.near) ? 'near' : 'top');
                    }.bind(this));
                },
                _renderLoader: function() {
                    return home.view('district2__panel-contents', {
                        items: Array(3).join(home.view('home-link', {
                            mix: 'district2__post district2__post_dummy'
                        })),
                        'imageloader-theme': this.getMod('dark') ? 'light-on-dark' : 'light'
                    });
                },
                _saveRtx: function(t, e) {
                    this._rtxreqids[t] = e;
                },
                _logRtxCounter: function(t) {
                    var e = this._rtxreqids[t];
                    e && home.stat.logPath('show', 'district.' + t + '.rtx', {
                        customParams: {
                            rtxreqid: e
                        }
                    });
                },
                _addScrollStats: function(t) {
                    var e = t || this._$panel,
                        i = this.findBlockInside(e, 'scroller');
                    i && i.addScrollStats(this._statRoot + '.scroll', e.find('.district2__post').width() / 2);
                }
            }, {
                minPostsCount: 2,
                guideButtonTheme: 'district2-error',
                checkPostsCount: function(t) {
                    return t && t.length > this.minPostsCount;
                },
                live: function() {
                    return this.__base.apply(this, arguments), !1;
                }
            }), N = $.ajax, $.ajax = function(t, e) {
                var i = N(t, e);
                return i.asPromise = function() {
                    return new Promise(function(e, n) {
                        i.then(e, function(e, i) {
                            var o = new Error('Cannot load ajax request');
                            if (o.name = 'blockerror', o.sourceType = 'network', e.responseJSON && (o.json = e.responseJSON), t) {
                                var s = home.parseUrl('object' == typeof t ? t.url : t);
                                o.url = s.host + s.path;
                            }
                            'timeout' === i ? o.timeout = 1 : e.status && (o.status = e.status), n(o);
                        });
                    });
                }, i;
            }, BEM.DOM.decl({
                block: 'places',
                baseBlock: 'geoblock2'
            }, {
                onSetMod: {
                    js: function() {
                        var t = this;
                        this._hasData = !1, this._groups = {}, this.elem('category').each(function() {
                            t._groups[$(this).data('id')] = !0;
                        }), this._serverDate = new Date(this.params.timestamp + ' GMT+0000'), this._loadDate = new Date(), this.__base.apply(this, arguments), BEM.blocks['i-geolocation'].onChanged({
                            gpsave: function(t, e) {
                                t.sameRegion && this._updateWhere(t, e);
                            }.bind(this)
                        }), this.bindTo('category', 'click', this._onCategoryClick), this.bindTo('search', 'submit', this._searchSubmit), this.bindTo('title', 'click', function() {
                            BEM.blocks['i-geolocation'].locateAndLoad({
                                geoblock: !0
                            });
                        }), this._$searchInput = this.domElem.find('.mini-suggest__input'), this._$searchInput.bind('input selectionchange', this._updateSearchClear.bind(this)), this.domElem.find('.mini-suggest__input-clear').bind('click', this._searchClear.bind(this)), this._initSidebar();
                    }
                },
                onElemSetMod: {
                    category: {
                        selected: {
                            yes: function(t) {
                                this.delMod('content'), this._deselectCategory(), this.setMod('selected', 'yes'), t.attr('aria-selected', 'true'), this.afterCurrentEvent(function() {
                                    this.findBlockInside('categories-scroller', 'scroller').scrollToElem(t, !0), this._updateCurrentCategory();
                                });
                            }
                        }
                    }
                },
                _getSelectedCategory: function() {
                    return this.findElem('category', 'selected', 'yes');
                },
                _deselectCategory: function() {
                    var t = this._getSelectedCategory();
                    this.delMod(t, 'selected'), t.attr('aria-selected', 'false'), this.delMod('selected');
                },
                _selectDefaultCategory: function() {
                    this._hasData && this.setMod(this.elem('category').eq(0), 'selected', 'yes');
                },
                _onCategoryClick: function(t) {
                    var e = $(t.target).closest('.places__category'),
                        i = e.data('id'),
                        n = e.data('stat-select');
                    'yes' !== this.getMod(e, 'selected') && 'more' !== e.data('id') && (t.preventDefault(), home.stat.logPath('click', n), this.setMod(e, 'selected', 'yes'), 'search' === i ? this._showSearch() : (this._hasData || BEM.blocks['i-geolocation'].locateAndLoad({
                        geoblock: !0
                    }), this._showPlaces()));
                },
                _searchSubmit: function() {
                    var t, e = this;
                    return home.stat.logPath('click', 'poi.view.search'), this._findAddress().always(function() {
                        var i = BEM.blocks['i-geolocation'].getLL();
                        t = 'https://maps.yandex.ru/?text=' + encodeURIComponent(e.domElem.find('input[type=search]').val()) + '&z=15&sspn=0.01,0.01' + (i ? '&ll=' + i + '&sll=' + i : ''), e.params.openapp && BEM.blocks['app-opener'] ? BEM.blocks['app-opener'].open(t, {
                            app: 'maps',
                            appQuery: ['utm_source=morda', 'utm_medium=places__search', 'yandexuid=' + home.getData('common.yu')].join('&'),
                            appCallback: function() {
                                home.stat.logPath('click', 'poi.view.search.app');
                            }
                        }) : location.href = t;
                    }), !1;
                },
                _findAddress: function() {
                    var t = $.Deferred();
                    return BEM.blocks['i-geolocation'].getLocation() ? (t.resolve(), t) : BEM.blocks['i-geolocation'].locate();
                },
                _updateAddress: function(t, e) {
                    var i;
                    i = e && e.geocoder ? e.geocoder : home.l10n('places.title'), this.elem('title').text(i);
                },
                _updateWhere: function(t, e) {
                    var i;
                    i = e && e.address ? e.address : '', this.elem('where').val(i);
                },
                _formatNumber: function(t) {
                    return t < 10 ? '0' + t : '' + t;
                },
                _update: function(t, e) {
                    this._updateAddress(t, e), this._updatePlaces(t, e);
                },
                _updatePlaces: function(t, e) {
                    var i = {};
                    this._hasData = !1, e.poi.forEach(function(t) {
                        i[t.group] = t;
                    }), Object.keys(i).some(function(t) {
                        var e = i[t];
                        if (e.objects && e.objects.length && e.group in this._groups) return this._hasData = !0, this.setMod('has-geo', 'yes'), !0;
                    }, this), this._hasData ? (this._data = i, this._getSelectedCategory().length || this._selectDefaultCategory(), this._updateCurrentCategory(), this._toggleOverlay(!this._hasData), this.afterCurrentEvent(function() {
                        this.findBlockInside('categories-scroller', 'scroller').scrollToElem(this._getSelectedCategory(), !0);
                    })) : this._showNotFoundAll();
                },
                _showNotFoundAll: function() {
                    var t = this.elem('items');
                    this.elem('overlay-text').text(home.l10n('places.notFound')), home.stat.logPath('show', 'poi.view.geoempty'), this._deselectCategory(), t.empty(), this._toggleOverlay(!0);
                },
                _toggleOverlay: function(t) {
                    this.elem('overlay').css('display', t ? 'block' : 'none');
                },
                _showSearch: function() {
                    this.elem('items').css('display', 'none'), this.elem('search').css('display', 'block'), this._hasData || this._toggleOverlay(!1), this.domElem.find('input[type=search]').focus();
                },
                _showPlaces: function() {
                    this.elem('items').css('display', ''), this.elem('search').css('display', ''), this._hasData || this._toggleOverlay(!0);
                },
                _showNotFound: function(t, e) {
                    var i = 'poi.view.notfound.' + e;
                    this.elem('items').html(home.view('places__not-found', {
                        href: this._appendUTMProps(t, 'places__not-found'),
                        stat: i,
                        attrs: this._makeAppAttrs()
                    })), home.stat.logPath('show', i), this.setMod(this.elem('items'), 'not-found', 'yes');
                },
                _generateCategoryLink: function(t) {
                    var e = '';
                    return home.getData('places.data').forEach(function(i) {
                        i.group === t && (e = i.subgroups.length > 1 ? i.subgroups.map(function(t) {
                            return 'rubric:(' + t + ')';
                        }).join(' | ') : i.subgroups[0]);
                    }), 'https://maps.yandex.ru/?z=15&text=' + encodeURIComponent(e) + '&ll=' + encodeURIComponent(BEM.blocks['i-geolocation'].getLL());
                },
                _updateCurrentCategory: function() {
                    var t, e;
                    this._hasData && 'search' !== (t = this._getSelectedCategory().data('id')) && (this._data[t] ? (e = this._data[t].objects) && e.length ? (this.delMod(this.elem('items'), 'not-found'), this._updateCategory(t, this._data[t]), this.afterCurrentEvent(function() {
                        var t = this.findBlockInside('scroller', 'scroller');
                        t.updateSize().scrollTo(0), this._scrollStatsInited || (t.addScrollStats('poi.scroll', this.elem('card').width() / 2), this._scrollStatsInited = !0);
                    })) : this._showNotFound(this._data[t].href, t) : this._showNotFound(this._generateCategoryLink(t), t));
                },
                _makeAppAttrs: function(t) {
                    return this.params.openapp ? {
                        'data-app': 'maps',
                        'data-app-query': (t || []).join('&')
                    } : {};
                },
                _appendUTMProps: function(t, e) {
                    try {
                        var i = home.parseUrl(t),
                            n = {
                                utm_source: 'morda',
                                utm_medium: e,
                                yandexuid: home.getData('common.yu')
                            };
                        for (var o in n) n.hasOwnProperty(o) && (i.query[o] = n[o]);
                        return home.makeUrl(i);
                    } catch (s) {
                        return t;
                    }
                },
                _updateCategory: function(t, e) {
                    var i, n, o, s = this;
                    o = this._makeAppAttrs(), e.searchhref && this.params.sidebar && (o['data-sidebar'] = e.searchhref, o['data-statlog-redir'] = '0'), i = home.view('places__more', {
                        href: this._appendUTMProps(e.href, 'places__more'),
                        stat: 'poi.view.more.' + t,
                        attrs: o
                    }), n = e.objects.map(function(i, n) {
                        var o = BEM.blocks['i-geolocation'] && BEM.blocks['i-geolocation'].getLL(),
                            r = 'oid=' + i.oid + (o ? ';gpauto=' + o : ''),
                            a = 'links.' + t,
                            c = {
                                title: i.name || i.title,
                                address: home.cleverString.cutStartOfString(i.address, 60) || '',
                                href: s._appendUTMProps(i.href, 'places__card'),
                                stat: 'poi.view.' + a + '.' + (i.photo ? 'img' : 'noimg') + '.' + n + '(' + r + ')',
                                imageMix: i.photo ? '' : ' places__card-image_fallback_yes places__card-image_type_' + (s.__self.GROUP_FALLBACK_BG.indexOf(i.group) > -1 ? i.group : 'default'),
                                imageAttrs: i.photo ? {
                                    'data-image': i.photo.replace('%s', 'M')
                                } : undefined,
                                dist: i.distance ? home.view('dist', {
                                    dist: i.distance,
                                    mod: 'places__card-dist',
                                    theme: ''
                                }) : '',
                                time: i.hours
                            };
                        return c.attrs = s._makeAppAttrs(['text=' + encodeURIComponent(e.text || i.name)]), i.searchhref && this.params.sidebar && (c.attrs['data-sidebar'] = i.searchhref, c.attrs['data-statlog-redir'] = '0'), home.view('places__card', c);
                    }, this).join(''), this.elem('items').html(n + i), this.afterCurrentEvent(function() {
                        this.domElem.bem('imageloader').updateItems(), home.stat.logDOMShow(this.elem('items'), {
                            visibilityCheck: !1
                        });
                    });
                },
                _appendGuideLink: function(t, e) {
                    t.find('.places__overlay-contents').append(e);
                },
                _updateSearchClear: function(t) {
                    this.elem('search').toggleClass('mini-suggest_has-value_yes', !!t.target.value);
                },
                _searchClear: function() {
                    this.elem('search').removeClass('mini-suggest_has-value_yes'), this._$searchInput.val('').focus();
                },
                _initSidebar: function() {
                    BEM.blocks.sidebar.addClickHandler('poi', '.places', '[data-sidebar]', {
                        header: 'mixed',
                        headerTheme: 'white',
                        handler: function(t) {
                            return t.data('sidebar');
                        }
                    });
                }
            }, {
                GROUP_FALLBACK_BG: ['atm', 'drugstore', 'food', 'gaz', 'night', 'shops']
            }), BEM.DOM.decl('metro', {
                onSetMod: {
                    js: function() {
                        BEM.blocks['i-geolocation'].onChanged({
                            data: this._update.bind(this)
                        });
                    }
                },
                _update: function(t, e) {
                    var i, n = this,
                        o = !(!e.metro || !e.metro.length);
                    this.findElem('station').remove(), this.hasMod('scheme', 'yes') || this.toggleMod('shown', 'yes', o), o && (i = e.metro.map(function(t, e) {
                        return home.view('metro__station-item', {
                            href: t.map_link,
                            text: t.name,
                            dist: home.view('dist', {
                                dist: t.distance,
                                mod: ' metro__dist'
                            }),
                            color: t.color,
                            counter: 'metro.' + n.params.cityId + '.station.' + e,
                            attrs: n.params.openapp ? home.getAttributes({
                                'data-app': 'maps',
                                'data-app-query': ['utm_source=morda', 'utm_medium=metro__station', 'yandexuid=' + home.getData('common.yu'), 'desc=' + encodeURIComponent(t.name)].join('&')
                            }) : ''
                        });
                    }).join(''), this.domElem.append(i), home.stat.logDOMShow(this.domElem, {
                        visibilityCheck: !1
                    }));
                }
            }), BEM.DOM.decl({
                block: 'eda',
                baseBlock: 'geoblock2'
            }, {
                onSetMod: {
                    js: function() {
                        this.__base.apply(this, arguments);
                    }
                },
                _update: function(t, e) {
                    if (e && e.eda) {
                        var i = e.eda && e.eda.near && e.eda.near[0] && e.eda.near[0].items || [];
                        i.length > 0 && this.elem('cards-list').html(i.map(this._getCardHTML).join('') + home.view('eda__show-all', {
                            stat: 'eda.card.show_all',
                            link: this.params.showAllUrl
                        }));
                    }
                },
                _getCardHTML: function(t, e) {
                    return home.view('eda__card', {
                        link: t.url,
                        stat: 'eda.card.' + e,
                        img: t.picture.replace('{w}x{h}', '214x140'),
                        title: t.name,
                        deliveryTime: t.delivery_time ? home.view('eda__delivery-time', {
                            deliveryTime: t.delivery_time
                        }) : '',
                        rating: home.view('rating', {
                            mod: 'rating_stars eda__rating',
                            value: t.rating,
                            maxValue: 5
                        })
                    });
                }
            }), BEM.DOM.decl('collections', {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.__base.apply(this, arguments), this._swiper = this.findBlockOn('swiper'), this._swiper && (this._swiper.on('createPage', this._onPageCreated, this), this._swiper.on('categorySelected', this._onCategorySelected, this), this._swiper.elem('page').length > 1 && this._onPageCreated()), this._calcOverflow(this.domElem);
                            var t = this.findBlockInside('scroller');
                            this._logScroll(t);
                        }
                    }
                },
                _onCategorySelected: function() {
                    var t = this._swiper.getCurrentPage();
                    BEM.blocks['i-multiline-overflow'].calcOverflow(t, 2, 'collections'), BEM.channel('i-sight').trigger('edges-update');
                },
                _onPageCreated: function(t, e) {
                    var i = this._swiper.getCurrentPage(),
                        n = e ? e.hasLoader : this.findElem(i, 'page-load').length > 0,
                        o = this.findBlockInside(i, 'scroller');
                    n || (BEM.channel('i-sight').trigger('edges-update'), o && this._logScroll(o));
                },
                _calcOverflow: function(t) {
                    BEM.blocks['i-multiline-overflow'].calcOverflow(t, 2, 'collections');
                },
                _logScroll: function(t) {
                    t.addScrollStats('collections.scroll.items', this.elem('item').width() / 2);
                }
            }, {
                live: function() {
                    return !1;
                }
            }), BEM.DOM.decl({
                block: 'swiper',
                modName: 'load-type',
                modVal: 'collections'
            }, {
                _processExternalData: function(t) {
                    var e = {},
                        i = this.params.isNewLayout;
                    t.tabs.forEach(function(t) {
                        e[t.id] = home.view('collections__page', {
                            mod: (this.params.stat ? ' imageloader_tracking_yes' : '') + (i ? '' : ' imageloader_different_yes') + ' imageloader_theme_' + this.params.imageloaderTheme,
                            content: home.view('collections__feed', {
                                list: t.list,
                                isNewLayout: i
                            })
                        });
                    }, this), this.__base(e);
                }
            }), BEM.DOM.decl({
                block: 'imageloader',
                modName: 'different',
                modVal: 'yes'
            }, {
                _getViewedCards: function(t, e) {
                    for (var i = this.elem('column'), n = i.length && i.eq(0).offset().left || 0, o = 0; o < i.length; ++o) {
                        var s = i.eq(o),
                            r = s.offset().left - n,
                            a = s.outerWidth();
                        if (!(r + a < t || (t - r) / a >= e)) {
                            i = i.slice(0, o);
                            break;
                        }
                    }
                    return i.find('.imageloader__card').add(i.filter('.imageloader__card'));
                }
            }), BEM.DOM.decl('autoru', {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.findBlockInside('scroller').addScrollStats('autoru.scroll', this.elem('item').width() / 2), BEM.blocks['i-multiline-overflow'].calcOverflow(this.domElem, 2, 'autoru');
                        }
                    }
                }
            }, {
                live: function() {
                    return !1;
                }
            }), BEM.DOM.decl('apps', {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.findBlockInside('scroller').addScrollStats('apps.scroll');
                        }
                    }
                }
            }), BEM.DOM.decl('infinity-zen', {
                onSetMod: {
                    js: function() {
                        BEM.channel('i-sight').on('infinity-zen:before', this._loadZenLib, this);
                    }
                },
                _loadZenLib: function() {
                    var t = home.bundles.load('zen-lib');
                    this.setMod('loaded', 'process'), t.then(function() {
                        this.setMod('loaded', 'yes'), this._zenLib = this.findBlockInside('zen-lib'), this._zenLib && (this._zenLib.loadAndRender(), this._zenLib.on('loaded', this._onZenLibLoaded.bind(this)));
                    }.bind(this))['catch'](function(t) {
                        home.error.logError({
                            block: 'zen-lib',
                            message: 'load zen-lib bundle error'
                        }, t), this.destruct();
                    }.bind(this));
                },
                _onZenLibLoaded: function() {
                    this.findBlockOn($('.mfooter-short'), 'mfooter-short');
                }
            }), BEM.DOM.decl('mfooter-short', {
                onSetMod: {
                    js: function() {
                        this._height = this.domElem.height(), this._scrollTopStartPosition = 0, this._prevScroll = 0, this.channel('i-scroll-event').on('scroll', this._handleScroll.bind(this), this);
                    }
                },
                _handleScroll: function(t, e) {
                    var i = !1,
                        n = !1;
                    e - this.domElem.offset().top - this._height > this.__self.MIN_DISTATNCE_FOR_FIXED && (i = !0, this._scrollTopStartPosition - e > this.__self.MIN_SCROLL_FOR_SHOW && (n = !0)), this.setMod('fixed-show', n ? 'yes' : undefined), i ? (clearTimeout(this._timeoutDeleteFixed), this._timeoutDeleteFixed = null, this.setMod('fixed', 'yes')) : this.getMod('fixed') && !this._timeoutDeleteFixed && (this._timeoutDeleteFixed = setTimeout(function() {
                        this.delMod('fixed');
                    }.bind(this), 300)), this._prevScroll > e ? this._scrollTopStartPosition = this._scrollTopStartPosition || e : this._scrollTopStartPosition = 0, this._prevScroll = e;
                }
            }, {
                live: !0,
                MIN_SCROLL_FOR_SHOW: 100,
                MIN_DISTATNCE_FOR_FIXED: 1000
            }), BEM.DOM.decl({
                block: 'geolocation-overlay',
                baseBlock: 'bottom-popup'
            }, {
                onSetMod: {
                    js: function() {
                        this.__base.apply(this, arguments);
                        var t = this.channel('i-geolocation'),
                            e = this;
                        t.on('visualStart', function(t) {
                            t.geoblock || t.background || (clearTimeout(e._timeout), e._timeout = setTimeout(e.changeThis(e.show), 50), e.elem('text').text(home.l10n('mobile.geolocation.find')), e.elem('address').text(''));
                        }), t.on('gpsave', function(t, i) {
                            t.geoblock || t.background || (e.elem('text').text(home.l10n('mobile.geolocation.load')), e.elem('address').text(i.address_short), BEM.blocks['i-multiline-overflow'].calcOverflow(e.domElem, 3));
                        }), t.on('end', function(t) {
                            t.geoblock || t.background || (clearTimeout(e._timeout), e.hide());
                        });
                    }
                }
            }, {
                live: !1
            }), BEM.DOM.decl({
                block: 'ios-default-search-promo',
                baseBlock: 'bottom-popup'
            }, {
                onSetMod: {
                    js: function() {
                        this.__base.apply(this, arguments), this.bindTo('ok', 'click', this.ok), this.bindTo('cancel', 'click', this.cancel), 90 !== Math.abs(window.orientation) && this.show();
                    }
                },
                ok: function() {
                    this.hide(), new Image().src = this.params.clickCounter;
                },
                cancel: function() {
                    this.hide(), new Image().src = this.params.closeCounter;
                },
                _show: function() {
                    this.__base.apply(this, arguments), this.bindToDoc('click', this._hideAway), new Image().src = this.params.showCounter, home.stat.logDOMShow(this.domElem);
                },
                _hide: function() {
                    this.destruct();
                },
                _hideAway: function(t) {
                    !$(t.target).closest(this.domElem).length && (home.stat.logPath('click', 'ios-default-search-promo.popup.hideaway'), this.unbindFromDoc('click', this._hideAway), this.hide(), new Image().src = this.params.closeCounter);
                }
            }, {
                live: !1
            }), BEM.channel('i-sight').on('login-promo-teaser:full', function(t, e) {
                var i = e.data('show-url');
                i && (new Image().src = i);
            }), BEM.DOM.decl('login-promo-teaser', {}, {
                live: function() {
                    this.liveBindTo('click', function(t) {
                        var e = this.domElem.attr('href'),
                            i = this.domElem.data('close-url');
                        home.sendBkClose(t, i, e);
                    });
                }
            }), BEM.DOM.decl({
                block: 'teaser-touch',
                baseBlock: 'bottom-popup'
            }, {
                onSetMod: {
                    js: {
                        inited: function() {
                            var t = this;
                            if (this.__base.apply(this, arguments), this.hasMod('teaser', 'no') && this.params.counters && this.params.counters.show) home.stat.logPath('click', this.params.counters.show);
                            else {
                                var e = this.params.service in this.__self.blockMap ? this.__self.blockMap[this.params.service] : this.params.service;
                                this._$block = $('.' + e), this._$block.length && (this._$search = $('.search3'), this._showCounted = !1, this.bindTo('click', this._onClick), this.channel('i-scroll-event').on('scroll', this._onScroll, this), this.channel('i-message-locker').on('lock', function() {
                                    t.hasMod('visible', 'yes') || t._cancelEvents();
                                }), this.bindToWin('click', this._checkOutsideClick), this._showTimeout = setTimeout(this.changeThis(this._checkShow), this.__self.SHOW_DELAY));
                            }
                        }
                    }
                },
                _checkShow: function() {
                    90 !== Math.abs(window.orientation) && ($(window).scrollTop() > this._$search.offset().top + this.__self.SCROLL_OFFSET || this.show());
                },
                _countShow: function() {
                    !this._showCounted && this.params.show_url && (this._showCounted = !0, new Image().src = this.params.show_url);
                },
                _onClick: function() {
                    if (this.params.fallback_url) return this._countShow(), home.stat.logPath('click', this.params.counters.click), void setTimeout(function() {
                        window.location.href = this.params.fallback_url;
                    }.bind(this), 200);
                    var t = this._$block.offset().top,
                        e = this._$block.outerHeight(),
                        i = BEM.blocks['i-globalstate'].height(),
                        n = this;
                    e < i && (t -= (i - e) / 2.618), this.hide(), this._countShow();
                    var o = !1;
                    $('html,body').stop().animate({
                        scrollTop: t
                    }, 'slow', function() {
                        if (!o) {
                            o = !0;
                            var t = n._$block.bem(n.params.service);
                            n.params.geolocation && n.params.service in n.__self.geoblocks && setTimeout(function() {
                                BEM.blocks['i-geolocation'].getLocation() || BEM.blocks['i-geolocation'].locateAndLoad({
                                    geoblock: t && t instanceof BEM.blocks.geoblock2
                                });
                            }, 700), (n.params.content_id || n.params.channel_id) && setTimeout(function() {
                                BEM.blocks['stream-control'].process({
                                    fromBlock: 'teaser-touch',
                                    streamId: n.params.content_id,
                                    streamChannel: n.params.channel_id
                                });
                            }, 350), home.stat.logPath('click', n.params.counters.click);
                        }
                    });
                },
                _checkOutsideClick: function(t) {
                    (!this.hasMod('visible', 'yes') || $(t.target).closest(this.domElem).length <= 0) && this._preventShowOrHide();
                },
                _onScroll: function(t, e) {
                    e > this._$search.offset().top + this.__self.SCROLL_OFFSET ? this._preventShowOrHide() : this.hasMod('visible', 'yes') || (clearTimeout(this._showTimeout), this._showTimeout = setTimeout(this.changeThis(this._checkShow), 1000));
                },
                _preventShowOrHide: function() {
                    this.hasMod('visible', 'yes') ? this.hide() : this._cancelEvents();
                },
                _show: function() {
                    this.__base.apply(this, arguments), this.params.show_url && (this._countTimeout = setTimeout(this.changeThis(this._countShow), 1000)), this._hideTimeout = setTimeout(this.changeThis(this.hide), 10000);
                },
                hide: function() {
                    this.__base.apply(this, arguments), this._cancelEvents();
                },
                _cancelEvents: function() {
                    this.unbindFromWin('click'), clearTimeout(this._showTimeout), clearTimeout(this._countTimeout), clearTimeout(this._hideTimeout), this.channel('i-scroll-event').un('scroll', this._onScroll, this);
                }
            }, {
                blockMap: {
                    stocks: 'stocks-container'
                },
                geoblocks: {
                    places: !0,
                    afisha: !0,
                    metro: !0,
                    schedule: !0
                },
                SHOW_DELAY: 1000,
                SCROLL_OFFSET: 70,
                live: !1
            }),
            function() {
                var t = home.localStorage,
                    e = !home.disabledLS && t;

                function i(t) {
                    return t ? new Date(t).getTime() : new Date().getTime();
                }
                BEM.DOM.decl('periodical-popup', {
                    onSetMod: {
                        js: function() {
                            if (this._beforeShowCheck()) {
                                var t = this._getData();
                                this._showDuration = 15000, this._checkShownDates(t) && t.length < this.params.times && this._tryShow(t);
                            }
                        }
                    },
                    getDefaultParams: function() {
                        return {
                            times: 3,
                            lsShownKey: '',
                            lsForbiddenKey: '',
                            closeCounter: ''
                        };
                    },
                    _beforeShowCheck: function() {
                        return e && !this._hasDoNotShowFlag();
                    },
                    _checkShownDates: function(t) {
                        return !0;
                    },
                    _tryShow: function(t) {
                        var e = this;
                        BEM.blocks['i-message-locker'].acquireLock(this.__self.getName()).then(function() {
                            e._show(), e._afterShow(t);
                        });
                    },
                    _hide: function() {
                        this.domElem.removeClass('periodical-popup_opacity_visible'), setTimeout(this.changeThis(this._afterHide), 500);
                    },
                    _afterHide: function() {
                        this.domElem.removeClass('periodical-popup_display_yes'), BEM.blocks['i-message-locker'].releaseLock(this.__self.getName());
                    },
                    _show: function() {
                        var t = this;
                        this.domElem.addClass('periodical-popup_display_yes'), setTimeout(function() {
                            t.domElem.addClass('periodical-popup_opacity_visible');
                        }, 0), setTimeout(this.changeThis(this._hide), this._showDuration);
                    },
                    _afterShow: function(t) {
                        this._updateShownDates(t), this.bindTo('close', 'click', this.changeThis(this._onClose)), BEM.channel('page').on('interaction', this._immediateHide, this);
                    },
                    _immediateHide: function() {
                        this.domElem.removeClass('periodical-popup_opacity_visible'), this._afterHide();
                    },
                    _onClose: function() {
                        this._setDoNotShowFlag(), this._hide(), this.params.closeCounter && home.stat.logPath('click', this.params.closeCounter);
                    },
                    _getData: function() {
                        var e;
                        try {
                            e = JSON.parse(t.getItem(this.params.lsShownKey)).filter(function(t) {
                                return !isNaN(i(t)) && i() - i(t) < 1209600000;
                            });
                        } catch (n) {
                            e = [];
                        }
                        return e;
                    },
                    _updateShownDates: function(e) {
                        e.push(i());
                        var n, o, s = (n = e, o = this.params.times, n.slice(Math.max(0, n.length - o)));
                        t.setItem(this.params.lsShownKey, JSON.stringify(s));
                    },
                    _setDoNotShowFlag: function() {
                        t.setItem(this.params.lsForbiddenKey, 1);
                    },
                    _hasDoNotShowFlag: function() {
                        return !!t.getItem(this.params.lsForbiddenKey);
                    }
                });
            }(), BEM.DOM.decl({
                block: 'skin-greeting',
                baseBlock: 'periodical-popup'
            }, {
                getDefaultParams: function() {
                    return {
                        times: 1,
                        lsShownKey: 'skinGreetingShownDates',
                        lsForbiddenKey: 'doNotShowSkinGreeting',
                        closeCounter: ''
                    };
                },
                _tryShow: function(t) {
                    var e = this;
                    this.domElem.bem('bottom-popup', {
                        name: 'skin-greeting'
                    }).show().then(function() {
                        e._show(), e._afterShow(t);
                    });
                },
                _show: function() {
                    this.__base.apply(this, arguments), this._setDoNotShowFlag(), home.stat.logDOMShow(this.domElem, {
                        visibilityCheck: !1
                    });
                },
                _updateShownDates: function(t) {}
            }), F = 'addtohome', U = 'addtohome.close', H = 'fromhome', BEM.DOM.decl({
                block: 'homescreen',
                baseBlock: 'periodical-popup'
            }, {
                getDefaultParams: function() {
                    var t = this.__base.apply(this, arguments);
                    return t.lsShownKey = 'balloonShownDates', t.lsForbiddenKey = 'doNotShowHSBalloon', t.closeCounter = U, t;
                },
                _beforeShowCheck: function() {
                    var t = !!BEM.blocks['i-hash'].contains('hs');
                    return t && (home.stat.logPath('click', H), BEM.blocks['i-hash'].remove('hs', !0), this._setDoNotShowFlag()), this.__base.apply(this, arguments) && !t && 90 !== Math.abs(window.orientation);
                },
                _show: function() {
                    this.__base.apply(this, arguments), home.stat.logPath('click', F), home.stat.logPath('show', U), BEM.blocks['i-hash'].set('hs', !0, !0), this.bindToWin('scroll', function() {
                        this.unbindFromWin('scroll'), this.setMod('tail', 'off');
                    });
                },
                _afterHide: function() {
                    this.__base.apply(this, arguments), this.unbindFromWin('scroll');
                }
            }), BEM.DOM.decl({
                block: 'promo-appsearch',
                baseBlock: 'bottom-popup'
            }, {
                onSetMod: {
                    js: function() {
                        this.show();
                    }
                },
                _show: function() {
                    var t = this;
                    this.__base.apply(this, arguments), this.params.show_url && (new Image().src = t.params.show_url), home.stat.logDOMShow(this.domElem, {
                        visibilityCheck: !1
                    }), setTimeout(function() {
                        t.hide();
                    }, 15000);
                }
            }, {
                live: function() {
                    return this.liveBindTo('close', 'click', function() {
                        this.hide(), this.params.close_url && (new Image().src = this.params.close_url);
                    }), !1;
                }
            }), BEM.channel('i-sight').on('video-ads:before', function() {
                home.stat.logPath('show', 'video-ads');
                var t = Ya.Rum.makeSubPage(home.getData('timing.page') + '.231.991');
                Ya.Rum.sendTTI(!1, Ya.Rum.getTime(), t), $.getScript('https://yastatic.net/awaps-ad-sdk-js/1_0/adsdk.js', function() {
                    home.stat.logPath('show', 'video-ads.load'), ya.videoAd.loadModule('InPage').then(function(e) {
                        home.stat.logPath('show', 'video-ads.loaded'), e.addInPageVideo(document.getElementById('article'), {
                            partnerId: 257392,
                            category: 0,
                            insertAfter: '.video-ads__content',
                            slide: !0,
                            insertPosition: 10,
                            visibleAfterInit: !1
                        }, function(e) {
                            e instanceof Error ? (home.stat.logPath('show', 'video-ads.error'), t.cancel()) : (e.onAdStart = function() {
                                home.stat.logPath('show', 'video-ads.realshow'), Ya.Rum.sendTimeMark('2793', Ya.Rum.getTime(), !1, t);
                            }, e.onClickThrough = function() {
                                home.stat.logPath('click', 'video-ads'), Ya.Rum.sendTimeMark('882', Ya.Rum.getTime(), !1, t);
                            });
                        });
                    });
                });
            }), BEM.DOM.decl({
                block: 'media-event',
                baseMix: ['mix-stream-thumb-preview']
            }, {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.bindTo('title', 'click', this._expand), this.hasMod('alone', 'yes') ? BEM.blocks['i-multiline-overflow'].calcOverflow(this.elem('desc'), 9, this.__self.getName()) : BEM.blocks['i-multiline-overflow'].calcOverflow(this.domElem, 2, this.__self.getName()), this._thumbPreview = this.blockInside(this.elem('content'), 'thumb-preview'), home.getData('media-event.data.allowTouchVideoPreview') && this._thumbPreview && this._bindEvents();
                        }
                    }
                },
                _expand: function() {
                    var t = this.findBlockOn('block');
                    if ('min' === t.getMod('state')) return t.setMod('state', 'full'), !1;
                }
            }, {
                live: function() {
                    return !1;
                }
            }), BEM.DOM.decl('media-episode', {
                _onThumbPreview: function(t) {
                    var e = t.type,
                        i = this.blockInside('media-episode');
                    'play' === e ? i.setMod('preview', 'playing') : 'stop' === e && i.delMod('preview');
                }
            }, {
                live: function() {
                    this.liveInitOnBlockEvent('stop', 'thumb-preview', function(t) {
                        this._onThumbPreview(t);
                    }), this.liveInitOnBlockEvent('play', 'thumb-preview', function(t) {
                        this._onThumbPreview(t);
                    });
                }
            }), jQuery.cookie = function(t, e, i) {
                if (void 0 === e) {
                    var n = null;
                    if (document.cookie && '' != document.cookie)
                        for (var o = document.cookie.split(';'), s = 0; s < o.length; s++) {
                            var r = jQuery.trim(o[s]);
                            if (r.substring(0, t.length + 1) == t + '=') {
                                n = decodeURIComponent(r.substring(t.length + 1));
                                break;
                            }
                        }
                    return n;
                }
                i = i || {}, null === e && (e = '', i.expires = -1);
                var a, c = '';
                i.expires && ('number' == typeof i.expires || i.expires.toUTCString) && ('number' == typeof i.expires ? (a = new Date()).setTime(a.getTime() + 24 * i.expires * 60 * 60 * 1000) : a = i.expires, c = '; expires=' + a.toUTCString());
                var h = i.path ? '; path=' + i.path : '',
                    l = i.domain ? '; domain=' + i.domain : '',
                    u = i.secure ? '; secure' : '';
                document.cookie = [t, '=', encodeURIComponent(e), c, h, l, u].join('');
            }, BEM.decl({
                block: 'pusher',
                modName: 'technology',
                modVal: 'push-api'
            }, {}, {
                _getID: function() {
                    return $.cookie('yandexuid');
                },
                _getBackendTag: function(t) {
                    var e = this._origin + '/psuh/v2/tags/web/' + this._getID() + '/' + t;
                    return this.__base.call(this, t, e);
                },
                _sendTags: function(t) {
                    var e = this._getID(),
                        i = this._origin + '/psuh/v2/tags/' + e + '/' + e;
                    return this.__base.call(this, t, i);
                },
                _requestPermission: function() {
                    var t = Date.now();
                    return Notification.requestPermission().then(function(e) {
                        if ('granted' !== e) {
                            var i = new Error('Access is denied'),
                                n = Date.now();
                            throw i.permission = e, i.delay = n - t, i;
                        }
                    });
                },
                _prepareSubscription: function(t) {
                    return Promise.all([navigator.serviceWorker.register(this._urlServiceWorker, {
                        scope: '/notifications/'
                    }), this._prepareTags(t, 'add')]);
                },
                _subscribe: function(t) {
                    var e = this._getID();
                    return new Promise(function(i, n) {
                        var o = t[0],
                            s = t[1],
                            r = new MessageChannel(),
                            a = o.installing || o.waiting || o.active;
                        r.port1.onmessage = function(t) {
                            var e = t.data || {},
                                o = e.code,
                                r = e.data;
                            if ('subscribe' !== o || !0 !== r) {
                                var a = new Error('Message not processed');
                                'error' === o && r.stack && (a.stack = (a.stack ? a.stack + '\r\n' : '') + r.stack), n(a);
                            } else i(s);
                        }, a.postMessage({
                            code: 'subscribe',
                            version: 1,
                            data: {
                                id: e,
                                tags: s
                            }
                        }, [r.port2]), setTimeout(function() {
                            n(new Error('Timeout expired'));
                        }, 30000);
                    });
                },
                subscribe: function(t) {
                    return this._requestPermission().then(this._prepareSubscription.bind(this, t)).then(this._subscribe.bind(this)).then(this._updateBackendTags.bind(this)).then(function() {
                        return !0;
                    });
                },
                getPermission: function() {
                    return Notification.permission;
                },
                supported: 'serviceWorker' in navigator && 'PushManager' in window && 'MessageChannel' in window && 'Notification' in window && 'indexedDB' in window && 'fetch' in window && PushSubscription.prototype.hasOwnProperty('getKey') && ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification')
            }), BEM.decl({
                block: 'pusher',
                modName: 'technology',
                modVal: 'push-api'
            }, {}, {
                _urlServiceWorker: '/service-workers/pusher-worker/phone/sup.js'
            }), BEM.DOM.decl({
                baseBlock: 'pusher-button',
                block: 'promo-pusher-button'
            }, {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.__base.apply(this, arguments), this.bindTo('click', function() {
                                return this.trigger('click'), !1;
                            });
                        }
                    },
                    subscribed: function(t, e) {
                        this.__base.apply(this, arguments), this.domElem.attr('title', 'yes' === e ? home.l10n('pushes.sup_button.unsubscribe') : home.l10n('pushes.sup_button.subscribe')), this.trigger('toggle', 'yes' === e), this.params.subscribedText && (this._origText || 'yes' !== e || (this._origText = this.elem('text').text()), this.elem('text').text('yes' === e ? this.params.subscribedText : this._origText));
                    }
                },
                _onClick: function() {
                    this.__base.apply(this, arguments), this.params.counter && home.stat.logPath('click', this.params.counter + '.' + (this.hasMod('subscribed', 'yes') ? 'unsubscribe' : 'subscribe'));
                },
                check: function() {
                    var t = this.__base.apply(this, arguments),
                        e = function(t, e) {
                            !this._isDestructing && this.params.counter && home.stat.logPath('show', this.params.counter + '.' + (t && e ? 'unsubscribe' : 'subscribe'));
                        }.bind(this);
                    return t.then(e.bind(this, !0), e.bind(this, !1)), t;
                },
                button: function() {
                    return this;
                }
            }), BEM.DOM.decl('i-window-focus', {}, {
                init: function() {
                    var t = this,
                        e = BEM.channel('i-window-focus');
                    t._focused = !0, $.browser && $.browser.msie ? ($(document).bind('focusout', function() {
                        t._focused = !1, e.trigger('blur');
                    }), $(document).bind('focusin', function() {
                        t._focused = !0, e.trigger('focus');
                    })) : ($(window).focus(function() {
                        t._focused = !0, e.trigger('focus');
                    }), $(window).blur(function() {
                        t._focused = !1, e.trigger('blur');
                    }));
                },
                isFocused: function() {
                    return this._focused;
                }
            }), BEM.blocks['i-window-focus'].init(), BEM.channel('i-sight').on('block_viewed_no:before', function(t, e) {
                e.hasClass('stream-inserts') && (e.bem('stream-inserts').setMod('loading', 'yes'), e.bem('stream-inserts').setMod('visible', 'yes'));
            }), BEM.DOM.decl({
                block: 'stream-inserts',
                baseMix: ['mix-stream-thumb-preview']
            }, {
                onSetMod: {
                    visible: {
                        yes: function() {
                            this._loadBlockData();
                        }
                    }
                },
                _updateContent: function(t) {
                    this.delMod('loading'), BEM.DOM.update(this.elem('items'), home.view('stream-inserts__content', {
                        items: t,
                        blockName: this.params.blockName,
                        statRoot: this.params.statRoot,
                        type: this.params.type,
                        noRating: this.params.noRating,
                        allowVideoPreview: this.params.allowVideoPreview
                    })), this.afterCurrentEvent(function() {
                        this.findBlockOn('imageloader').updateItems(), this._thumbPreview = this.findBlockOn(this.elem('item'), 'thumb-preview'), this.params.allowVideoPreview && this._thumbPreview && this._bindEvents(), BEM.blocks['i-multiline-overflow'].calcOverflow(this.elem('item'), 2);
                    });
                },
                _loadBlockData: function() {
                    Ya.streamCms.getCarouselItems({
                        carousel_id: this.params.carouselId,
                        limit: 20
                    }).then(function(t) {
                        if (!t || !t.length) return Promise.reject({
                            message: 'Incorrect data'
                        });
                        this._updateContent(t);
                    }.bind(this))['catch'](function(t) {
                        t && home.error.logError({
                            block: this.__self.getName(),
                            message: 'touch-stream-inserts error',
                            method: '_loadBlockData',
                            meta: {
                                carouselId: this.params.carouselId
                            },
                            source: 'vh'
                        }, t), BEM.DOM.destruct(this.domElem);
                    }.bind(this));
                },
                _onThumbPreview: function(t) {
                    var e = t.type,
                        i = t.block.domElem;
                    'start' === e ? this.setMod(i, 'preview', 'active') : 'play' === e ? this.setMod(i, 'preview', 'playing') : 'stop' === e && this.delMod(i, 'preview');
                }
            }, {
                live: function() {
                    this.liveInitOnBlockInsideEvent('start', 'thumb-preview', function(t) {
                        this._onThumbPreview(t);
                    }), this.liveInitOnBlockInsideEvent('stop', 'thumb-preview', function(t) {
                        this._onThumbPreview(t);
                    }), this.liveInitOnBlockInsideEvent('play', 'thumb-preview', function(t) {
                        this._onThumbPreview(t);
                    });
                }
            }), home.formatDuration = function(t) {
                t = Math.round(t);
                var e = Math.floor(t / 3600),
                    i = Math.floor((t - 3600 * e) / 60),
                    n = [i, t - 3600 * e - 60 * i].map(function(t) {
                        return (t < 10 ? '0' : '') + t;
                    });
                return e && n.unshift(String(e)), n.join(':');
            },
            function() {
                function t() {
                    if (t._instance) return t._instance;
                    t._instance = this;
                }
                t.prototype._init = function() {
                    if (this._inited) return this;
                    var t = home.getData('stream.stream.disabled'),
                        e = home.getData('stream.stream.clientData.settings');
                    return this.settings = e || {
                        exp: {}
                    }, t || e || this.onError({
                        method: '_init',
                        message: 'stream-cms._init: no settings !!!'
                    }), this.settings.apiUrl && (this.__apiUrl = this.settings.apiUrl + '/'), this._inited = !0, this;
                }, t.prototype.ajax = function(t, e) {
                    var i = home.deepExtend(home.getData('stream.reqparams-cms', {}), {
                            locale: BEM && BEM.blocks['i-global'] && BEM.blocks['i-global'].param('locale') || 'ru',
                            from: home.getData('stream.reqparams.from') || 'morda',
                            distr_id: home.getData('stream.reqparams.distr_id'),
                            reqid: home.getData('stream.reqparams.reqid'),
                            service: 'ya-main'
                        }),
                        n = this,
                        o = 0 === t.indexOf(this.__apiUrl),
                        s = this._ajaxInProgress,
                        r = function(t) {
                            var e = home.localStorage.getItem('morda-stream-stale');
                            if (t && t.error && 'old' === t.error.code) {
                                if ('report' !== e || this._needReload || (home.error.logError({
                                        block: 'stream',
                                        message: 'Old frontend handler after reload',
                                        method: 'ajax',
                                        source: 'vh'
                                    }), home.localStorage.setItem('morda-stream-stale', 'fail')), e) return;
                                home.error.logError({
                                    block: 'stream',
                                    method: 'ajax',
                                    message: 'Old frontend handler was used, reloading'
                                }), this._needReload = !0, home.localStorage.setItem('morda-stream-stale', 'report'), setTimeout(function() {
                                    location.reload();
                                }, 500);
                            } else home.localStorage.removeItem('morda-stream-stale');
                        }.bind(this),
                        a = function() {
                            this._ajaxInProgress = Math.max(0, this._ajaxInProgress - 1);
                        }.bind(this);
                    return this._ajaxInProgress++, i.disable_trackings = 1, new Promise(function(c, h) {
                        var l = home.deepExtend(e || {}, i),
                            u = 1,
                            d = function() {
                                var e = $.ajax({
                                    url: t,
                                    data: l,
                                    dataType: 'json',
                                    xhrFields: {
                                        withCredentials: !0
                                    }
                                });
                                e.then(a, a), o && e.then(r), e.then(function(t) {
                                    return o && this.checkErrors(t), t;
                                }.bind(n)).then(c, function(t, e, i) {
                                    u-- && 'timeout' === e ? d() : h(t, e, i);
                                });
                            },
                            m = Math.min(300, 100 * s) * Math.random();
                        m ? setTimeout(d, m) : d();
                    });
                }, t.prototype.checkErrors = function(t) {
                    var e = t.errors || {},
                        i = {
                            invalid_region: 'region',
                            no_licenses: 'licenses',
                            old_browser: 'browser',
                            future_vod_release: 'future_vod'
                        },
                        n = ['invalid_region', 'outdated', 'no_licenses', 'old_browser'];
                    this.settings.disableFutureVod || n.push('future_vod_release'), n.map(function(n) {
                        var o = e[n] || [];
                        t.error === n && t.content && o.push(t.content.content_id), o.forEach(function(t) {
                            this.forbidden[t] = i[n] || n;
                        }, this);
                    }, this);
                }, t.prototype.setSessionParams = function(t) {
                    var e = home.deepExtend({}, home.getData('stream.reqparams'));
                    this._sessionParams = home.deepExtend(e, t);
                }, t.prototype.getSessionParams = function() {
                    return this._sessionParams || home.getData('stream.reqparams') || {};
                }, t.prototype.getMetaToVhError = function(t) {
                    return {
                        vhReqid: (t = t || {}).reqid,
                        apphostReqid: t['apphost-reqid']
                    };
                }, t.prototype.onError = function(t, e) {
                    var i = t.meta || {};
                    i.from = this.getSessionParams().from, i.from_block = this.getSessionParams().from_block, i.originalMessage = e && e.originalMessage, t.block = t.block || 'stream', t.method = t.method || 'onError', t.sourceType = t.sourceType || 'logic', t.meta = i, home.error.logError(t, e);
                }, t.prototype.__apiUrl = 'https://frontend.vh.yandex.ru/', t.prototype._ajaxInProgress = 0, t.prototype.forbidden = {}, Ya = Ya || {}, Ya.streamCms = new t(), Ya.streamCms.constructor = t, Ya.streamCms._init();
            }(), Object.assign || Object.defineProperty(Object, 'assign', {
                enumerable: !1,
                configurable: !0,
                writable: !0,
                value: function(t, e) {
                    if (t === undefined || null === t) throw new TypeError('Cannot convert first argument to object');
                    for (var i = Object(t), n = 1; n < arguments.length; n++) {
                        var o = arguments[n];
                        if (o !== undefined && null !== o)
                            for (var s = Object.keys(Object(o)), r = 0, a = s.length; r < a; r++) {
                                var c = s[r],
                                    h = Object.getOwnPropertyDescriptor(o, c);
                                h !== undefined && h.enumerable && (i[c] = o[c]);
                            }
                    }
                    return i;
                }
            }), (q = Ya.streamCms.constructor)._programTypes = {
                'vod-episode': 'VodProgram',
                episode: 'Episode'
            }, q.prototype._initStores = function() {
                this._channelsById = {}, this._channelsWhiteList = {}, this._gettingResourceById = {}, this._channelsList = [], this._channelsIcon = [], this._episodesById = {}, this._series = {
                    byId: {}
                }, this._seasons = {
                    byId: {},
                    bySeriesId: {}
                }, this._seriesEpisodes = {
                    byId: {},
                    bySeasonId: {}
                }, this._carousels = {
                    byId: {},
                    paginators: {}
                }, this._filters = {
                    paginators: {}
                }, this._feeds = {
                    paginators: {}
                }, this._highlightsById = {}, this._highlightsList = {}, this._cacheHash = {
                    tag: {},
                    carousel: {},
                    filter: {}
                }, this._isFullData = {};
            }, q.prototype._logBanned = function(t, e) {
                var i = t.filter(function(t) {
                    return t && t.banned;
                }).length;
                e.limit / 2 < i && home.error.logError({
                    block: 'stream',
                    message: 'Many banned resources',
                    method: '_logBanned',
                    meta: {
                        params: e,
                        reqCount: e.limit,
                        resCount: i
                    },
                    source: 'vh'
                });
            }, q.prototype._getProgramConstructor = function(t) {
                var e = q._programTypes[t];
                if (e) return Ya.streamModules[e];
            }, q.prototype.storeResource = function(t, e) {
                var i;
                if (e = void 0 === e || e, !t) return this.onError({
                    method: 'storeResource',
                    message: 'storeResource -> empty resource',
                    meta: {
                        resource: t
                    },
                    source: 'vh'
                }), null;
                if ('vod-episode' === t.content_type_name) this.storeSeriesEpisode(t), i = this.getCachedSeriesEpisode(t.content_id);
                else if ('season' === t.type) this.storeSeason(t), i = this.getCachedSeason(t.content_id);
                else if ('vod-library' === t.content_type_name) this.storeSeries(t), i = this.getCachedSeries(t.content_id);
                else if ('episode' === t.content_type_name) i = this.storeEpisode(t);
                else if ('channel' === t.content_type_name && !(i = this.storeChannel(t)) && this.settings.disableStoreChannelErrors) return null;
                return i || (e && this.onError({
                    method: 'storeResource',
                    message: 'storeResource -> couldn\'t store resource',
                    meta: {
                        resource: {
                            content_id: t.content_id,
                            content_type: t.content_type_name
                        }
                    },
                    source: 'vh'
                }), null);
            }, q.prototype.getCachedSeriesEpisode = function(t) {
                return this._seriesEpisodes && this._seriesEpisodes.byId && this._seriesEpisodes.byId[t];
            }, q.prototype.getCachedSeason = function(t) {
                return this._seasons.byId[t];
            }, q.prototype.getCachedSeries = function(t) {
                return this._series && this._series.byId && this._series.byId[t];
            }, q.prototype.getChannelByContentId = function(t) {
                return this._channelsById[t];
            }, q.prototype.getChannelSettings = function(t) {
                return this._channelsWhiteList[t];
            }, q.prototype.storeSeriesEpisode = function(t) {
                if (this.storeSeriesEpisodes) this.storeSeriesEpisodes([t]);
                else {
                    var e = this.getProgramInstance(t);
                    this._seriesEpisodes.byId[e.content_id] = e;
                }
            }, q.prototype.storeSeason = function(t) {
                this._seasons.byId[t.content_id] = t;
            }, q.prototype.storeSeries = function(t) {
                var e = new Ya.streamModules.VodLibrary(t),
                    i = e.includes && e.includes[0];
                i && i.season && this.storeFirstSeriesEpisodes && (this.storeFirstSeriesEpisodes(i.season.id, e.includes), e.season || (e.season = {
                    id: i.season.id
                }), delete e.includes), this._series.byId[e.content_id] = e;
            }, q.prototype.storeChannel = function(t) {
                return 'belarus' === this.settings.geoLocation && (t.status = t.status || [], Array.isArray(t.status) ? t.status.push('hide_schedule') : t.status.hide_schedule = 1), this._storeChannel ? this._storeChannel(t) : this.storeChannelById(t);
            }, q.prototype.storeEpisode = function(t) {
                var e;
                return this.storePrograms ? this.storePrograms([t])[0] : (e = this.getProgramInstance(t), this._episodesById[e.cache_id || e.content_id] = e, e);
            }, q.prototype.storeChannelById = function(t) {
                var e;
                return this.overrideChannel(t), e = new Ya.streamModules.Channel(t), this._channelsById[e.content_id] = e, e;
            }, q.prototype.getProgramInstance = function(t) {
                this.overrideProgram(t);
                var e = this._getProgramConstructor(t.content_type_name);
                if (e) return new e(t);
                var i = Object.keys(q._programTypes);
                throw new TypeError('Invalid type "' + t.content_type_name + '", valid types: ' + i);
            }, q.prototype.overrideProgram = function(t) {
                var e = this.settings,
                    i = e.override && e.override[t.content_id];
                if (i)
                    for (var n in i) i.hasOwnProperty(n) && ('start_time' === n || 'end_time' === n ? t['fake_' + n] = i[n] : t[n] = i[n]);
                t.fakeTime = e.fakeTime;
            }, q.prototype.overrideChannel = function(t) {
                var e = this.settings.resourceOverride && this.settings.resourceOverride[t.content_id];
                if (e)
                    for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
            }, Ya.streamCms._initStores(),
            function(t) {
                t.Ya = t.Ya || {}, t.Ya.streamModules = t.Ya.streamModules || {};
            }(window),
            function() {
                function t(t) {
                    for (var e in this.raw = t, t) t.hasOwnProperty(e) && (this[e] = t[e]);
                    var i = this.channelSettings = Ya.streamCms.getChannelSettings(this.parent_id);
                    this.meta = this.meta || {}, this._setupStreams(this.streams), this.ads = !0, Ya.streamCms.settings && Ya.streamCms.settings.adsDisabled && this.disableAds(), i && i.status.overlay && (this.meta.with_overlay = !0), this.checkSuperres(this.streams) && (this.meta.superres = 1), this.isPersonalChannel() && (this.cache_id = i.content_id + '_' + this.content_id);
                }
                t.prototype.isPersonalChannel = function() {
                    return Ya.streamModules.programUtils.isPersonalChannel(this);
                }, t.prototype.disableAds = function() {
                    Ya.streamModules.programUtils.disableAds(this);
                }, t.prototype._setupStreams = function(t) {
                    Ya.streamModules.programUtils._setupStreams(this, t);
                }, t.prototype.checkSuperres = function(t) {
                    return Ya.streamModules.programUtils.checkSuperres(this, t);
                }, t.prototype.constructUrl = function(t, e) {
                    return Ya.streamModules.programUtils.constructUrl(this, t, e);
                }, t.prototype._getUrl = function(t) {
                    return Ya.streamModules.programUtils._getUrl(this, t);
                }, t.prototype._validateSourceUrl = function(t) {
                    return Ya.streamModules.programUtils._validateSourceUrl(this, t);
                }, t.prototype.getContentId = function() {
                    return Ya.streamModules.programUtils.getContentId(this);
                }, t.prototype.start = function() {
                    return Ya.streamModules.programUtils.start(this);
                }, t.prototype.end = function() {
                    return Ya.streamModules.programUtils.end(this);
                }, t.prototype.is = function(t) {
                    return Ya.streamModules.programUtils.is(this, t);
                }, t.prototype.ended = function(t) {
                    return Ya.streamModules.programUtils.ended(this, t);
                }, t.prototype.fromFuture = function() {
                    return Ya.streamModules.programUtils.fromFuture(this);
                }, t.prototype.screwTime = function(t) {
                    return Ya.streamModules.programUtils.screwTime(this, t);
                }, t.prototype.canPlay = function(t) {
                    return Ya.streamModules.programUtils.canPlay(this, t);
                }, t.prototype.canRestart = function(t) {
                    return Ya.streamModules.programUtils.canRestart(this, t);
                }, t.prototype.eq = function(t, e) {
                    return Ya.streamModules.programUtils.eq(this, t, e);
                }, t.prototype.getActiveCam = function() {
                    return Ya.streamModules.programUtils.getActiveCam(this);
                }, t.prototype.getCameras = function() {
                    return Ya.streamModules.programUtils.getCameras(this);
                }, t.prototype.switchToCamera = function(t) {
                    Ya.streamModules.programUtils.switchToCamera(this, t);
                }, t.prototype.getStickerpack = function(t, e) {
                    return Ya.streamModules.programUtils.getStickerpack(this, t, e);
                }, t.prototype.getPersonalReaction = function() {
                    return Ya.streamModules.programUtils.getPersonalReaction(this);
                }, t.prototype.isForbidden = function() {
                    return Ya.streamModules.programUtils.isForbidden(this);
                }, t.prototype.isPlusContent = function() {
                    return home.yaplus.isPlusContent(this);
                }, t.prototype.getPlusTypes = function() {
                    return home.yaplus.getSubscribes(this);
                }, t.prototype.getPlusType = function() {
                    return home.yaplus.getCheapest(this.getPlusTypes());
                }, t.prototype.canSetLikes = function() {
                    return Ya.streamModules.programUtils.canSetLikes(this);
                }, Ya.streamModules.GenericProgram = t;
            }(),
            function(t) {
                t.prototype.getPleerAdditionalParams = function() {
                    var t = this.getSessionParams(),
                        e = Ya.streamModules.player.getCurrentWatchingParams();
                    return home.deepExtend({
                        stream_block: e.stream_block
                    }, t);
                }, t.prototype.sortByWeight = function(t, e) {
                    return (+e.weight || 0) - (+t.weight || 0);
                }, t.prototype.sortByStartTime = function(t, e) {
                    return t.start_time - e.start_time;
                }, t.prototype.setCacheTimer = function(t, e, i) {
                    clearInterval(this._cacheTimer[e]);
                    var n = home.now() / 1000,
                        o = Math.max(n, t - 300);
                    if (!(t < o)) {
                        var s = o + (t - o) * Math.random();
                        this._cacheTimer[e] = setInterval(function() {
                            home.now() / 1000 > s && (clearInterval(this._cacheTimer[e]), i(t));
                        }.bind(this), 1000);
                    }
                }, t.prototype.destroyCacheTimer = function(t) {
                    clearInterval(this._cacheTimer[t]), delete this._cacheTimer[t];
                }, t.prototype._cacheTimer = {}, t.prototype.getProgramType = function(t) {
                    return 'episode' === t.content_type_name ? 'catchup' : 'series' === t.onto_category || 'anim_series' === t.onto_category ? 'series' : 'anim_film' === t.onto_category ? 'anim_film' : 'film' === t.onto_category ? 'film' : 'blog';
                }, t.prototype.dayStart = function(t) {
                    var e = t ? new Date(1000 * t) : home.now();
                    e.getHours() < 5 && e.setDate(e.getDate() - 1);
                    var i = e.getFullYear(),
                        n = e.getMonth(),
                        o = e.getDate();
                    return new Date(i, n, o, 5) / 1000 | 0;
                }, t.prototype.setNextFetchTime = function(t) {
                    this._nextFetchTime = t;
                }, t.prototype.getNextFetchTime = function() {
                    return this._nextFetchTime || 0;
                };
            }(Ya.streamCms.constructor), K = 'announce', V = 'void', z = 'vod-episode', W = 'vod-library', G = 'episode', (Y = {}).isVoidProgram = function(t) {
                return t.content_type_name === V;
            }, Y.isVodLibrary = function(t) {
                return t.content_type_name === W;
            }, Y.isAnnounceProgram = function(t) {
                return t.content_type_name === K;
            }, Y.isVodProgram = function(t) {
                return t.content_type_name === z;
            }, Y.isLiveProgram = function(t) {
                return t.content_type_name === G && !0 === t.isLive;
            }, Y.isCatchupProgram = function(t) {
                return t.content_type_name === G && !0 !== t.isLive;
            }, Y.isGenericProgram = function(t) {
                return t.content_type_name;
            }, Y.canRestart = function(t, e) {
                return !this.isLiveProgram(t) && !this.isAnnounceProgram(t) && (this.isCatchupProgram(t) && Ya.streamCms.settings.isTouch ? this.canPlay(t, e) && this.end(t) < e : this.canPlay(t, e));
            }, Y.getStickerpack = function(t, e, i) {
                if (this.isAnnounceProgram(t)) return !1;
                if (this.isVodProgram(t)) return !1;
                e = e || {};
                var n = this.is(t, home.now() / 1000),
                    o = e.status || {},
                    s = t.stickerpack || e.stickerpack || 'default7';
                return !(!n || !i && !o.force_emoji || 'disabled' === s) && s;
            }, Y.getContentId = function(t) {
                if (this.isVoidProgram(t)) {
                    var e = t.meta && t.meta.nextProgram;
                    return !e || this.isVoidProgram(e) ? null : this.isGenericProgram(e) && this.getContentId(e);
                }
                if (this.isAnnounceProgram(t)) {
                    var i = t.meta || {},
                        n = i.awaiting,
                        o = i.playProgram;
                    return n && this.isGenericProgram(n) ? this.getContentId(n) : o && this.isGenericProgram(o) ? this.getContentId(o) : null;
                }
                return t.content_id;
            }, Y.isForbidden = function(t) {
                if (this.isVodLibrary(t)) return Ya.streamCms.forbidden[t.content_id];
                var e = Ya.streamCms.forbidden;
                return t.meta.forbidden || e[t.content_id] || t.parent_channel_id && e[t.parent_channel_id] || t.parent_vod_lib_id && e[t.parent_vod_lib_id] || t.parent_id && e[t.parent_id];
            }, Y.is = function(t, e) {
                return this.isAnnounceProgram(t) ? e <= this.end(t) : e >= this.start(t) && e <= this.end(t);
            }, Y.canPlay = function(t, e) {
                if (this.isVoidProgram(t)) return !1;
                if (this.isLiveProgram(t)) return this.start(t) < e && e < this.end(t);
                if (this.isAnnounceProgram(t)) return !1;
                if (this.isCatchupProgram(t)) {
                    var i = this.start(t),
                        n = this.end(t),
                        o = e - t.channelSettings.catchup_age;
                    return !t.blacked && e >= i && o < n;
                }
                return !this.isVodProgram(t) || !t._disabled;
            }, Y.start = function(t) {
                return t.start_time || t.release_date_ut;
            }, Y.end = function(t) {
                return t.end_time;
            }, Y.ended = function(t, e) {
                return e > this.end(t);
            }, Y.fromFuture = function(t) {
                return this.start(t) > Math.ceil(home.now() / 1000);
            }, Y.canSetLikes = function(t) {
                return !!this.isPersonalChannel(t) || !(this.isVoidProgram(t) || this.is(t, home.now() / 1000) || this.fromFuture(t) || !this.canPlay(t, home.now() / 1000));
            }, Y.checkSuperres = function(t, e) {
                return !this.isVoidProgram(t) && !!e && (e.map(function(t) {
                    t.options && -1 !== t.options.indexOf('hires') && (i = 1);
                }, this), i);
                var i;
            }, Y._validateSourceUrl = function(t, e) {
                var i = function(t, e) {
                    var i, n, o = Ya.streamCms.settings.overrideProgramUrl,
                        s = this.start(t),
                        r = this.end(t),
                        a = home.parseUrl(e).query;
                    return (a.start <= 0 || a.end <= 0 || isNaN(a.start) || isNaN(a.end) || a.start > a.end) && (n = 'url', o = !0), (Math.abs(a.start - s) > 600 || Math.abs(a.end - r) > 600) && (n = 'largeDiff', o = !0), o && (r === Infinity || s < 0 || r < 0 || isNaN(s) || isNaN(r) ? (n = 'params', i = {
                        start: undefined,
                        end: undefined
                    }) : i = {
                        start: s,
                        end: r
                    }), n && Ya.streamCms.onError({
                        method: '_validateSourceUrl',
                        message: '_validateSourceUrl: fail',
                        meta: {
                            errorType: n,
                            resource: {
                                content_id: t.content_id,
                                content_type: t.content_type_name,
                                url: e,
                                start: t.start_time,
                                end: t.end_time
                            }
                        },
                        source: 'vh'
                    }), i;
                }.bind(this);
                return this.isCatchupProgram(t) ? i(t, e) : this.isLiveProgram(t) || this.isAnnounceProgram(t) ? function(t, e) {
                    var i = home.parseUrl(e).query;
                    if (i.start || i.end) return Ya.streamCms.settings.disableLiveProgramErrors || Ya.streamCms.onError({
                        method: '_validateSourceUrl',
                        message: 'live-program._validateSourceUrl: fail',
                        meta: {
                            resource: {
                                content_id: t.content_id,
                                content_type: t.content_type_name,
                                url: e
                            }
                        },
                        source: 'vh'
                    }), {
                        start: undefined,
                        end: undefined
                    };
                }(t, e) : void 0;
            }, Y._setupStreams = function(t, e, i) {
                if (!this.isVoidProgram(t) || !0 === i)
                    if (this.isAnnounceProgram(t)) t.cameras = {
                        'default': {
                            streams: [{
                                url: ''
                            }]
                        }
                    }, t._camerasArray = [];
                    else {
                        var n;
                        if (e = e || [], t.cameras) return;
                        var o = e.reduce(function(i, o) {
                            var s, r;
                            return 'default' !== (s = (o = home.deepExtend({}, o)).id || 'default') && n || (n = s), delete o.id, delete o.options, o.content_url && !o.url && (o.url = o.content_url, delete o.content_url), o.url || (o.url = '', Ya.streamCms.onError({
                                method: '_setupStreams',
                                message: '_setupStreams: no url in stream',
                                meta: {
                                    content_id: t.content_id,
                                    content_type: t.content_type_name,
                                    streams: e
                                },
                                source: 'vh'
                            })), o.url = this._getUrl(t, o.url), (r = i.byId[s]) || (r = i.byId[s] = {
                                streams: [],
                                id: s
                            }, i.set.push(r)), o.title && (r.title = o.title, delete o.title), r.thumbnail || (r.thumbnail = o.thumbnail || t.thumbnail), r.streams.push(o), i;
                        }.bind(this), {
                            byId: {},
                            set: []
                        });
                        !o.byId['default'] && n && (o.byId['default'] = o.byId[n], delete o.byId[n]), t.cameras = o.byId, t._camerasArray = o.set;
                        var s = 'future_vod' === this.isForbidden(t);
                        t._camerasArray.length ? this.switchToCamera(t, 'default') : s || Ya.streamCms.onError({
                            method: '_setupStreams',
                            message: '_setupStreams: no cameras',
                            meta: {
                                content_id: t.content_id,
                                content_type: t.content_type_name,
                                streams: e
                            },
                            source: 'vh'
                        });
                    }
            }, Y._getUrl = function(t, e) {
                var i = this._validateSourceUrl(t, e);
                return t.fakeTime && ((i = i || {}).faketime = Math.floor(home.now() / 1000)), i && (e = this.constructUrl(t, e, i)), e;
            }, Y.constructUrl = function(t, e, i) {
                i = i || {};
                var n = home.parseUrl(e),
                    o = home.deepExtend({}, n.query);
                return n.query = home.deepExtend(o, i), home.makeUrl(n);
            }, Y._setPlus = function(t) {
                this.isVodLibrary(t) && t.includes[0] && t.includes[0].ya_plus && (t.ya_plus = t.includes[0].ya_plus);
            }, Y.updateSerialTitle = function(t) {
                if (this.isVodProgram(t)) {
                    var e = t.series;
                    e && (t.isSerial = !0, t.program_title = e.series_name, t.title = e.episode_name || t.title);
                }
            }, Y.disable = function(t) {
                this.isVodProgram(t) && (t._disabled = !0);
            }, Y.getNextProgram = function(t) {
                if (this.isVoidProgram(t)) {
                    var e = t.meta && t.meta.nextProgram;
                    return this.isGenericProgram(e) && e;
                }
            }, Y.setStreamsByChannel = function(t, e) {
                this.isVoidProgram(t) && (t.raw.streams = t.streams = e.streams || [{
                    url: e.content_url
                }], delete t.cameras, this._setupStreams(t, t.raw.streams, !0));
            }, Y.isPersonalChannel = function(t) {
                return t.channelSettings && Ya.streamCms.isPersonalChannel(t.channelSettings.content_id);
            }, Y.disableAds = function(t) {
                t.ads = !1;
            }, Y.screwTime = function(t, e) {
                return e < this.start(t) - 10 && e >= t.start_time ? t.start_time - 1 : e > this.end(t) + 10 && e <= t.end_time ? t.end_time + 1 : e;
            }, Y.eq = function(t, e, i) {
                return e && e.content_id === t.content_id && (i === undefined || t._activeCam === i);
            }, Y.getActiveCam = function(t) {
                return t._activeCam;
            }, Y.getCameras = function(t) {
                return t._camerasArray;
            }, Y.getPersonalReaction = function(t) {
                return t.ugc_likes;
            }, Y.switchToCamera = function(t, e) {
                if (!t.cameras[e || 'default']) throw new RangeError('Camera ' + e + ' is unavailable');
                t._activeCam = e;
            }, Ya.streamModules.programUtils = Y, X = {
                YA_PLUS: 0,
                YA_PLUS_3M: 0,
                KP_BASIC: 1,
                YA_PREMIUM: 2
            }, Q = function(t) {
                return t.map(function(t) {
                    return 'YA_PLUS_3M' === t ? 'YA_PLUS' : t;
                }).sort(function(t, e) {
                    return X[t] - X[e];
                });
            }, home.yaplus = {}, home.yaplus.getCheapest = function(t) {
                return Q(t)[0];
            }, home.yaplus.getMostExpansive = function(t) {
                return Q(t)[t.length - 1];
            }, home.yaplus.shouldBuySubscribe = function(t, e) {
                if (!t) return !0;
                var i = home.yaplus.getCheapest(e);
                return 'YA_PLUS_3M' === t && -1 === e.indexOf('YA_PLUS_3M') || X[t] < X[i];
            }, home.yaplus.getSubscribes = function(t) {
                var e = t.ya_plus;
                return 'episode' !== t.content_type_name || e || (e = t.channelSettings && t.channelSettings.ya_plus), e || [];
            }, home.yaplus.isPlusContent = function(t) {
                return !!home.yaplus.getSubscribes(t).length;
            },
            function() {
                var t = Ya.streamModules.GenericProgram;

                function e() {
                    t.apply(this, arguments);
                }
                e.prototype = Object.create(t.prototype), e.prototype.constructor = e, Ya.streamModules.CatchupProgram = e;
            }(),
            function() {
                var t = Ya.streamModules.GenericProgram;

                function e() {
                    t.apply(this, arguments), this.isLive = !0;
                }
                e.prototype = Object.create(t.prototype), e.prototype.constructor = e, Ya.streamModules.LiveProgram = e;
            }(),
            function() {
                var t = Ya.streamModules.CatchupProgram,
                    e = Ya.streamModules.LiveProgram;
                Ya.streamModules.Episode = function(i) {
                    var n = Ya.streamCms.getChannelSettings(i.parent_id);
                    return n && n.catchup_age ? new t(i) : new e(i);
                };
            }(),
            function() {
                var t = Ya.streamModules.GenericProgram;

                function e() {
                    t.apply(this, arguments), this.updateSerialTitle();
                }
                e.prototype = Object.create(t.prototype), e.prototype.constructor = e, e.prototype.updateSerialTitle = function() {
                    Ya.streamModules.programUtils.updateSerialTitle(this);
                }, e.prototype.disable = function() {
                    Ya.streamModules.programUtils.disable(this);
                }, Ya.streamModules.VodProgram = e;
            }(),
            function() {
                function t(t) {
                    for (var e in t) t.hasOwnProperty(e) && (this[e] = t[e]);
                    this.includes && this._setPlus(), this.channelSettings = Ya.streamCms.getChannelSettings(this.parent_id);
                }
                t.prototype.isForbidden = function() {
                    return Ya.streamModules.programUtils.isForbidden(this);
                }, t.prototype._setPlus = function() {
                    Ya.streamModules.programUtils._setPlus(this);
                }, Ya.streamModules.VodLibrary = t;
            }(),
            function() {
                function t(t) {
                    for (var e in this.raw = t, t) t.hasOwnProperty(e) && (this[e] = t[e]);
                    this.status = Array.isArray(this.status) ? this.transformStatus(t.status) : t.status || {}, this.meta = t.meta || {}, t.streams && t.streams.forEach(function(t) {
                        t.options && -1 !== t.options.indexOf('hires') && (this.meta.superres = 1);
                    }, this);
                }
                t.prototype.isProjectChannel = function() {
                    return Boolean(this.meta && this.meta.project_alias);
                }, t.prototype.isPersonalChannel = function() {
                    return Ya.streamCms.isPersonalChannel(this.content_id);
                }, t.prototype.transformStatus = function(t) {
                    var e = {};
                    return t && t.forEach(function(t) {
                        e[t] = 1;
                    }), e;
                }, Ya.streamModules.Channel = t;
            }(),
            function(t) {
                t.prototype.getCarouselItems = function(t) {
                    var e = this._prepareCarousel({
                        carousel_id: t.carousel_id
                    });
                    return this.getCarousel(e, t);
                }, t.prototype.getCarousel = function(t, e) {
                    return this._carousels.paginators[t.carousel_id].get(e);
                }, t.prototype._fetchCarouselItems = function(t) {
                    var e = this.__apiUrl + 'carousel_videohub.json',
                        i = {
                            carousel_id: t.carousel_id,
                            limit: t.limit,
                            offset: t.offset,
                            delete_filtered: 0
                        },
                        n = this._cacheHash.carousel[t.carousel_id];
                    return n && (i.docs_cache_hash = n), this.settings.exp.stream_card_with_percentage_score && (i.use_entity_recommender = 1), this.ajax(e, i).then(function(e) {
                        var n = e && e.set || [];
                        return this._logBanned(n, i), n = this._prepareCarouselItems(n), e.cache_hash && (this._cacheHash.carousel[t.carousel_id] = e.cache_hash), n;
                    }.bind(this), function(t, n, o) {
                        return home.error.logAjaxError({
                            block: 'stream',
                            method: '_fetchCarouselItems',
                            url: e,
                            source: 'vh',
                            sourceMethod: 'carousel_videohub',
                            meta: {
                                params: i
                            }
                        }, t, n, o), Promise.reject({
                            message: '_fetchCarouselItems: fail'
                        });
                    });
                }, t.prototype._prepareCarouselItems = function(t) {
                    return t.map(function(t) {
                        return t.banned ? null : 'channel' === t.content_type_name && t.status && -1 !== t.status.indexOf('hidden') ? null : this.storeResource(t);
                    }, this);
                }, t.prototype._prepareCarousel = function(t, e) {
                    var i = t.carousel_id,
                        n = this._carousels.byId[i];
                    return t.banned ? null : (n ? (n.title = n.title || t.title, n.has_vertical = n.has_vertical || t.has_vertical) : (n = new Ya.streamModules.Carousel(t), Ya.streamCms.storeCarouselIncludes(n, e), this._carousels.byId[i] = n), n.blogger && Ya.streamCms.storeBlogger && (Ya.streamCms.storeBlogger(n.blogger), n.blogger_id = n.blogger.id, delete n.blogger), n.theme && Ya.streamCms.storeTheme && (Ya.streamCms.storeTheme(n.theme), n.theme_id = n.theme.id, delete n.theme), t.cache_hash && (this._cacheHash.carousel[t.carousel_id] = t.cache_hash), n);
                }, t.prototype.storeCarouselIncludes = function(t, e) {
                    var i, n = t.carousel_id;
                    (t.includes = t.includes || [], t.set = [], t.set = Ya.streamCms._prepareCarouselItems(t.includes), Ya.streamCms._carousels.paginators[n]) || (n && (i = function(t) {
                        return Ya.streamCms._fetchCarouselItems({
                            carousel_id: n,
                            limit: t.limit,
                            offset: t.offset
                        });
                    }), Ya.streamCms._carousels.paginators[n] = new Ya.streamModules.Paginator(t.set, i, e));
                    t.set = t.set.filter(Boolean), delete t.includes;
                };
            }(Ya.streamCms.constructor),
            function() {
                Ya.streamModules.Carousel = function(t) {
                    for (var e in t) t.hasOwnProperty(e) && (this[e] = t[e]);
                    this.content_type_name = 'carousel';
                };
            }(),
            function() {
                function t(t, e, i) {
                    if (this._set = t || [], this._fetcher = e || null, this._getting = {}, i) {
                        var n = {
                            limit: i
                        };
                        this.store(t, n);
                    }
                }
                t.prototype.get = function(t) {
                    var e = ((t = t || {}).limit || 0) + '_' + (t.offset || 0);
                    return this._getting[e] || (this._getting[e] = this._get(t, e).then(function() {
                        return this._getInterval(t).filter(Boolean);
                    }.bind(this), function() {
                        return delete this._getting[e], Promise.reject();
                    }.bind(this))), this._getting[e];
                }, t.prototype._get = function(t) {
                    var e = this._findMissing(t),
                        i = Promise.resolve();
                    return e && this._fetcher && (i = this._fetcher(e).then(function(t) {
                        this._store(t, e);
                    }.bind(this))), i;
                }, t.prototype.store = function(t, e) {
                    return this._store(t, e);
                }, t.prototype._store = function(t, e) {
                    var i, n = (e = e || {}).limit,
                        o = e.offset || 0;
                    n > (t = t || []).length && (i = o + t.length) !== this._remoteTotal && (this._remoteTotal = i), t.forEach(function(t, e) {
                        this._set[e + o] = t;
                    }, this);
                }, t.prototype._findMissing = function(t) {
                    var e, i, n, o = this._remoteTotal,
                        s = o !== undefined,
                        r = t.limit || 0,
                        a = t.offset || 0,
                        c = r;
                    if (s && r && r + a > o && (c = Math.max(o - a, 0)), c) return i = c - (e = this._getInterval({
                        limit: c,
                        offset: a
                    })).length, (n = this._findGap(e))[0] !== undefined ? {
                        limit: (i ? c : n[1] + 1) - n[0],
                        offset: a + (n[0] || 0)
                    } : i ? {
                        limit: i,
                        offset: a + (c - i)
                    } : void 0;
                }, t.prototype._findGap = function(t) {
                    var e, i = [];
                    for (e = 0; e < t.length; e++) t[e] === undefined && (i[0] === undefined && (i[0] = e), i[1] = e);
                    return i;
                }, t.prototype._getInterval = function(t) {
                    var e = (t = t || {}).limit || 0,
                        i = t.offset || 0;
                    return i || (i = 0), e ? this._set.slice(i, e + i) : [];
                }, Ya.streamModules.Paginator = t;
            }(), Ya.streamCms.constructor.prototype.fetchEpisodes = function(t) {
                var e = this.__apiUrl + 'episodes.json',
                    i = 'episodes',
                    n = 'fetchEpisodes',
                    o = Boolean(t.personal),
                    s = this.settings.exp.stream_descrete_scheme;
                return o && (e = this.__apiUrl + 'mychannel/episodes.json', i = 'mychannel/episodes', n += '(mychannel)', this.getPersonalSkipAndDislikeIds && (t.skip_id = this.getPersonalSkipAndDislikeIds().join(',')), delete t.personal), s && (t.discrete_scheme = 1), this.ajax(e, t).then(function(e) {
                    var n = t.end_date__from || -Infinity,
                        s = t.start_date__to || Infinity,
                        r = t.limit,
                        a = (t.parent_id || '').split(',');
                    if (!r) return {
                        data: e,
                        start: n,
                        end: s,
                        channels: a
                    };
                    var c = e && e.set || e || [],
                        h = r / a.length;
                    return o && !c.length && this.onError({
                        block: 'stream',
                        message: 'mychannel/episodes -> empty items',
                        method: 'fetchEpisodes',
                        meta: home.deepExtend(this.getMetaToVhError(e), {
                            params: t
                        }),
                        source: 'vh',
                        sourceMethod: i
                    }), a.map(function(t) {
                        var e = c.filter(function(e) {
                                return e.parent_id === t;
                            }),
                            i = s;
                        return e.length >= h && (i = e[e.length - 1].end_time), {
                            data: e,
                            start: n,
                            end: i,
                            channels: [t]
                        };
                    }, this);
                }.bind(this), function(o, s, r) {
                    return home.error.logAjaxError({
                        block: 'stream',
                        method: n,
                        url: e,
                        source: 'vh',
                        sourceMethod: i,
                        meta: {
                            params: t
                        }
                    }, o, s, r), Promise.reject({
                        message: 'fetchEpisodes: fail'
                    });
                });
            }, BEM.DOM.decl('games', {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.__base.apply(this, arguments), this.findBlockOn('scroller', 'scroller').addScrollStats('games.scroll', 2 * this.elem('item').width()), BEM.blocks['i-multiline-overflow'].calcOverflow(this.elem('more-text'), 3, 'games');
                        }
                    }
                }
            }), BEM.channel('i-sight').on('block_viewed_no:before', function(t, e) {
                e.hasClass('divjson-block') && e.bem('divjson-block').setMod('visible', 'yes');
            }), BEM.DOM.decl('divjson-block', {
                onSetMod: {
                    visible: {
                        yes: function() {
                            this._loadBlockData();
                        }
                    }
                },
                _loadBlockData: function() {
                    if (!this._loadStarted) {
                        this._loadStarted = !0;
                        var t = this.params.api;
                        return $.ajax({
                            url: t,
                            xhrFields: {
                                withCredentials: !0
                            },
                            dataType: 'json',
                            timeout: 10000
                        }).asPromise().then(function(t) {
                            if (this._checkData(t)) return t;
                            throw new Error('Incorrect data');
                        }.bind(this), function(t) {
                            throw t.json && t.json.errors && home.error(t.json), t;
                        }).then(function(t) {
                            if (!t) return Promise.reject();
                            this._onLoad(t);
                        }.bind(this), function(t) {
                            throw home.error.logError({
                                block: this.__self.getName(),
                                sourceType: 'backend',
                                message: 'Incorrect data'
                            }, t), t;
                        }.bind(this))['catch'](function() {
                            BEM.DOM.destruct(this.domElem);
                        }.bind(this));
                    }
                },
                _checkData: function(t) {
                    return 'object' == typeof t && Array.isArray(t.states) && t.states.length > 0;
                },
                _onLoad: function(t) {
                    this._drawBlock(t);
                },
                _drawBlock: function(t) {
                    BEM.DOM.update(this.domElem, home.view('divjson', {
                        json: t,
                        block: this.params.layoutName
                    })), BEM.channel('i-sight').trigger('edges-update'), home.stat.logDOMShow(this.domElem), BEM.DOM.init(this.domElem);
                }
            }), BEM.DOM.declMix('mix-divjson', {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.__base.apply(this, arguments), this._recalcOverflow();
                        }
                    }
                },
                _recalcOverflow: function() {
                    this.domElem.find('.i-multiline-overflow').toArray().forEach(function(t) {
                        var e = $(t);
                        BEM.blocks['i-multiline-overflow'].calcOverflow(e, e.data('lines'));
                    });
                },
                _selectTabChecked: function(t) {
                    this._keys.indexOf(t) > -1 && this._selectTab(t);
                },
                _getPanelHTML: function(t, e) {
                    for (var i in this.params.baseData) this.params.baseData.hasOwnProperty(i) && (e[i] = this.params.baseData[i]);
                    return home.view('divjson__blocks', e);
                }
            }, {
                live: function() {
                    return this.liveBindTo('state-setter', 'click', function(t) {
                        this._selectTabChecked(t.data.domElem.data('set-state'));
                    }), !1;
                }
            }), BEM.DOM.decl({
                block: 'divjson',
                baseMix: ['mix-tabber', 'mix-divjson']
            }, {}), J = {
                black: 'black',
                blue: 'blue',
                cyan: 'cyan',
                gray: '#888888',
                green: '#00ff00',
                magenta: 'magenta',
                red: 'red',
                transparent: 'transparent',
                white: 'white',
                yellow: 'yellow'
            }, home.divjsonUtils = {
                convertColor: function(t) {
                    if ((t = t.toLowerCase()) in J) return J[t];
                    if ('#' !== t.charAt(0)) return 'transparent';
                    if (9 === t.length) {
                        var e = [t.substr(1, 2), t.substr(3, 2), t.substr(5, 2), t.substr(7, 2)];
                        return 'rgba(' + parseInt(e[1], 16) + ',' + parseInt(e[2], 16) + ',' + parseInt(e[3], 16) + ',' + (parseInt(e[0], 16) / 255).toFixed(2) + ')';
                    }
                    return t;
                },
                processText: function(t) {
                    return t ? t.replace(/<font color="(#[\da-f]{8})">/i, function() {
                        return '<font>';
                    }).replace(/₽/g, '<span class="rouble">\u20BD</span>') : '';
                },
                convertPXToEM: function(t) {
                    return (t / 20).toFixed(4) + 'em';
                },
                jsonWrap: function(t, e, i, n) {
                    var o = n.json;
                    i.stack || (i.stack = []), i.stack.push({
                        type: o.type,
                        hasAction: !!o.action
                    });
                    var s = t(e, home.deepExtend({
                        block: i.block,
                        stack: i.stack
                    }, n));
                    return i.stack.pop(), s;
                }
            }, home.makeStyle = function(t) {
                if (!t) return '';
                var e = '';
                for (var i in t)
                    if (t.hasOwnProperty(i)) {
                        if (!t[i] && 0 !== t[i]) continue;
                        e && (e += ';'), e += i + ':' + String(t[i]);
                    }
                return e;
            }, BEM.DOM.decl('divjson-table', {
                onSetMod: {
                    js: {
                        inited: function() {
                            this._autoSizeTable();
                        }
                    }
                },
                _autoSizeTable: function() {
                    var t = 1,
                        e = this.elem('sizer').width(),
                        i = this.elem('table')[0];
                    for (i.style.fontSize = ''; t > 0.3 && !this._isTextFits(i, e);) i.style.fontSize = t + 'em', t -= 0.05;
                },
                _isTextFits: function(t, e) {
                    if (t.offsetWidth > e + 1) return !1;
                    for (var i = Array.from(t.querySelectorAll('td')), n = 0; n < i.length; n++) {
                        var o = i[n];
                        if (o.offsetWidth + 1 < o.scrollWidth) return !1;
                    }
                    return !0;
                }
            }), BEM.DOM.declMix('mix-divjson-tabs', {
                _getPanelHTML: function(t, e) {
                    for (var i in e = {
                            json: e
                        }, this.params.baseData) this.params.baseData.hasOwnProperty(i) && (e[i] = this.params.baseData[i]);
                    return home.view('divjson-container', e);
                },
                _onPanelChange: function(t, e) {
                    this.__base.apply(this, arguments), this.findBlocksInside(e, 'imageloader').forEach(function(t) {
                        t.setMod('visible', 'yes');
                    });
                },
                _createPanel: function() {
                    var t = this.__base.apply(this, arguments);
                    return t.addClass(home.view('divjson-tabs__panel-mix')), t;
                }
            }), BEM.DOM.decl({
                block: 'divjson-tabs',
                baseMix: ['mix-tabber', 'mix-tabber-labels', 'mix-divjson-tabs']
            }, {}), home.css = function() {
                var t, e = {};

                function i(t) {
                    return t + '{' + e[t].join(';') + '}';
                }
                return {
                    decl: function(t) {
                        var i = this._getFullSelector(t);
                        return e[i] = e[i] ? e[i] : [], e[i];
                    },
                    get: function(n) {
                        var o = this._getFullSelector(n);
                        if (o && e[o]) return i(o);
                        for (var s in t = '', e) e.hasOwnProperty(s) && (t += i(s));
                        return t;
                    },
                    clear: function(t) {
                        var i = this._getFullSelector(t);
                        i && e[i] ? delete e[i] : e = {};
                    },
                    elem: function(t) {
                        return Object.create(this, {
                            __rootSelector: {
                                value: this._getFullSelector(t)
                            }
                        });
                    },
                    _getFullSelector: function(t) {
                        return t && 'string' == typeof t ? (this.__rootSelector ? this.__rootSelector + ' ' : '') + t : this.__rootSelector ? this.__rootSelector : '';
                    },
                    __rootSelector: ''
                };
            }, BEM.channel('i-sight').on('block_viewed_no:before', function(t, e) {
                e.hasClass('answers') && e.bem('answers').setMod('visible', 'yes');
            }), BEM.DOM.decl('answers', {
                onSetMod: {
                    js: function() {
                        this._addScrollStats(this.findBlockInside('scroller'));
                    },
                    visible: {
                        yes: function() {
                            this._loadBlockData();
                        }
                    }
                },
                _addScrollStats: function(t) {
                    t.addScrollStats('answers.scroll', this.elem('card').width() / 2);
                },
                _calcOverflow: function() {
                    var t = BEM.blocks['i-multiline-overflow'];
                    this.elem('card').each(function(e, i) {
                        var n = $(i).find('.answers__q-text'),
                            o = $(i).find('.answers__a-text');
                        n.length && t.calcOverflow(n, 4, 'answers__q-title'), o.length && t.calcOverflow(o, 4, 'answers__a-title');
                    });
                },
                _loadBlockData: function() {
                    if (!this._loadStarted) {
                        this._loadStarted = !0;
                        var t = this.params.url,
                            e = this.params.source;
                        $.ajax({
                            url: t,
                            xhrFields: {
                                withCredentials: !0
                            },
                            dataType: 'json',
                            timeout: 10000
                        }).then(function(t, i, n) {
                            if (!(t.items && t.items.length > 0)) return this._updateContent(undefined), home.error.logError({
                                block: this.__self.getName(),
                                message: 'Incorrect data',
                                source: e
                            }), $.Deferred().reject();
                            var o = n.getResponseHeader('x-csrf-token');
                            o && this.hasMod('reactions', 'yes') ? this._csrfToken = o : this.delMod('reactions'), this._updateContent(t);
                        }.bind(this), function(t, i, n) {
                            return home.error.logAjaxError({
                                block: this.__self.getName(),
                                message: '_loadBlockData: ajax',
                                source: e
                            }, t, i, n), $.Deferred().reject();
                        }.bind(this)).fail(function() {
                            this.destruct();
                        }.bind(this));
                    }
                },
                _updateContent: function(t) {
                    if (t) {
                        var e = t.rtx && t.rtx.reqid,
                            i = this.params.reactions,
                            n = t.items.map(function(t, n) {
                                return home.view('answers__item', {
                                    item: t,
                                    index: n,
                                    rtxreqid: e,
                                    reactions: i
                                });
                            }).join('');
                        BEM.DOM.update(this.elem('list-scroller'), n), this._calcOverflow(), this.findBlockOn('imageloader').updateItems(), this.hasMod('reactions', 'yes') && this._bindReactions();
                    } else BEM.DOM.destruct(this.domElem);
                }
            }), BEM.DOM.decl({
                block: 'answers',
                modName: 'reactions',
                modVal: 'yes'
            }, {
                onSetMod: {
                    js: function() {
                        this.__base.apply(this, arguments);
                        var t = this.params.token;
                        t && (this._csrfToken = t, this._bindReactions());
                    }
                },
                _bindReactions: function() {
                    this.bindTo('footer-like', 'click', function(t) {
                        this._handleReaction('like', t);
                    }), this.bindTo('footer-dislike', 'click', function(t) {
                        this._handleReaction('dislike', t);
                    });
                },
                _updateValue: function(t, e) {
                    if (!(e.count < 0)) {
                        var i = this.findElem(t, 'footer-' + e.type),
                            n = this.findElem(i, 'reactions-value'),
                            o = this.findElem(i, 'reactions-wrapper'),
                            s = $(home.view('answers__reactions-value', {
                                active: e.active,
                                isNew: e.animate,
                                count: e.count
                            }));
                        e.animate ? (s.appendTo(o), e.active ? this.setMod(i, 'active', 'yes') : this.delMod(i, 'active'), setTimeout(function() {
                            this.setMod(n, 'old', !0), this.delMod(s, 'new'), n.onceAnimationEnd('transition', 300, function() {
                                n.remove(), this._transitionInProgress = !1;
                            }.bind(this));
                        }.bind(this), 50)) : (n.remove(), s.appendTo(o), e.active ? this.setMod(i, 'active', 'yes') : this.hasMod(i, 'active') && this.delMod(i, 'active'));
                    }
                },
                _handleReaction: function(t, e) {
                    e.preventDefault(), e.stopPropagation();
                    var i = e.data.domElem;
                    if (!this._transitionInProgress) {
                        this._transitionInProgress = !0;
                        var n = i.closest('.answers__card'),
                            o = i.closest('.answers__card-inner').data('card-id'),
                            s = 'like' === t ? 'like' : 'dislike',
                            r = this.findElem(i, 'reactions-value'),
                            a = parseInt(r.text(), 10);
                        this.hasMod(i, 'active') ? (this._updateValue(n, {
                            type: s,
                            count: a - 1,
                            active: !1,
                            animate: !0
                        }), t = null) : this._updateValue(n, {
                            type: s,
                            count: a + 1,
                            active: !0,
                            animate: !0
                        });
                        var c = 'like' !== t ? 'like' : 'dislike',
                            h = this.findElem(n, 'footer-' + c),
                            l = this.findElem(h, 'reactions-value'),
                            u = parseInt(l.text(), 10);
                        this.hasMod(h, 'active') && this._updateValue(n, {
                            type: c,
                            count: u - 1,
                            active: !1,
                            animate: !1
                        });
                        var d = home.stringf(this.params.voteUrl, o);
                        this._sendReaction(d, t);
                    }
                },
                _sendReaction: function(t, e) {
                    var i = JSON.stringify({
                        vote: null === e ? null : 'like' === e
                    });
                    $.ajax({
                        type: 'POST',
                        url: t,
                        timeout: 15000,
                        xhrFields: {
                            withCredentials: !0
                        },
                        headers: {
                            'X-CSRF-Token': this._csrfToken,
                            'Content-Type': 'application/json'
                        },
                        dataType: 'text',
                        data: i
                    }).asPromise()['catch'](function(e) {
                        home.error.logError({
                            block: this.__self.getName(),
                            message: '_sendReaction: ajax',
                            url: t,
                            source: 'answers'
                        }, e);
                    }.bind(this));
                }
            }), BEM.DOM.decl('informers7', {}, {
                live: function() {
                    var t = this.__base.apply(this, arguments);
                    return this.liveBindTo('login', 'click', function() {
                        return BEM.blocks.dialog.show('domik'), !1;
                    }), t;
                }
            }), BEM.afterCurrentEvent(function() {
                BEM.blocks.sidebar.addClickHandler('weather', '.informers7__weather-sb', '.informers7__weather-sb', {
                    header: 'our',
                    title: home.l10n('weather.title'),
                    turbo: !0,
                    urlChecker: function(t) {
                        var e = home.parseUrl(t);
                        return /^yandex\.(ru|ua|kz|by)$/.test(e.host);
                    },
                    fallbackUrl: function(t) {
                        var e = home.parseUrl(t);
                        return e.query.no_turbo = 1, home.makeUrl(e);
                    }
                });
            }), BEM.DOM.decl({
                block: 'informers8-item',
                modName: 'mail',
                modVal: 'yes'
            }, {}, {
                live: function() {
                    var t = this.__base.apply(this, arguments);
                    return this.liveBindTo('mail-show-domik', 'click', function() {
                        return BEM.blocks.dialog.show('domik'), !1;
                    }), t;
                }
            }), BEM.afterCurrentEvent(function() {
                BEM.blocks.sidebar.addClickHandler('weather2', '.informers8-item__weather-sidebar', '.informers8-item__weather-sidebar', {
                    header: 'our',
                    title: home.l10n('mobile.informers.weather'),
                    turbo: !0,
                    urlChecker: function(t) {
                        var e = home.parseUrl(t);
                        return /^yandex\.(ru|ua|kz|by)$/.test(e.host);
                    },
                    fallbackUrl: function(t) {
                        var e = home.parseUrl(t);
                        return e.query.no_turbo = 1, home.makeUrl(e);
                    }
                });
            }), BEM.DOM.decl({
                block: 'informers8-traffic-personal',
                baseMix: ['mix-tabber', 'mix-tabber-loader']
            }, {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.__base.apply(this, arguments), this._selectTab(this._getDefaultDirection());
                        }
                    }
                },
                _loadData: function(t) {
                    var e = this.params[t] && this.params[t].url,
                        i = this;
                    return e ? $.ajax({
                        method: 'get',
                        url: e,
                        cache: !1,
                        timeout: 10000
                    }).asPromise().then(function(e) {
                        if (!e || !e.direct) return Promise.reject('informers8-traffic-personal._loadData: parseData');
                        if (!e.direct.time || e.bypass && !e.bypass.time) return Promise.reject('informers8-traffic-personal._loadData: zeroResponse');
                        var n = e.bypass && e.bypass.timeText;
                        return e.isBlocked || e.direct.timeText || n ? (i.__self.cache[t] = {
                            timestamp: home.now().getTime() + 300000
                        }, e) : Promise.reject('informers8-traffic-personal._loadData: parseData');
                    }) : Promise.reject();
                },
                _getPanelHTML: function(t, e) {
                    return home.view('informers8-traffic-personal__panel', {
                        title: this.params[t].title,
                        router: e,
                        key: t
                    });
                },
                _getPanelRetry: function(t) {
                    return home.view('informers8-traffic-personal__panel', {
                        title: this.params[t].title,
                        error: !0,
                        key: t
                    });
                },
                _renderLoader: function() {
                    return home.view('informers8-traffic-personal__panel-loader');
                },
                _changeTab: function(t) {
                    var e = this.__self.cache[t],
                        i = this._$panel.outerWidth();
                    e && e.timestamp < home.now().getTime() && this._panels[t] && (this._panels[t].remove(), delete this._panels[t], delete this._dataPromises[t], delete this._data[t]), this.__base.apply(this, arguments);
                    var n = this.findElem(this._$panel, 'panel-loader');
                    n.length ? n.width(i) : this._animateWidth(i, this._$panel.outerWidth());
                },
                _drawData: function(t, e) {
                    var i = e.outerWidth();
                    this.__base.apply(this, arguments);
                    var n = e.outerWidth();
                    e.width(e.outerWidth() + 1), this._animateWidth(i, n);
                },
                _animateWidth: function(t, e) {
                    var i = this.elem('panels'),
                        n = this;
                    i.width(t), setTimeout(function() {
                        i.width(e).onceAnimationEnd('transition', 250, function() {
                            if (i.width(''), e > t && n._switcherClicked) {
                                var o = i.closest('.scroller'),
                                    s = i.closest('.informers8__list').outerWidth() - $(window).width();
                                o.animate({
                                    scrollLeft: s
                                }, 250);
                            }
                        });
                    }, 50);
                },
                _createPanel: function() {
                    var t = this.__base.apply(this, arguments);
                    return t.addClass('informers8-traffic-personal__panel_hide_yes informers8-traffic-personal__panel_transparent_yes'), t;
                },
                _toggleMountPanel: function(t, e, i) {
                    i ? (e.parent().length || this.elem('panels').append(e), this.delMod(e, 'hide'), this.delMod(e, 'absolute'), setTimeout(function() {
                        this.delMod(e, 'transparent');
                    }.bind(this), 50)) : (this.setMod(e, 'absolute', 'yes'), this.setMod(e, 'transparent', 'yes'), e.onceAnimationEnd('transition', 250, function() {
                        this._selectedKey !== t && this.setMod(e, 'hide', 'yes');
                    }.bind(this)));
                },
                _onSwitcherClick: function() {
                    var t = 'to_home' === this._selectedKey ? 'to_work' : 'to_home';
                    this._selectTab(t), this._switcherClicked = !0;
                },
                _getDefaultDirection: function() {
                    return this.params.direction;
                }
            }, {
                cache: {},
                live: function() {
                    return this.__base.apply(this, arguments), this.liveBindTo('switcher', 'click', function() {
                        this._onSwitcherClick();
                    }), !1;
                }
            }), $.fn.onceAnimationEnd = function(t, e, i) {
                var n, o, s, r = this;

                function a() {
                    clearTimeout(s), i = null, r.off(n);
                }
                'object' == typeof t && (o = t.property, t = t.type), n = 'animation' === t ? 'webkitAnimationEnd animationend' : 'webkitTransitionEnd transitionend', this.on(n, function(t) {
                    !r.is(t.target) || o && o !== t.originalEvent.propertyName || i && (i(r), a());
                }), s = setTimeout(function() {
                    i && (i(r), a());
                }, e + 50);
            }, BEM.DOM.decl({
                block: 'tumbler'
            }, {
                onSetMod: {
                    js: {
                        inited: function() {
                            this.__base.apply(this, arguments), this._inputValues = this.elemParams(this.elem('input'))._values, this._labelsLength = this.elem('label').length, this._buttonWidth = this.elem('button').width(), this._maxLeft = this.elem('box').width() - this._buttonWidth;
                        }
                    },
                    checked: function(t, e) {
                        var i = this._inputValues[e ? 1 : 0],
                            n = 2 === this._labelsLength ? this.elem('text', 'side', e ? 'right' : 'left')[0].id : this.elem('text').length ? this.elem('text')[0].id : '';
                        this.elem('input').attr('aria-labelledby', n).val(i).prop('checked', e), this.elem('button').attr('aria-pressed', Boolean(e)), this.trigger('change', {
                            checked: Boolean(e),
                            value: this.val()
                        });
                    },
                    disabled: function(t, e) {
                        this.__base.apply(this, arguments), this.findBlockOn('button', 'button2').setMod('disabled', e), this.elem('input').prop('disabled', Boolean(e));
                    }
                },
                val: function(t) {
                    return void 0 === t ? this.elem('input').val() : -1 === this._inputValues.indexOf(t) || this.val() === t ? this : this._toggle();
                },
                _toggle: function() {
                    return this.toggleMod('checked', 'yes', !this.elem('input').prop('checked')), this;
                },
                _onPointerpress: function(t) {
                    this.setMod('pressed', 'yes').bindToDoc('pointerrelease', this._onPointerrelease);
                },
                _onPointerrelease: function(t) {
                    this.delMod('pressed').unbindFromDoc('pointerrelease');
                },
                _onStickerClick: function() {
                    this._toggle(), this.findBlockOn(this.elem('button'), 'button2').setMod('focused', 'yes');
                },
                _onLabelClick: function(t) {
                    this._shouldChange(t) && (this._toggle(), this.findBlockOn(this.elem('button'), 'button2').setMod('focused', 'yes'));
                },
                _onButtonClick: function() {
                    this._toggle();
                },
                _onButtonFocus: function() {
                    this.setMod(this.elem('button'), 'focused', 'yes'), this.setMod('focused', 'yes');
                },
                _onButtonBlur: function() {
                    this.delMod(this.elem('button'), 'focused'), this.delMod('focused');
                },
                _shouldChange: function(t) {
                    var e = 'left' === this.getMod(t.data.domElem, 'side');
                    if (2 === this._labelsLength) {
                        var i = !e && this.elem('input').prop('checked');
                        if (e && !this.elem('input').prop('checked') || i) return !1;
                    }
                    return !0;
                }
            }, {
                live: function() {
                    return this.liveInitOnBlockInsideEvent('focus', 'button2', function() {
                        this.hasMod('disabled') || this._onButtonFocus();
                    }).liveInitOnBlockInsideEvent('blur', 'button2', function() {
                        this.hasMod('disabled') || this._onButtonBlur();
                    }).liveInitOnBlockInsideEvent('click', 'button2', function(t) {
                        this.hasMod('disabled') || this._onButtonClick();
                    }).liveBindTo('pointerpress', function(t) {
                        this.hasMod('disabled') || this._onPointerpress(t);
                    }).liveBindTo('sticker', 'pointerclick', function(t) {
                        this.hasMod('disabled') || this._onStickerClick();
                    }).liveBindTo('label', 'pointerclick', function(t) {
                        this.hasMod('disabled') || this._onLabelClick(t);
                    }).liveBindTo('button', 'keydown', function(t) {
                        t.shiftKey || t.ctrlKey || t.altKey || t.metaKey || BEM.blocks.keycodes.is(t.keyCode, 'SPACE', 'LEFT', 'UP', 'RIGHT', 'DOWN') && t.preventDefault();
                    }).liveBindTo('button', 'keyup', function(t) {
                        var e = BEM.blocks.keycodes,
                            i = t.keyCode;
                        t.shiftKey || t.ctrlKey || t.altKey || t.metaKey || (e.is(i, 'LEFT', 'UP') ? this.delMod('checked') : e.is(i, 'RIGHT', 'DOWN') && this.setMod('checked', 'yes'));
                    }), this.__base();
                }
            }),
            function() {
                var t = $(window),
                    e = $(document.documentElement),
                    i = 0,
                    n = !1;

                function o() {
                    e.hasClass('pointerfocus') && (n = !0, setTimeout(function() {
                        n = !1;
                    }));
                }
                document.documentMode <= 11 ? e.on('focusin', function(t) {
                    var e = t.originalEvent;
                    !e || e.fromElement || e.relatedTarget || o();
                }) : t.on('blur', function() {
                    t.one('focus', o);
                }), e.addClass('utilityfocus').on({
                    focusin: function() {
                        e.toggleClass('pointerfocus', n).toggleClass('utilityfocus', !n);
                    },
                    keydown: function() {
                        clearTimeout(i), n = !1;
                    },
                    'pointerdown pointerup click': function(t) {
                        n = !0, clearTimeout(i), i = setTimeout(function() {
                            n = !1;
                        }, 600);
                    }
                });
            }(), BEM.channel('i-sight').on('block_viewed_no:before', function(t, e) {
                e.hasClass('nhl') && e.bem('nhl').setMod('visible', 'yes');
            }), BEM.DOM.decl({
                block: 'nhl',
                baseMix: ['mix-tabber', 'mix-tabber-labels', 'mix-tabber-loader']
            }, {
                onSetMod: {
                    js: function() {
                        this._addScrollStats(this.findBlockInside('scroller'));
                    },
                    visible: {
                        yes: function() {
                            this._loadBlockData();
                        }
                    }
                },
                _addScrollStats: function(t) {
                    t.addScrollStats('nhl.scroll', this.elem('card').width() / 2);
                },
                _loadBlockData: function() {
                    if (!this._loadStarted) {
                        this._loadStarted = !0;
                        var t = this.params.url;
                        $.ajax({
                            url: t,
                            xhrFields: {
                                withCredentials: !0
                            },
                            dataType: 'json',
                            timeout: 10000
                        }).asPromise().then(function(t) {
                            this._updateContent(t);
                        }.bind(this), function(t) {
                            throw home.error.logError({
                                block: this.__self.getName(),
                                sourceType: 'network'
                            }, t), t;
                        }.bind(this))['catch'](function() {
                            this.destruct();
                        }.bind(this));
                    }
                },
                _updateContent: function(t) {
                    if (t) {
                        var e = t.tabs[0].id;
                        BEM.DOM.update(this.elem('tabs'), t.tabs.map(function(e, i) {
                            var n = 0 === i;
                            return home.view('mix-tabber__tab', {
                                mods: {
                                    selected: n ? 'yes' : 'no'
                                },
                                mix: home.getBEMClassname('nhl__tab', {
                                    mods: {
                                        selected: n ? 'yes' : 'no',
                                        last: i === t.tabs.length - 1 ? 'yes' : ''
                                    }
                                }),
                                content: e.title,
                                attrs: {
                                    tabindex: n ? '0' : '-1',
                                    'aria-selected': n ? 'true' : 'false',
                                    'aria-controls': n ? 'nhl_panel_' + e.id : undefined,
                                    'data-key': e.id,
                                    'data-stat-select': 'nhl.tab.select.' + e.id,
                                    id: 'nhl_tab_' + e.id
                                }
                            });
                        }).join('')), BEM.DOM.update(this.elem('panels'), home.view('mix-tabber__panel', {
                            block: 'nhl',
                            id: 'nhl',
                            key: e,
                            attrs: {
                                'aria-labelledby': 'nhl_tab_' + e
                            },
                            content: home.view('nhl__panel', {
                                items: t[e],
                                isDark: this.params.isDark
                            })
                        }));
                        var i = t.url;
                        if (i) {
                            var n = this.elem('title-text');
                            BEM.DOM.replace(n, home.view('home-link', {
                                href: i,
                                mix: 'nhl__title-text',
                                content: n.text(),
                                attrs: {
                                    'data-statlog': 'nhl.title'
                                },
                                stat: ''
                            })), BEM.DOM.replace(this.elem('logo'), home.view('home-link', {
                                href: i,
                                mix: 'nhl__logo',
                                attrs: {
                                    'data-statlog': 'nhl.logo'
                                },
                                stat: ''
                            }));
                        }
                        'hide_spoilers' in this.params && this.params.hide_spoilers_url && (BEM.DOM.update(this.elem('tumbler'), home.view('tumbler', {
                            mix: 'nhl__score-tumbler',
                            mods: {
                                size: 'n',
                                theme: 'normal',
                                view: 'default',
                                tone: this.params.isDark ? 'dark2' : '',
                                checked: this.params.hide_spoilers ? 'yes' : ''
                            },
                            content: [{
                                side: 'left',
                                content: home.l10n('hockey.hide_score2')
                            }]
                        })), this.toggleMod('hide-score', 'yes', !!this.params.hide_spoilers)), this.dropElemCache('panel'), this.dropElemCache('tab'), this.dropElemCache('tab', 'selected', 'yes'), this._$panel = this.elem('panel'), this._panels[e] = this._$panel, this._keys = t.tabs.map(function(t) {
                            return t.id;
                        }), this._selectedKey = this._defaultKey = e;
                        var o = this.findBlockInside('score-tumbler', 'tumbler');
                        o && o.on('change', function(t, e) {
                            this.toggleMod('hide-score', 'yes', e.checked);
                            var i = e.checked ? 'hide_spoilers_url' : 'show_spoilers_url',
                                n = this.params[i];
                            n && (new Image().src = n), home.stat.logPath('click', 'nhl.spoilers.' + (e.checked ? 'off' : 'on'));
                        }, this), BEM.channel('i-sight').trigger('edges-update');
                    } else BEM.DOM.destruct(this.domElem);
                },
                _onPanelChange: function() {
                    BEM.channel('i-sight').trigger('edges-update');
                },
                _loadData: function(t) {
                    return $.ajax({
                        url: home.makeUrl({
                            path: '/portal/hockey/' + t,
                            query: this.params.query
                        }),
                        xhrFields: {
                            withCredentials: !0
                        },
                        dataType: 'json',
                        timeout: 15000
                    }).asPromise().then(function(e) {
                        return {
                            items: e[t]
                        };
                    });
                },
                _getPanelHTML: function(t, e) {
                    return e.isDark = this.params.isDark, home.view('nhl__panel', e);
                },
                _renderLoader: function() {
                    return home.view('nhl__panel', {
                        dummy: !0
                    });
                }
            }), BEM.DOM.decl('nhl-item', {
                onSetMod: {
                    js: {
                        inited: function() {
                            var t = this.elem('text', 'long', 'yes'),
                                e = BEM.blocks['i-multiline-overflow'];
                            e.calcOverflow(t, 2, 'nhl-item__text_long_yes');
                            var i = this.elem('news-text'),
                                n = this.__self.NEWS_TITLE_LINE_COUNT;
                            this.hasMod(i, 'title', 'yes') ? e.calcOverflow(i, n, 'nhl-item__news-text_title_yes') : e.calcOverflow(i, n, 'nhl-item__news-text'), e.calcOverflow(this.elem('news-subtext'), 6, 'nhl-item__news-text');
                        }
                    }
                }
            }, {
                NEWS_TITLE_LINE_COUNT: 5
            }), BEM.DOM.decl('nhl-item', {}, {
                NEWS_TITLE_LINE_COUNT: 3
            }), t.__moduleExports = x, t.FastClick = I, t;
    }({});
    ! function() {
        var e = {
            afisha: {
                cinemaNoSessions: 'Сегодня в кинотеатре сеансов нет',
                cinemaSeeNextDay: 'Расписание на завтра',
                noCinemas: 'Кинотеатров рядом не найдено',
                scheduleError: 'Не удалось загрузить данные',
                scheduleTryAgain: 'Попробовать еще раз',
                searchInProgress: 'Идёт поиск кинотеатров '
            },
            auth: {
                'account-not-found': 'Неправильный логин',
                'captcha-invalid': 'Неправильно введены контрольные символы',
                'password-invalid': 'Неправильный пароль'
            },
            direct: {
                bought_already: 'Уже купил',
                not_interest: 'Не интересуюсь',
                spam: 'Спам'
            },
            district: {
                searchInProgress: 'Ищем новости района'
            },
            edadeal: {
                notFound: 'Скидки в магазинах рядом не найдены',
                searchInProgress: 'Ищем магазины рядом...'
            },
            etrain: {
                express: 'Экспресс',
                shortTitle: 'Электрички'
            },
            geo: {
                geolocationDisabled: 'Доступ к геоданным запрещен',
                geolocationFail: 'Ваша геопозиция недоступна',
                geolocationFetchFail: 'Не удалось загрузить данные',
                geolocationInaccuracy: 'Геопозиция определена неточно'
            },
            hockey: {
                hide_score2: 'Скрывать счёт в карточках матчей'
            },
            loading: {
                retry: 'Попробовать ещё раз'
            },
            messenger: {
                title: 'Чаты'
            },
            mobile: {
                geoBalloon: {
                    notfound: {
                        message: 'Не удалось определить местоположение.'
                    }
                },
                geolocation: {
                    find: 'Идёт определение местоположения',
                    load: 'Ищем места рядом'
                },
                informers: {
                    weather: 'Погода'
                },
                zen: {
                    more: 'Еще больше статей на каждый день',
                    'more-short': 'Больше статей'
                }
            },
            news: {
                geotouch: {
                    title: 'Новости'
                }
            },
            places: {
                notFound: 'Места рядом не найдены',
                searchInProgress: 'Ищем места рядом',
                title: 'Места рядом'
            },
            pushes: {
                notice: {
                    error: {
                        cancel: 'Закрыть',
                        text: 'Проверьте, разрешены ли уведомления в настройках.',
                        title: 'Что-то пошло не так',
                        web_error: 'Ошибка соединения с сервером. Попробуйте позже'
                    },
                    prompt: {
                        cancel: 'Нет, спасибо',
                        text: 'Яндекс может сообщать о начале трансляций, результатах и других событиях.<br>Для этого разрешите ему присылать уведомления. Их всегда можно отключить в настройках.',
                        title: 'Уведомления о событиях'
                    },
                    wait: {
                        title: 'Нажмите <b>\xABРазрешить\xBB</b><br>во всплывающем окне.'
                    }
                },
                sup_button: {
                    subscribe: 'Подписаться',
                    unsubscribe: 'Отписаться'
                }
            },
            schedule: {
                aeroexpress: {
                    s2000005: 'м. Павелецкая',
                    s2000006: 'м. Белорусская',
                    s2000007: 'м. Киевская',
                    s9600213: 'Шереметьево',
                    s9600215: 'Внуково',
                    s9600216: 'Домодедово'
                },
                aeroexpressTo: 'Аэроэкспресс до %s',
                airport: {
                    s9600213: 'Шереметьево',
                    s9600215: 'Внуково',
                    s9600216: 'Домодедово'
                },
                arrival: 'Прилёт',
                board: 'Табло а/п %s',
                departure: 'Вылет',
                el: 'Электрички',
                noStations: 'Станций рядом не найдено',
                schedule: 'Расписание',
                searchInProgress: 'Идёт поиск станций',
                showMap: 'Посмотреть на карте',
                train: 'Поезда'
            },
            stream: {
                card: {
                    category: {
                        anim_film: 'мультфильм',
                        anim_series: 'мультсериал',
                        film: 'фильм',
                        series: 'сериал'
                    }
                }
            },
            traffic: {
                personal: {
                    noinfo: 'нет данных',
                    path_to_home: 'Домой',
                    path_to_work: 'На&#32;работу',
                    route: {
                        loading: 'Получаем данные по маршруту'
                    }
                }
            },
            tv: {
                title: 'Телепрограмма'
            },
            'voice-search': {
                popup: {
                    connectionproblem: {
                        subtitle: 'Ошибка соединения',
                        title: 'Проверьте соединение с интернетом'
                    },
                    noaccess: {
                        subtitle: 'Как включить голосовой поиск, можно узнать в помощи',
                        title: 'Вы заблокировали доступ к микрофону'
                    },
                    unknownerror: {
                        title: 'Неизвестная ошибка'
                    }
                }
            },
            votes: {
                collapse: 'Свернуть',
                expand: 'Все результаты'
            },
            weather: {
                title: 'Погода'
            }
        };
        home.lang = home.lang && 'undefined' != typeof MBEM ? MBEM.extend(home.lang, e) : e;
    }(),
    function() {
        ! function() {
            'use strict';
            home.parseRules = {
                l10n: function(e, t, i) {
                    return t.l10n || home.error('Can\'t proccess \'l10n:' + i + '\', check context of template'), t.l10n && t.l10n(i);
                },
                baseViews: function(e, t, i) {
                    return t.baseViews(i, e);
                },
                bem: function(e, t, i) {
                    i = i.split('.'), e = e || {};
                    var a = i.pop(),
                        s = i.pop(),
                        n = i.pop();
                    switch (a) {
                        case 'class':
                            var o = home.getBEMClassname(s, (n ? e[n] : e) || {});
                            return t && t.cls && t.cls.contains(s) ? t.cls.full(o) : o;
                        case 'js':
                            return home.getBEMParams(e[s || 'js'] || {});
                        case 'attrs':
                            return home.getAttributes(e[s || 'attrs']);
                    }
                },
                cls: function(e, t, i) {
                    return t && t.cls ? t.cls.full(i) : i;
                }
            };
        }();
        var e, t = home.view ? Object.create(home.view.templates) : {},
            i = {
                l10n: home.l10n,
                stat: {
                    logShow: function(e, t) {
                        return t && (e += a(t)), home.stat.logPath('show', e), e;
                    },
                    getAttr: function(e, t, i) {
                        return e ? ((i = i || {}).customParams && (e += a(i.customParams)), ' data-statlog="' + e + '"' + (!1 !== i.isRedirect ? '' : ' data-statlog-redir="0"') + (i.precise ? ' data-statlog-precise="1"' : '')) : '';
                    },
                    getAdaptiveCounter: function(e, t) {
                        return e ? ' data-statlog="' + e + '"' + (t ? ' data-statlog-redir="0"' : '') + ' data-statlog-autoshow="1"' : '';
                    },
                    getClientCounter: function(e, t, i) {
                        return (e = i ? e + a(i) : e) ? ' data-statlog="' + e + '"' + (t ? ' data-statlog-redir="0"' : '') : '';
                    }
                },
                settingsJs: {
                    add: function(e, t, i) {
                        home['export'][i] || (home['export'][i] = {}), home['export'][i][e] = t;
                    },
                    has: function(e, t) {
                        return home.getData && home.getData(t + '.' + e);
                    }
                },
                csp: (e = {
                    stub: !0
                }, ['allowDefault', 'allowStyle', 'allowPlugin', 'allowObject', 'allowMedia', 'allowImg', 'allowFont', 'allowConnect', 'allowScript', 'allowChild', 'allowForm'].forEach(function(t) {
                    e[t] = function(e) {
                        if (home.error && (!home.getData || !0 === home.getData('csp.report'))) {
                            var i = new Error('req.csp.' + t + ' was called on clientside');
                            i.meta = {
                                url: e
                            }, i.block = 'home.views', home.error.logError(i);
                        }
                    };
                }), e)
            };

        function a(e) {
            var t = [];
            if (Array.isArray(e)) t = e;
            else
                for (var i in e) e.hasOwnProperty(i) && e[i] !== undefined && t.push(i + '=' + encodeURIComponent(e[i]));
            return t.length ? '(' + t.join(';') + ')' : '';
        }

        function s(e, i) {
            if (i) {
                var a = t[e];
                i instanceof Function ? t[e] = i : t[e] = home.templateGenerator(i, e), a && (t[e].base = a);
            }
        }
        s.cached = function(e, i) {
            i && (s(e, i), t[e].cached = !0);
        }, home.view = function(e, a, s) {
            var n, o = s || a || {};
            for (n in i) o.hasOwnProperty(n) || (o[n] = i[n]);
            var r = window.home && home.getData && home.getData('common.req') || {};
            for (n in r) r.hasOwnProperty(n) && !o.hasOwnProperty(n) && (o[n] = r[n]);
            return function l(e, i) {
                var a = e instanceof Function ? e : t[e],
                    s = '';
                return a && (s = a.cached ? a(o, l) : a(i, o, l)), s;
            }(e, a);
        }, home.view.templates = t, home.view.define = s, s('home-link', function(e, t, i) {
            var a = 'a',
                s = e.attrs || {},
                n = e.mods || {},
                o = e.inlineIcon || '';
            return e.href ? s.href = e.href : a = e.tag || 'span', e.title && (s.title = e.title), e.role && (s.role = e.role), e.tabindex && (s.tabindex = e.tabindex), e.target && (s.target = e.target), '_blank' === s.target && 'undefined' == typeof s.rel && (s.rel = 'noopener'), i('home-link__tmpl', {
                attrs: s,
                tag: a,
                mix: e.mix,
                mods: n,
                content: e.content,
                stat: e.stat,
                icon: o
            });
        }), s('home-link__tmpl', function(e, t, i) {
            var a;
            return '<' + (e.tag !== a ? e.tag : '') + ' class="' + home.parseRules.bem(e, t, 'home-link.class') + '"' + home.parseRules.bem(e, t, 'attrs') + (e.stat !== a ? e.stat : '') + '>' + (e.icon !== a ? e.icon : '') + (e.content !== a ? e.content : '') + '</' + (e.tag !== a ? e.tag : '') + '>';
        }), s('sup-notice_type_default', function(e, t, i) {
            return i('sup-notice__layout_type_default', {
                ok: i('button2', {
                    mods: {
                        theme: 'action',
                        size: 'n',
                        view: 'default',
                        tone: 'default'
                    },
                    mix: 'sup-notice__ok sup-notice__ok_type_default',
                    content: i('sup-notice__default-ok-text')
                }),
                cancel: i('button2', {
                    mods: {
                        theme: 'normal',
                        size: 'n',
                        view: 'default',
                        tone: 'default'
                    },
                    mix: 'sup-notice__cancel sup-notice__cancel_type_default',
                    content: 'Нет, спасибо'
                })
            });
        }), s('sup-notice__layout_type_default', function(e, t, i) {
            var a;
            return '<div class="sup-notice sup-notice_type_default sup-notice_hidden_yes i-bem"><div class="sup-notice__title">Уведомления о событиях</div><div class="sup-notice__text">Яндекс может сообщать о начале трансляций, результатах и других событиях.<br>Для этого разрешите ему присылать уведомления. Их всегда можно отключить в настройках.</div><div class="sup-notice__buttons">' + (e.ok !== a ? e.ok : '') + (e.cancel !== a ? e.cancel : '') + '</div></div>';
        }), s('button2__icons', function(e, t, i) {
            var a = [];
            return e.icon ? a.push(i('button2__icon', {
                mod: e.icon
            })) : e.iconObj && a.push(i('icon', {
                mods: e.iconObj.mods,
                mix: 'button2__icon' + (e.iconObj.mix ? ' ' + e.iconObj.mix : '')
            })), e.iconLeft ? a.push(i('button2__icon', {
                mod: 'button2__icon_side_left ' + e.iconLeft
            })) : e.iconLeftObj && a.push(i('icon', {
                mods: e.iconLeftObj.mods,
                mix: 'button2__icon button2__icon_side_left' + (e.iconLeftObj.mix ? ' ' + e.iconLeftObj.mix : '')
            })), e.iconRight ? a.push(i('button2__icon', {
                mod: 'button2__icon_side_right ' + e.iconRight
            })) : e.iconRightObj && a.push(i('icon', {
                mods: e.iconRightObj.mods,
                mix: 'button2__icon button2__icon_side_right' + (e.iconRightObj.mix ? ' ' + e.iconRightObj.mix : '')
            })), a.join('');
        }), s('button2__default_mods', function() {
            return 'i-bem';
        }), s('button2', function(e, t, i) {
            var a = e.mods || {},
                s = e.tag || 'button',
                n = e.textMix ? ' ' + e.textMix : '',
                o = e.mixJs || {},
                r = e.attrs || {};
            return e.url ? s = 'a' : e.tag && (s = e.tag), a.theme || ('yes' === a.pseudo ? a.theme = 'pseudo' : a.theme = 'normal'), r.role = 'button', e.tabindex && (r.tabindex = e.tabindex), e.url ? (r.href = e.url, e.target && (r.target = e.target), a.disabled && (r['aria-disabled'] = !0), '_blank' === r.target && 'undefined' == typeof r.rel && (r.rel = 'noopener')) : (r.type = e.type || 'button', e.name && (r.name = e.name), e.value && (r.value = e.value), a.disabled && (r.disabled = 'disabled')), a.view || (a.view = 'classic'), o.button2 = e.js || {}, r['data-bem'] = home.getBEMParams(o), '<' + s + ' class="' + home.getBEMClassname('button2', {
                mods: a,
                mix: e.mix
            }) + ' ' + i('button2__default_mods', e) + '"' + home.getAttributes(r) + (e.stat || '') + '>' + i('button2__icons', e) + '<span class="button2__text' + n + '"' + (e.text && e.text.attrs ? home.getAttributes(e.text.attrs) : '') + '>' + (e.content || '') + '</span></' + s + '>';
        }), s('button2__icon', function(e, t, i) {
            return '<span class="icon button2__icon ' + (void 0 !== e.mod ? e.mod : '') + '" aria-hidden="true"></span>';
        }), s('sup-notice__default-ok-text', function(e, t) {
            return 'Разрешить';
        }), s('sup-notice_type_popup', function(e, t, i) {
            return i('sup-notice__layout_type_popup', {
                ok: i('button2', {
                    mods: {
                        theme: 'action2',
                        size: 'n',
                        view: 'default'
                    },
                    mix: 'sup-notice__ok sup-notice__ok_type_default',
                    content: 'Хорошо'
                }),
                cancel: i('button2', {
                    mods: {
                        theme: 'clear',
                        size: 'n',
                        view: 'default'
                    },
                    mix: 'sup-notice__cancel sup-notice__cancel_type_default',
                    content: 'Нет, спасибо'
                })
            });
        }), s('sup-notice__layout_type_popup', function(e, t, i) {
            var a;
            return '<div class="sup-notice sup-notice_type_popup sup-notice_hidden_yes i-bem"><div class="sup-notice__text">Яндекс будет присылать уведомления об этом событии.</div><div class="sup-notice__buttons">' + (e.cancel !== a ? e.cancel : '') + (e.ok !== a ? e.ok : '') + '</div></div>';
        }), s.cached('avatar__mask-bg-pool', function() {
            return ['254E70', '1670B7', '00A6FB', '38AECC', '63CCCA', '10B297', '5DA399', '397367', '259D38', '679436', '8AC927', '99C24D', 'A5BE00', 'EEB900', 'F18F01', 'F2641A', 'F45D02', 'A3333D', 'C33C54', 'D8315B', 'FF595E', 'BDADEA', '6A4C93', 'A37871'];
        }), s('avatar__href', function(e, t) {
            var i = 'https://avatars.mds.yandex.net/get-yapic/' + (e.avatar_id || '0/0-0') + '/' + (e.avatar_size || 'islands-middle');
            return t.csp && !t.csp.stub && t.csp.allowImg(i), i;
        }), s('avatar__image', function(e, t, i) {
            var a, s, n = e.avatarSizes || (e.mods ? {
                    s: {
                        'default': 'islands-small',
                        '2x': 'islands-retina-small'
                    },
                    m: {
                        'default': 'islands-34',
                        '2x': 'islands-68'
                    },
                    l: {
                        'default': 'islands-middle',
                        '2x': 'islands-retina-middle'
                    }
                }[e.mods.size] : null) || {},
                o = 'avatar__image ' + (e.imageMix || ''),
                r = i('retina-scale') >= 1.25,
                l = '';
            if (e.avatarUrl) a = e.avatarUrl;
            else if (e.colored) {
                var c = i('avatar__mask-bg-pool');
                l = 'background-color: #' + c[Math.floor(Math.random() * c.length)] + ';';
            } else a = i('avatar__href', {
                avatar_id: e.avatarId,
                avatar_size: n['default']
            }), n['2x'] && (s = i('avatar__href', {
                avatar_id: e.avatarId,
                avatar_size: n['2x']
            }));
            return a && (l += 'background-image:url(' + (r && s || a) + ');' + (s ? 'background-image:-webkit-image-set(url(' + a + ') 1x, url(' + s + ') 1.25x);' : '')), i('span', {
                mod: 'avatar__image-wrapper',
                content: i('span', {
                    mod: o,
                    attrs: {
                        style: l
                    }
                })
            });
        }), s('avatar', function(e, t, i) {
            var a = e.mix || '',
                s = e.mods || {},
                n = e.attrs || {};
            return e.colored && (s.dummy = 'yes'), i('home-link', {
                mix: a += ' ' + home.getBEMClassname('avatar', {
                    mods: s
                }),
                attrs: n,
                href: e.href,
                stat: e.stat,
                content: i('avatar__image', e)
            });
        }), s('span', function(e, t, i) {
            var a;
            return '<span class="' + (e.mod !== a ? e.mod : '') + '"' + home.parseRules.bem(e, t, 'attrs') + '>' + (e.content !== a ? e.content : '') + '</span>';
        }), s('div', function(e, t, i) {
            var a, s;
            return '<div class="' + (e.mix !== s ? e.mix : t.mix !== s ? t.mix : (a = i('mix', e)) !== s ? a : '') + '"' + home.parseRules.bem(e, t, 'attrs') + '>' + (e.content !== s ? e.content : t.content !== s ? t.content : (a = i('content', e)) !== s ? a : '') + '</div>';
        }), s('style', function(e, t, i) {
            var a, s;
            return '<style' + ((a = i('csp-nonce', e)) !== s ? a : '') + '>' + (e.content !== s ? e.content : t.content !== s ? t.content : (a = i('content', e)) !== s ? a : '') + '</style>';
        }), s.cached('retina-scale', function(e) {
            return 'number' == typeof devicePixelRatio ? devicePixelRatio : e.UserDevice && e.UserDevice.ratio && parseFloat(e.UserDevice.ratio.replace('_', '.')) || 1;
        }), s('voice-search-popup__access', function() {
            return '';
        }), s('voice-search-popup__buttons', function(e, t, i) {
            return i('button', {
                mods: {
                    size: 'm',
                    theme: 'action'
                },
                mix: 'voice-search-popup__continue-button voice-search-popup__error-button',
                content: 'Продолжить поиск',
                attrs: {
                    'data-statlog': 'voice.popup.continue-search'
                }
            });
        }), s('voice-search-popup', function(e, t, i) {
            return i('voice-search-popup__layout', {
                js: {
                    'voice-search-popup': {}
                },
                startLetters: 'Говорите...'.split('').map(function(e, t, a) {
                    return i('voice-search-popup__start-text-span', {
                        letter: e,
                        delay: 0.3 / a.length * t,
                        duration: 0.3
                    });
                }).join(''),
                errorButtons: i('voice-search-popup__buttons', e),
                showMicHelper: e.showMicHelper
            });
        }), s('voice-search-popup__start-text-span', function(e, t, i) {
            var a;
            return '<span class="voice-search-popup__letter" style="-webkit-animation-delay: ' + (e.delay !== a ? e.delay : '') + 's; -webkit-animation-duration: ' + (e.duration !== a ? e.duration : '') + 's; animation-delay: ' + (e.delay !== a ? e.delay : '') + 's; animation-duration: ' + (e.duration !== a ? e.duration : '') + 's;">' + (e.letter !== a ? e.letter : '') + '</span>';
        }), s('voice-search-popup__layout', function(e, t, i) {
            var a, s;
            return '<div class="voice-search-popup__paranja" data-statlog="voice.popup.paranja"></div><div class="voice-search-popup voice-search-popup_state_closed i-bem" data-bem="' + home.parseRules.bem(e, t, 'js') + '" data-statlog="voice.popup.popup"><div class="voice-search-popup__close" data-statlog="voice.popup.close"></div><div class="voice-search-popup__content"><div class="voice-search-popup__init">Секунду</div><div class="voice-search-popup__start">' + (e.startLetters !== s ? e.startLetters : '') + '</div><div class="voice-search-popup__error"><div class="voice-search-popup__title voice-search-popup__error-title"></div><div class="voice-search-popup__subtitle voice-search-popup__error-subtitle"></div><div class="voice-search-popup__error-actions">' + (e.errorButtons !== s ? e.errorButtons : '') + '</div></div>' + ((a = i('voice-search-popup__text', e)) !== s ? a : '') + '<div class="voice-search-popup__indicator"></div>' + ((a = i('voice-search-popup__access', e)) !== s ? a : '') + '</div></div>';
        }), s('button', function(e) {
            var t = e.mods || {},
                i = 'button',
                a = e.attrs || {};
            return e.url ? i = 'a' : e.tag && (i = e.tag), t.theme || ('yes' === t.pseudo ? t.theme = 'pseudo' : t.theme = 'normal'), a.role = 'button', e.tabindex && (a.tabindex = e.tabindex), e.url ? (a.href = e.url, e.target && (a.target = e.target), t.disabled && (a['aria-disabled'] = !0), '_blank' === a.target && 'undefined' == typeof a.rel && (a.rel = 'noopener')) : (a.type = e.type || 'button', e.name && (a.name = e.name), e.value && (a.value = e.value), t.disabled && (a.disabled = 'disabled')), '<' + i + ' class="' + home.getBEMClassname('button', {
                mods: t,
                mix: e.mix
            }) + ' i-bem" data-bem="{&quot;button&quot;:{}}"' + home.getAttributes(a) + (e.stat || '') + '><span class="button__text">' + (e.content || '') + '</span></' + i + '>';
        }), s('voice-search-popup__text', function(e, t, i) {
            return '<div class="voice-search-popup__text"><div class="voice-search-popup__text-inner-wrap"><div class="voice-search-popup__text-inner"></div></div></div>';
        }), s('listview', function(e, t, i) {
            var a, s, n, o, r, l, c = [];
            if (e.list)
                for (l = 0; l < e.list.length; ++l)(r = i(e.prefix + e.list[l], e)) && c.push(r);
            else
                for (s = e.viewName || 'item', l = 0; l < e.items.length; ++l) {
                    var _ = e.items[l];
                    (r = i(e.forceItemView || _.itemView || e.prefix + s, _)) && c.push(r);
                }
            return n = e.splitterName || 'splitter', o = e.layoutName || 'layout', a = !1 !== e.splitter ? i(e.prefix + n, e) : '', (e = Object.create(e)).items = c.join(a), i(e.prefix + o, e);
        }), s('swiper__page-left', function(e) {
            if (e.left) return ' style="left:' + e.left + '"';
        }), s('swiper__item', function(e, t, i) {
            return e.mod = e.item__mod || '', e.inner__mod = e.item__inner__mod || '', e.counter ? (e.noBlockDisplay || t.stat.logShow(e.counter), e.stat = ' data-statlog="' + e.counter + '"') : e.stat || (e.stat = ''), e.itemView ? i(e.itemView, e) : i('swiper__item-layout', e);
        }), s('swiper__category', function(e, t, i) {
            var a = e.tab.title;
            return i(e.tab.href ? 'swiper__category-link' : 'swiper__category-item', {
                href: e.tab.href,
                title: a,
                mod: e.tab.selected ? ' swiper__category_selected_yes' : '',
                mix: e.tab.mix || '',
                selected: e.tab.selected ? 'true' : 'false',
                key: e.tab.key + '',
                'stat-select': e.tab.selectCounter ? ' data-stat-select="' + e.tab.selectCounter + '"' : '',
                'stat-link': e.tab.linkCounter ? ' data-statlog="' + e.tab.linkCounter + '"' : '',
                tabsStat: e.tab.tabsStat
            });
        }), s('swiper__categories', function(e, t, i) {
            return i('swiper__categories-layout', {
                mod: e.hiddenCategories ? ' swiper__categories_mode_hidden' : '',
                items: e.tabs.map(function(e) {
                    return i('swiper__category', {
                        tab: e
                    });
                }).join('')
            });
        }), s('swiper', function(e, t, i) {
            for (var a, s, n, o, r, l = {}, c = [], _ = e.itemParams || {}, d = 0; d < e.tabs.length; ++d) {
                var m = e.tabs[d];
                if (m.selected) {
                    s = m.key, n = m;
                    break;
                }
            }
            if (n === undefined) {
                if (home.error('No selected page in swiper: ' + (e.block || '<no block>')), !e.tabs[0]) return;
                n = e.tabs[0], s = n.key;
            }
            if (n.list) o = n.list.map(function(e) {
                var t = home.deepExtend({
                    tabKey: s
                }, _);
                return e = home.deepExtend(t, e), i('swiper__item', e);
            }).join('');
            else {
                if (!n.html) return void home.error('Swiper default page has no data: ' + (e.block || '<no block>'));
                o = n.html;
            }
            return e.tabs.forEach(function(e) {
                c.push(e.key), e.selected || (l[e.key] = e.list || e.html);
            }), t.settingsJs.add('data', l, e.block), r = {
                swiper: {
                    dataKey: e.block,
                    statKey: e.statKey || e.block,
                    selectedTabKey: s,
                    keys: c,
                    itemParams: _,
                    live: e.live
                }
            }, e.js && (r = home.deepExtend(r, e.js)), a = i('swiper__categories', e), i('swiper__layout', {
                categoriesTop: e.categoriesAtTop ? a : '',
                categoriesBottom: e.categoriesAtTop ? '' : a,
                title: e.title ? i('swiper__title', {
                    content: i('home-link', {
                        href: e.href,
                        content: e.title,
                        stat: e.titleStat,
                        attrs: e.titleAttrs,
                        mix: (e.block ? e.block + '__title' : '') + ' block__title-text'
                    })
                }) : '',
                arrows: e.arrows ? i('swiper__arrows', {
                    selectedTabKey: s,
                    keysList: c
                }) : '',
                firstPageHTML: o,
                firstPageKey: s + '',
                mod: (e.mod || '') + ' ' + (e.initMod || 'i-bem'),
                block: e.block,
                staticContent: e.staticContent,
                additionalContent: e.additionalContent,
                params: home.getBEMParams(r),
                mods: {
                    'multiple-tabs': e.tabs.length > 1 ? 'yes' : 'no',
                    arrows: e.arrows ? 'yes' : undefined
                },
                attrs: {
                    role: e.label ? 'complementary' : '',
                    'aria-label': e.label,
                    'data-blockname': e.blockname
                }
            });
        }), s('swiper__page', function(e, t, i) {
            var a, s;
            return '<div class="swiper__page swiper__page_moved_yes" data-key="' + (e.key !== s ? e.key : '') + '" role="tabpanel" aria-hidden="true"' + ((a = i('swiper__page-left', e)) !== s ? a : '') + '>' + (e.items !== s ? e.items : '') + '</div>';
        }), s('swiper__item-layout', function(e, t, i) {
            var a;
            return '<a class="listview__item swiper__item ' + (e.mod !== a ? e.mod : '') + '" href="' + (e.href !== a ? e.href : '') + '"' + (e.stat !== a ? e.stat : '') + '><div class="listview__item-inner' + (e.inner__mod !== a ? e.inner__mod : '') + '"><div class="' + (e.content__mod !== a ? e.content__mod : '') + '">' + (e.text !== a ? e.text : '') + '</div></div><div class="listview__arrow"></div></a>';
        }), s('swiper__category-item', function(e, t, i) {
            var a, s;
            return '<span class="swiper__category' + (e.mod !== s ? e.mod : '') + '" data-key="' + (e.key !== s ? e.key : '') + '"' + ((a = t.ua) && (a = a.tabRole), a !== s ? a : '') + 'aria-selected="' + (e.selected !== s ? e.selected : '') + '"' + (e['stat-select'] !== s ? e['stat-select'] : '') + (e['stat-link'] !== s ? e['stat-link'] : '') + '>' + (e.title !== s ? e.title : '') + '</span>';
        }), s('swiper__category-link', function(e, t, i) {
            var a, s;
            return '<a class="swiper__category' + (e.mod !== s ? e.mod : '') + (e.mix !== s ? e.mix : '') + '" data-key="' + (e.key !== s ? e.key : t.key !== s ? t.key : (a = i('key', e)) !== s ? a : '') + '"' + ((a = t.ua) && (a = a.tabRole), a !== s ? a : '') + ' aria-selected="' + (e.selected !== s ? e.selected : '') + '" href="' + (e.href !== s ? e.href : '') + '"' + (e['stat-select'] !== s ? e['stat-select'] : '') + (e['stat-link'] !== s ? e['stat-link'] : '') + ' ' + (e.tabsStat !== s ? e.tabsStat : '') + '>' + (e.title !== s ? e.title : '') + '</a>';
        }), s('swiper__categories-layout', function(e, t, i) {
            var a, s;
            return '<div class="swiper__categories scroller__hider' + (e.mod !== s ? e.mod : t.mod !== s ? t.mod : (a = i('mod', e)) !== s ? a : '') + '"><div class="swiper__categories-scroller scroller i-bem" data-bem="{&quot;scroller&quot;:{}}"><div class="swiper__categories-border-spacer"><div class="swiper__categories-border">' + (e.items !== s ? e.items : '') + '</div></div></div></div>';
        }), s('swiper__title', function(e, t, i) {
            return '<div class="block__title">' + (void 0 !== e.content ? e.content : '') + '</div>';
        }), s('swiper__layout', function(e, t, i) {
            var a;
            return '<div class="' + (e.block !== a ? e.block : '') + ' ' + (e.mod !== a ? e.mod : '') + ' ' + home.parseRules.bem(e, t, 'swiper.class') + '" data-bem="' + (e.params !== a ? e.params : '') + '"' + home.parseRules.bem(e, t, 'attrs') + '>' + (e.title !== a ? e.title : '') + (e.categoriesTop !== a ? e.categoriesTop : '') + (e.staticContent !== a ? e.staticContent : '') + '<div class="swiper__pages"><div class="swiper__scrollable"><div class="swiper__page" data-key="' + (e.firstPageKey !== a ? e.firstPageKey : '') + '" role="tabpanel" aria-hidden="false">' + (e.firstPageHTML !== a ? e.firstPageHTML : '') + '</div></div>' + (e.arrows !== a ? e.arrows : '') + '</div>' + (e.categoriesBottom !== a ? e.categoriesBottom : '') + (e.additionalContent !== a ? e.additionalContent : '') + '</div>';
        }), s('notifications_type_traffic__indicator', function(e, t, i) {
            return '0' === e.jamRating ? '&nbsp;пробок нет' : i('notifications_type_traffic__jams-icon', {
                jams: e.isBlocked ? i('notifications_type_traffic__personal-blocked', {}) : e.jamRating,
                isBlocked: e.isBlocked,
                noData: e.noData
            });
        }), s('notifications_type_traffic__jams-icon-mod', function(e) {
            if (e.jams > 9) return ' notifications_type_traffic__icon-high';
        }), s('notifications_type_traffic__jams-color', function(e) {
            return e.noData ? 'gray' : e.jams >= 7 || e.isBlocked ? 'red' : e.jams > 3 ? 'yellow' : 'green';
        }), s('notifications_type_traffic__slide-wrapper', function(e, t, i) {
            var a;
            return '<a class="notifications_type_traffic__slide swiper__item notifications_type_traffic__slide_index_' + (e.index !== a ? e.index : '') + '">' + (e.content !== a ? e.content : '') + '</a>';
        }), s('notifications_type_traffic__layout-bypass', function(e, t, i) {
            var a, s;
            return '<div class="notifications_type_traffic__inner notifications_type_traffic__bypass"><div class="notifications_type_traffic__line">' + ((a = i('notifications_type_traffic__layout-nobypass', e)) !== s ? a : '') + '</div><div class="notifications_type_traffic__line notifications_type_traffic__otherway">' + (e.deltaTimeText !== s ? e.deltaTimeText : '') + '</div></div>';
        }), s('notifications_type_traffic__layout-nobypass', function(e, t, i) {
            var a, s;
            return '<span class="notifications_type_traffic__item notifications_type_traffic__direction">' + (e.directionLabel !== s ? e.directionLabel : '') + '</span><span class="notifications_type_traffic__item notifications_type_traffic__rate"><span class="notifications_type_traffic__nowrap">' + ((a = i('notifications_type_traffic__indicator', e)) !== s ? a : '') + '<span class="notifications_type_traffic__item notifications_type_traffic__score-word">' + (e.jamRateWord !== s ? e.jamRateWord : '') + '</span></span><span class="notifications_type_traffic__item notifications_type_traffic__time">' + (e.jamsTime !== s ? e.jamsTime : '') + '</span></span>';
        }), s('notifications_type_traffic__nobypass', function(e, t, i) {
            var a;
            return '<div class="notifications_type_traffic__inner notifications_type_traffic__nobypass">' + (void 0 !== (a = i('notifications_type_traffic__layout-nobypass', e)) ? a : '') + '</div>';
        }), s('notifications_type_traffic__personal-unknown', function(e, t, i) {
            return '<span class="notifications_type_traffic__personal-unknown">?</span>';
        }), s('notifications_type_traffic__personal-blocked', function(e, t, i) {
            return '<span class="notifications_type_traffic__personal-blocked"></span>';
        }), s('notifications_type_traffic__loader', function(e, t, i) {
            return '<div class="notifications_type_traffic__loader-block"><span class="notifications_type_traffic__loader loader"></span><span class="notifications_type_traffic__loader-text">Получаем данные по маршруту</span></div>';
        }), s('notifications_type_traffic__jams-icon', function(e, t, i) {
            var a, s;
            return '<div class="notifications_type_traffic__icon notifications_type_traffic__icon-' + (e['notifications_type_traffic__jams-color'] !== s ? e['notifications_type_traffic__jams-color'] : t['notifications_type_traffic__jams-color'] !== s ? t['notifications_type_traffic__jams-color'] : (a = i('notifications_type_traffic__jams-color', e)) !== s ? a : '') + (e.mod !== s ? e.mod : t.mod !== s ? t.mod : (a = i('mod', e)) !== s ? a : '') + (e['notifications_type_traffic__jams-icon-mod'] !== s ? e['notifications_type_traffic__jams-icon-mod'] : t['notifications_type_traffic__jams-icon-mod'] !== s ? t['notifications_type_traffic__jams-icon-mod'] : (a = i('notifications_type_traffic__jams-icon-mod', e)) !== s ? a : '') + '"><div class="notifications_type_traffic__icon__text">' + (e.jams !== s ? e.jams : t.jams !== s ? t.jams : (a = i('jams', e)) !== s ? a : '') + '</div></div>';
        }), s('direct-close-block', function(e, t, i) {
            var a = {},
                s = t.cls.full('direct-close-block'),
                n = e.idleTheme || 'light',
                o = e.closingTheme || 'light',
                r = {
                    abuseUrl: e.abuseUrl,
                    statName: e.statName,
                    sendStat: e.sendStat
                };
            if (e.isDark && (n = 'dark', o = 'dark'), e.theme = e.theme || t.cls.part('direct'), a.mod = s + '_' + e.theme, a.mod += t.cls.full(' direct-close-block_idle-theme_' + n), a.mod += t.cls.full(' direct-close-block_closing-theme_' + o), a.js = {}, a.js[s] = {
                    name: s,
                    id: e.directId
                }, e.clientOnly) a.js[s].data = r;
            else {
                var l = {};
                l[e.directId] = {
                    closeData: r
                }, t.settingsJs.add('data', l, 'direct');
            }
            return e.isTouch || (a.tooltip = i('direct-close-block__tooltip')), i('direct-close-block__layout', a);
        }), s('direct-close-block__close-block', function(e, t, i) {
            return '<div class="' + home.parseRules.cls(e, t, 'direct-close-block__close-popup') + '"><div class="' + home.parseRules.cls(e, t, 'direct-close-block__close-popup-content-wrapper') + '"><div class="' + home.parseRules.cls(e, t, 'direct-close-block__close-popup-content') + '"><span class="' + home.parseRules.cls(e, t, 'direct-close-block__close-popup-capture') + '">Скрыть рекламу:</span>' + (void 0 !== e.buttons ? e.buttons : '') + '</div></div></div>';
        }), s('direct-close-block__confirm-block', function(e, t, i) {
            return '<div class="' + home.parseRules.cls(e, t, 'direct-close-block__confirm-popup') + '"><div class="' + home.parseRules.cls(e, t, 'direct-close-block__confirm-popup-content') + '"><div class="' + home.parseRules.cls(e, t, 'direct-close-block__check-icon') + '"></div>Спасибо, объявление скрыто</div></div>';
        }), s('direct-close-block__layout', function(e, t, i) {
            var a;
            return '<div class="' + home.parseRules.cls(e, t, 'direct-close-block') + ' ' + home.parseRules.cls(e, t, 'direct-close-block_state_idle') + ' ' + (e.mod !== a ? e.mod : '') + ' i-bem" data-bem="' + home.parseRules.bem(e, t, 'js') + '"><div class="' + home.parseRules.cls(e, t, 'direct-close-block__close-button') + '"><div class="' + home.parseRules.cls(e, t, 'direct-close-block__close-icon-wrapper') + '"><div class="' + home.parseRules.cls(e, t, 'direct-close-block__close-icon') + '"></div></div>' + (e.tooltip !== a ? e.tooltip : '') + '</div></div>';
        }), s('direct-close-block__tooltip', function(e, t, i) {
            return i('direct-close-block__tooltip-layout');
        }), s('direct-close-block__tooltip-layout', function(e, t, i) {
            return '<div class="' + home.parseRules.cls(e, t, 'direct-close-block__tooltip') + '"><div class="' + home.parseRules.cls(e, t, 'direct-close-block__tooltip-triangle') + '"></div><div class="' + home.parseRules.cls(e, t, 'direct-close-block__tooltip-content') + '">Скрыть объявление</div></div>';
        }), s('news__sign-style', function(e) {
            return 'style="width:' + e.width + 'ch; margin-left:-' + e.width + 'ch;"';
        }), s('news__item-icon', function(e) {
            return e.ishot ? '<div class="news__icon-hot"></div>' : '<div class="listview__arrow"></div>';
        }), s('news__item', function(e, t, i) {
            var a = e.attrs || {},
                s = e.nolinks ? '' : e.href,
                n = e.stat || 'news.links.' + e.tabKey,
                o = '';
            return e.agency_name && (o = i('news__agency-icon-with-url', {
                agencyUrl: e.agency_logo,
                agencyTitle: e.agency_name,
                platform: 'touch'
            }), e.full = o + e.full), e.ishot && (n += '.main'), e.turbo_off && (a['data-turbooff'] = 1), i('home-link', {
                href: s = s && e.withTurbo && !e.turbo_off ? i('sidebar__turbo-href', {
                    href: s
                }) : s,
                mix: 'news__item swiper__item listview__item' + e.mod + (e.ishot ? ' news__item_hot' : '') + (o ? ' news__item_icon' : ''),
                stat: t.stat.getAttr(n, null, {
                    logShow: !e.noBlockDisplay
                }),
                attrs: a,
                content: i('news__item-layout', e)
            });
        }), s('news__item-layout', function(e, t, i) {
            var a, s;
            return '<div class="news__item-inner listview__item-inner"><div class="news__item-inner-wrapper"><div class="news__item-content ' + (e.dottedClassName !== s ? e.dottedClassName : '') + '">' + (e.full !== s ? e.full : '') + '</div>' + (e.sign !== s ? e.sign : '') + '</div></div>' + ((a = i('news__item-icon', e)) !== s ? a : '');
        }), s('news__agency-icon-with-url', function(e, t, i) {
            return e.agencyUrl ? i('news__agency-icon-with-url-layout', e) : i('news__agency-icon-with-url-default', e);
        }), s('news__agency-icon-with-url-default', function(e, t, i) {
            var a;
            return '<div class="news__agency-icon news__agency-icon_' + (e.platform !== a ? e.platform : '') + ' news__agency-icon_image_yes"><div class="news__agency-icon-image-empty" title="' + (e.agencyTitle !== a ? e.agencyTitle : '') + '"></div></div>';
        }), s('news__agency-icon-with-url-layout', function(e, t, i) {
            var a;
            return '<div class="news__agency-icon news__agency-icon_' + (e.platform !== a ? e.platform : '') + ' news__agency-icon_image_yes"><object class="news__agency-icon-image" title="' + (e.agencyTitle !== a ? e.agencyTitle : '') + '" data="' + (e.agencyUrl !== a ? e.agencyUrl : '') + '" type="image/png"><div class="news__agency-icon-image-empty"></div></object></div>';
        }), s('sidebar__turbo-href', function(e, t, i) {
            var a = home.getData('sidebar.turboBaseUrl') || i('sidebar__turbo-host').custom,
                s = '&fallback=1' + (t.Requestid ? '&parent-reqid=' + t.Requestid : '') + (e.turboQuery || '');
            return e.href && 0 === e.href.indexOf(a) ? e.href : a ? a + encodeURIComponent(e.href) + s : void 0;
        }), s('sidebar', function(e, t, i) {
            var a;
            return '<div class="' + home.parseRules.bem(e, t, 'sidebar.class') + '"><div class="sidebar__inner"><div class="' + home.parseRules.bem(e, t, 'header.sidebar__header.class') + '"><div class="sidebar__back" tabindex="0" role="button"><div class="sidebar__back-icon"></div><span class="sidebar__back-text">Назад</span></div><div class="sidebar__title">' + (e.title !== a ? e.title : '') + '</div></div><div class="sidebar__content"><div class="sidebar__loader loader"></div><div class="sidebar__retry" tabindex="0" role="button" data-statlog="' + (e.name !== a ? e.name : '') + '.sidebar.retry"><div class="sidebar__retry-text">Ошибка загрузки</div><div class="sidebar__retry-icon"></div></div></div></div></div>';
        }), s('swiper__load-error', function(e, t, i) {
            var a;
            return '<span class="swiper__load-error" data-statlog="' + (e.stat !== a ? e.stat : '') + '">Не удалось загрузить данные' + (e.button !== a ? e.button : '') + '</span>';
        }), s('swiper__loader', function(e, t, i) {
            return '<div class="swiper__loader loader" data-statlog="' + (void 0 !== e.stat ? e.stat : '') + '"></div>';
        }), s('swiper__page-load', function(e, t, i) {
            var a;
            return '<div class="swiper__page-load" style="height:' + (e.height !== a ? e.height : '') + 'px">' + (e.content !== a ? e.content : '') + '</div>';
        }), s('zen__item', function(e, t) {
            var i = e.item,
                a = e.index,
                s = {
                    mix: 'imageloader__card',
                    attrs: {
                        href: i.feed_link,
                        target: '_blank',
                        rel: 'noopener'
                    },
                    title: i.title,
                    stat: t.stat.getAttr(e.statPrefix + 'card.' + a, null, {
                        customParams: e.extendedLog ? {
                            title: home.stat.replaceBrackets(i.title),
                            image: i.image,
                            feed_link: i.feed_link
                        } : {}
                    })
                },
                n = (i.logo, i.image && i.logo.w || (e.isDarkTheme ? i.logo.w : i.logo.b));
            return s.domain = home.view('zen__item-domain', {
                imgSrc: n ? 'style="background-image: url( ' + n + ')"' : '',
                domain: n ? '' : i.domain_title,
                sizeClasses: i.domain_title && i.domain_title.length > 26 ? ' zen__item-domain-long' : ''
            }), i.image ? (s.mix = 'imageloader__card', s.imgSrc = i.image, s.imageloaderClasses = ' imageloader__image imageloader__image_loaded_no') : s.mix = 'imageloader__card zen__item_image_no' + (e.isDarkTheme ? ' zen__item_darktheme_yes' : ''), home.view('zen__item-layout', s);
        }), s('zen__bro-item', function(e, t, i) {
            return '<div class="zen__item imageloader__card"><a class="zen__item-link zen__bro-link" ' + home.parseRules.bem(e, t, 'attrs') + '><div class="zen__bro-image imageloader__image" ' + home.parseRules.bem(e, t, 'image.attrs') + '></div><span class="zen__bro-phone imageloader__image" ' + home.parseRules.bem(e, t, 'phone.attrs') + '></span><span class="zen__bro-logo imageloader__image" ' + home.parseRules.bem(e, t, 'logo.attrs') + '></span><span class="zen__bro-description">Удобный способ читать Дзен</span><div class="zen__bro-button"><span class="zen__bro-button-span">Скачать</span></div></a></div>';
        }), s('zen__item-domain', function(e, t, i) {
            var a, s;
            return '<span class="zen__item-domain' + (e.sizeClasses !== s ? e.sizeClasses : t.sizeClasses !== s ? t.sizeClasses : (a = i('sizeClasses', e)) !== s ? a : '') + '" ' + (e.imgSrc !== s ? e.imgSrc : t.imgSrc !== s ? t.imgSrc : (a = i('imgSrc', e)) !== s ? a : '') + '>' + (e.domain !== s ? e.domain : t.domain !== s ? t.domain : (a = i('domain', e)) !== s ? a : '') + '</span>';
        }), s('zen__more-item', function(e, t, i) {
            var a, s;
            return '<div class="zen__item"><a class="zen__item-link zen__more-link imageloader__card" ' + home.parseRules.bem(e, t, 'attrs') + '><span class="zen__more-logo imageloader__image" ' + home.parseRules.bem(e, t, 'logo.attrs') + '></span><span class="zen__more-title">' + (e.title !== s ? e.title : t.title !== s ? t.title : (a = i('title', e)) !== s ? a : '') + '</span></a></div>';
        }), s('zen__item-layout', function(e, t, i) {
            var a, s;
            return '<div class="' + home.parseRules.bem(e, t, 'zen__item.class') + '"><a class="zen__item-link ' + (e.noImage !== s ? e.noImage : t.noImage !== s ? t.noImage : (a = i('noImage', e)) !== s ? a : '') + '" ' + home.parseRules.bem(e, t, 'attrs') + ' ' + (e.stat !== s ? e.stat : '') + '><span class="zen__item-image' + (e.imageloaderClasses !== s ? e.imageloaderClasses : t.imageloaderClasses !== s ? t.imageloaderClasses : (a = i('imageloaderClasses', e)) !== s ? a : '') + '" data-image="' + (e.imgSrc !== s ? e.imgSrc : t.imgSrc !== s ? t.imgSrc : (a = i('imgSrc', e)) !== s ? a : '') + '"></span>' + (e.domain !== s ? e.domain : t.domain !== s ? t.domain : (a = i('domain', e)) !== s ? a : '') + '<span class="zen__item-title">' + (e.title !== s ? e.title : t.title !== s ? t.title : (a = i('title', e)) !== s ? a : '') + '</span></a></div>';
        }), s('enrich-list-with-promo', function(e) {
            var t = e.list,
                i = e.promo && e.promo.position,
                a = e.promo && e.promo.html;
            return a && t && t.splice(i, 0, a), t.join('');
        }), s('market__format-price', function(e, t, i) {
            var a = e.currency.name || '';
            'RUR' === e.currency.id && (a = i('rouble', {}));
            var s = home.formatNumber(e.price) + '&nbsp;' + a;
            return 'от %s'.replace(/%s/, s);
        }), s('market__content', function(e, t, i) {
            var a = e.serviceName;
            return e.items.map(function(s, n) {
                var o = i('market__card', {
                        image: i('market__prepare-image-client', s.photo),
                        price: i('market__format-price', {
                            price: s.price.min,
                            currency: e.currency
                        }),
                        priceMix: 'market__card-price',
                        title: i('span', {
                            mod: 'market__card-title',
                            content: home.htmlFilter(s.name)
                        })
                    }),
                    r = e.isTurbo ? i('sidebar__turbo-href', {
                        href: s.link
                    }) : s.link;
                return i('home-link', {
                    href: r,
                    mix: 'market__card market__card_item imageloader__card',
                    stat: t.stat.getAttr(a + '.item.' + n, r, {
                        logShow: !1,
                        customParams: {
                            id: s.id
                        }
                    }),
                    content: o
                });
            }).join('') + i('home-link', {
                href: e.marketUrl,
                mix: 'market__card market__card_more',
                stat: t.stat.getAttr(a + '.more', e.marketUrl),
                content: i('market__more')
            });
        }), s('market__prepare-image-client', function(e) {
            return e && e.thumbnails[0] && e.thumbnails[1] ? home.getBEMParams({
                1: e.thumbnails[0].url,
                2: e.thumbnails[1].url
            }) : e ? e.url : '';
        }), s('market__more', function(e, t, i) {
            return '<span class="market__more"><span class="market__more-arrow"></span><span class="market__more-text">Больше товаров</span></span>';
        }), s('market__card', function(e, t, i) {
            var a;
            return '<span class="market__card-image market__card-overlay imageloader__image imageloader__image_loaded_no" data-image="' + (e.image !== a ? e.image : '') + '"></span><span class="' + (e.priceMix !== a ? e.priceMix : '') + '">' + (e.price !== a ? e.price : '') + '</span>' + (e.title !== a ? e.title : '');
        }), s('market__layout-client', function(e, t, i) {
            var a;
            return '<div class="market__wrapper scroller__hider"><div class="market__cards-scroller scroller imageloader__scroller" data-bem="{&quot;scroller&quot;:{}}"><div class="market__items ' + (e.mix !== a ? e.mix : '') + '">' + (e.content !== a ? e.content : '') + '</div></div></div>';
        }), s('rouble', function(e, t, i) {
            return '<span class="rouble' + (void 0 !== e.mod ? e.mod : '') + '">\u20BD</span>';
        }), s('player-control__loader', function(e, t, i) {
            return '<div class="player-control__loader"><div class="player-control__close" role="button" tabindex="0" title="Закрыть"></div><span class="player-control__spin loader"></span></div>';
        }), s('dialog__layout', function(e, t, i) {
            var a;
            return '<div class="' + home.parseRules.bem(e, t, 'dialog.class') + '" data-bem="' + home.parseRules.bem(e, t, 'js') + '"' + home.parseRules.bem(e, t, 'attrs') + '>' + (e.content !== a ? e.content : '') + (e.cut !== a ? e.cut : '') + (e.footer !== a ? e.footer : '') + '</div>';
        }), s('stream-settings__get', function(e, t, i) {
            return home.getData('stream.stream.clientData.settings', i('stream-settings'));
        }), s('stream-thumbnail__src', function(e, t, i) {
            var a = e.thumbnail;
            if (!a) return '';
            var s = i('stream-thumbnail__sizes', e);
            return -1 !== a.indexOf('/get-vh/') && (a = a.replace(/(\/get-vh\/.+?)\/orig$/, '$1/' + s.byRatios[s.ratio])), -1 !== a.indexOf('/get-ott/') && (a = a.replace(/(\/get-ott\/.+?)\/orig$/, '$1/448x292')), a;
        }), s('stream-thumbnail__sizes', function(e) {
            var t = e.autoretina,
                i = Math.round('undefined' != typeof window && window.devicePixelRatio) || 1,
                a = {
                    'extra-small': ['156x88', '312x176'],
                    'small-16x9': ['200x112', '400x225'],
                    small: ['200x150', '400x300'],
                    medium: ['400x300', '936x524'],
                    large: ['936x524', '1920x1080']
                },
                s = e.size && a[e.size] ? e.size : 'small';
            return ((i -= 1) > 1 || !t) && (i = 1), {
                ratio: i,
                byRatios: a[s]
            };
        }), s('stream-thumbnail', function(e, t, i) {
            if (e.thumbnail) {
                var a = ['background-image:url(' + i('stream-thumbnail__src', e) + ')'];
                if (e.passSizeInAttr) {
                    var s = i('stream-thumbnail__sizes', e).byRatios[0].split('x');
                    a.push('width:' + s[0] + 'px', 'height:' + s[1] + 'px');
                }
                return a.join(';');
            }
        }), s('tv__item', function(e, t, i) {
            if (e.separator) return i('tv__separator', e);
            var a, s = 'film' === e.type,
                n = e.stream && e.stream.content_id,
                o = e.channel,
                r = e.channelId,
                l = e.staticHost + '/s3/home/stream/channel-thumbs/',
                c = '',
                _ = '',
                d = '',
                m = n ? i('stream-url', {
                    streamId: n,
                    from: 'morda_touch',
                    fromBlock: 'tv'
                }) : e.href;
            return n ? (a = ' tv__item_img_yes', e.image_base ? c = e.image_base + '/small' : (c = l + r + '-back.jpg', _ = l + r + '-front.png'), d = i('tv__item-layout-exp', {
                bg: c,
                thumbnail: _ ? i('div', {
                    mix: 'tv__thumbnail',
                    attrs: {
                        style: 'background-image:url(' + _ + ')'
                    }
                }) : '',
                text: e.full,
                time: e.time,
                channel: o ? ', ' + o : ''
            })) : (a = s ? ' tv__item_film_yes' : '', d = i('tv__item-layout', {
                time: e.time ? i('span', {
                    mod: 'tv__item-time',
                    content: e.time
                }) : '',
                text: e.full,
                filmIcon: s ? i('span', {
                    mod: 'tv__item-film'
                }) : '',
                channel: o ? i('span', {
                    mod: 'tv__item-channel',
                    content: o
                }) : '',
                iconClass: 'listview__arrow'
            })), i('home-link', {
                href: m,
                stat: n ? t.stat.getClientCounter(e.counter, !0) : e.stat,
                mix: 'tv__item listview__item swiper__item' + a,
                attrs: n ? {
                    target: '_blank'
                } : null,
                content: d
            });
        }), s('tv__separator', function(e, t, i) {
            return '<div class="tv__separator"></div>';
        }), s('tv__item-layout-exp', function(e, t, i) {
            var a;
            return '<div class="tv__item-inner tv__item-inner_has_img listview__item-inner"><div class="tv__preview" style="background-image:url(' + (e.bg !== a ? e.bg : '') + ')">' + (e.thumbnail !== a ? e.thumbnail : '') + '<div class="tv__preview-play"></div></div><div class="tv__item-contents"><span class="tv__name i-multiline-overflow">' + (e.text !== a ? e.text : '') + '</span><span class="tv__info">' + (e.time !== a ? e.time : '') + (e.channel !== a ? e.channel : '') + '</span></div></div>';
        }), s('tv__item-layout', function(e, t, i) {
            var a;
            return '<div class="tv__item-inner listview__item-inner"><div class="tv__item-contents">' + (e.time !== a ? e.time : '') + '<span class="tv__item-name"><span class="tv__item-title"><span class="tv__item-text">' + (e.text !== a ? e.text : '') + '</span>' + (e.filmIcon !== a ? e.filmIcon : '') + '</span>' + (e.channel !== a ? e.channel : '') + '</span></div></div><div class="' + (e.iconClass !== a ? e.iconClass : '') + '"></div>';
        }), s('afisha__events', function(e, t, i) {
            var a = e.film;
            return e.events.map(function(e) {
                return i('home-link', {
                    mix: 'afisha__event' + (e.href ? ' afisha__ticket' : ''),
                    href: e.href || a.href,
                    content: e.time,
                    attrs: {
                        'data-statlog': e.counter,
                        target: e.href ? '_blank' : undefined
                    }
                });
            }).join('');
        }), s('afisha__cinema-wrapper', function(e, t, i) {
            return i('home-link', {
                mix: 'afisha__category' + (e.selected ? ' afisha__cinema_selected_yes' : ''),
                attrs: {
                    role: t.ua.tabRole ? 'tab' : undefined,
                    'aria-selected': !1,
                    'data-key': e.cinema.id,
                    'data-stat-select': e.selectCounter,
                    'data-stat-link': e.clickCounter
                },
                href: e.cinema.href,
                content: i('afisha__cinema', {
                    title: e.cinema.title,
                    fav: e.cinema.isFavorite ? '<span class="afisha__fav"></span>' : ''
                })
            });
        }), s('afisha__film-premiere', function(e, t, i) {
            var a = e.film;
            if (a.release && (a.premiere_badge = 'премьера'), a.premiere_badge) return i('afisha__film-premiere-layout', {
                text: a.premiere_badge
            });
        }), s('afisha__generate-images', function(e) {
            var t = {
                    1: '100x143_noncrop',
                    2: '200x286_noncrop',
                    3: '300x429_noncrop'
                },
                i = {},
                a = e.film;
            if (a.posters && a.posters.base)
                for (var s in t) t.hasOwnProperty(s) && (i[s] = a.posters.base + '/' + t[s]);
            return home.getBEMParams(i);
        }), s('afisha__film', function(e, t, i) {
            var a = e.film,
                s = a.events && a.events.length,
                n = e.clickCounter,
                o = {};
            return n && (o['data-statlog'] = n), i('afisha__film-layout', {
                link: i('home-link', {
                    mix: 'afisha__film-link',
                    href: a.href,
                    attrs: o,
                    content: i('afisha__film-inner', {
                        premiere: i('afisha__film-premiere', {
                            film: a
                        }),
                        imageMod: a.posters && a.posters.base ? 'imageloader__image imageloader__image_loaded_no' : 'afisha__film-image_empty_yes',
                        image: i('afisha__generate-images', {
                            film: a
                        }),
                        bg: a.posters && a.posters.base ? ' style="background-image:url(' + a.posters.base + '/100x143_noncrop)"' : '',
                        title: a.full,
                        genre: a.genre
                    })
                }),
                time: s ? i('afisha__events', {
                    events: a.events,
                    film: a
                }) : ''
            });
        }), s('afisha__schedule-loading', function(e, t, i) {
            return '<div class="loader"></div><div class="afisha__shedule-loading-text">Загрузка расписания</div>';
        }), s('afisha__no-films-button', function(e, t, i) {
            var a, s;
            return '<div>' + (e.text !== s ? e.text : t.text !== s ? t.text : (a = i('text', e)) !== s ? a : '') + '</div>' + (e.link !== s ? e.link : t.link !== s ? t.link : (a = i('link', e)) !== s ? a : '');
        }), s('afisha__no-films', function(e, t, i) {
            var a, s;
            return '<div class="afisha__no-films"><div class="afisha__no-films-centered">' + (e.content !== s ? e.content : t.content !== s ? t.content : (a = i('content', e)) !== s ? a : '') + '</div></div>';
        }), s('afisha__film-inner', function(e, t, i) {
            var a;
            return '<span class="afisha__film-static">' + (e.premiere !== a ? e.premiere : '') + '<span class="afisha__film-image ' + (e.imageMod !== a ? e.imageMod : '') + '" data-image="' + (e.image !== a ? e.image : '') + '"' + (e.bg !== a ? e.bg : '') + '></span><span class="afisha__film-info"><span class="afisha__film-title i-multiline-overflow">' + (e.title !== a ? e.title : '') + '</span><span class="afisha__film-genre">' + (e.genre !== a ? e.genre : '') + '</span></span></span>';
        }), s('afisha__film-layout', function(e, t, i) {
            var a;
            return '<div class="afisha__film imageloader__card">' + (e.link !== a ? e.link : '') + '<div class="afisha__film-dynamic' + (e.mod !== a ? e.mod : '') + '">' + (e.time !== a ? e.time : '') + '</div></div>';
        }), s('afisha__film-premiere-layout', function(e, t, i) {
            return '<span class="afisha__film-premiere-wrapper"><span class="afisha__film-premiere">' + (void 0 !== e.text ? e.text : '') + '</span></span>';
        }), s('afisha__cinema-inner', function(e, t, i) {
            var a;
            return '<span class="afisha__cinema-text">' + (e.fav !== a ? e.fav : '') + (e.title !== a ? e.title : '') + '</span>';
        }), s('afisha__cinema', function(e, t, i) {
            var a;
            return '<span class="afisha__cinema-inner">' + (void 0 !== (a = i('afisha__cinema-inner', e)) ? a : '') + '</span>';
        }), s('dist', function(e, t) {
            var i = e.dist,
                a = e.theme === undefined ? 'normal' : '';
            return i > 949 ? (i /= 1000, i += 0.000001, i = home.stringf('%s&nbsp;км', i.toFixed(1))) : (i < 100 && (i = 100), i = home.stringf('%s&nbsp;м', 100 * Math.round(i / 100))), '<span class="dist' + (e.mod ? ' ' + e.mod : '') + ('normal' === a ? ' dist_theme_normal' : '') + '">' + i + '</span>';
        }), s('tutor-card', function(e, t, i) {
            var a = e.mods || {},
                s = e.mix || '',
                n = i('tutor-card__layout', {
                    title: e.title,
                    text: e.text.replace('<br>', ' <br>'),
                    innerMix: e.innerMix || '',
                    imageMix: e.imageMix || '',
                    imageAttrs: e.imageAttrs || {}
                });
            return a.black = 'yes', i('home-link', {
                href: e.href,
                stat: e.stat || '',
                mods: a,
                mix: 'tutor-card ' + s,
                content: n
            });
        }), s('tutor-card__layout', function(e, t, i) {
            var a;
            return '<span class="tutor-card__inner ' + (e.innerMix !== a ? e.innerMix : '') + '"><span class="tutor-card__image-wrapper"><span class="tutor-card__image ' + (e.imageMix !== a ? e.imageMix : '') + '" ' + home.parseRules.bem(e, t, 'imageAttrs.attrs') + '></span></span><span class="tutor-card__content"><span class="tutor-card__title i-multiline-overflow">' + (e.title !== a ? e.title : '') + '</span><span class="tutor-card__text i-multiline-overflow">' + (e.text !== a ? e.text : '') + '</span></span></span>';
        }), s('mix-tabber__panel', function(e, t, i) {
            var a;
            return '<div class="' + (e.block !== a ? e.block : '') + '__panel' + (e.mix !== a ? e.mix : '') + '" role="tabpanel" id="' + (e.id !== a ? e.id : '') + '_panel_' + (e.key !== a ? e.key : '') + '" data-key="' + (e.key !== a ? e.key : '') + '"' + home.parseRules.bem(e, t, 'attrs') + '>' + (e.content !== a ? e.content : '') + '</div>';
        }), s('mix-tabber__tab', function(e, t, i) {
            var a = e.attrs || {},
                s = e.mods || {},
                n = e.mix || '';
            return a.role = 'tab', i('home-link', {
                mix: n += ' ' + home.getBEMClassname('mix-tabber__tab', {
                    mods: s
                }),
                attrs: e.attrs,
                href: e.href,
                stat: e.stat,
                content: e.content
            });
        }), s('etrains__item', function(e, t, i) {
            var a, s;
            return '<a class="etrains__item listview__item swiper__item" href="' + (e.href !== s ? e.href : t.href !== s ? t.href : (a = i('href', e)) !== s ? a : '') + '"' + (e.stat !== s ? e.stat : '') + '><div class="listview__item-inner etrains__item-inner"><div class="etrains__item-contents"><span class="etrains__item-time">' + (e.time !== s ? e.time : t.time !== s ? t.time : (a = i('time', e)) !== s ? a : '') + '</span><span class="etrains__item-text"> ' + (e.text !== s ? e.text : t.text !== s ? t.text : (a = i('text', e)) !== s ? a : '') + ' </span><span class="etrains__item-express">' + (e.express !== s ? e.express : t.express !== s ? t.express : (a = i('express', e)) !== s ? a : '') + '</span></div></div><div class="listview__arrow"></div></a>';
        }), s('schedule__station-items', function(e, t, i) {
            return e.tabs.map(function(e) {
                return i('schedule__station-items-block', {
                    list: e.list.join('')
                });
            }).join('');
        }), s('schedule__station-item-complex', function(e, t, i) {
            var a, s;
            return '<a class="schedule__station-item listview__item" href="' + (e.href !== s ? e.href : t.href !== s ? t.href : (a = i('href', e)) !== s ? a : '') + '"' + (e.stat !== s ? e.stat : t.stat !== s ? t.stat : (a = i('stat', e)) !== s ? a : '') + '><div class="schedule__station-item-inner listview__item-inner"><div>' + (e.text !== s ? e.text : t.text !== s ? t.text : (a = i('text', e)) !== s ? a : '') + '</div><div class="schedule__station-info">' + (e.info !== s ? e.info : t.info !== s ? t.info : (a = i('info', e)) !== s ? a : '') + '</div></div><div class="listview__arrow"></div></a>';
        }), s('schedule__station-item-subinfo', function(e, t, i) {
            var a, s;
            return '<a class="schedule__station-item listview__item" href="' + (e.href !== s ? e.href : t.href !== s ? t.href : (a = i('href', e)) !== s ? a : '') + '" data-href="' + (e.href !== s ? e.href : t.href !== s ? t.href : (a = i('href', e)) !== s ? a : '') + '"' + (e.stat !== s ? e.stat : t.stat !== s ? t.stat : (a = i('stat', e)) !== s ? a : '') + (e.attrs !== s ? e.attrs : t.attrs !== s ? t.attrs : (a = i('attrs', e)) !== s ? a : '') + '><div class="schedule__station-item-inner listview__item-inner">' + (e.text !== s ? e.text : t.text !== s ? t.text : (a = i('text', e)) !== s ? a : '') + '<span class="schedule__station-item-subinfo">' + (e.info !== s ? e.info : t.info !== s ? t.info : (a = i('info', e)) !== s ? a : '') + '</span></div><div class="listview__arrow"></div></a>';
        }), s('schedule__station-items-block', function(e, t, i) {
            var a, s;
            return '<div class="schedule__station-items">' + (e.list !== s ? e.list : t.list !== s ? t.list : (a = i('list', e)) !== s ? a : '') + '</div>';
        }), s('mix-tabber-loader__retry-button', function(e, t, i) {
            return i('button', {
                mods: e.buttonMods,
                mix: 'mix-tabber-loader__retry-button ' + e.block + '__retry-button',
                content: 'Попробовать ещё раз',
                attrs: {
                    'data-statlog': e.statRoot + '.retry',
                    'data-key': e.key
                }
            });
        }), s('mix-tabber-loader__retry', function(e, t, i) {
            var a, s;
            return '<div class="mix-tabber-loader__retry ' + (e.block !== s ? e.block : '') + '__retry">Не удалось загрузить данные' + ((a = i('mix-tabber-loader__retry-button', e)) !== s ? a : '') + '</div>';
        }), s('edadeal__items', function(e, t, i) {
            var a = 'all' === e.key ? 'retailers' : e.key;
            return e[a].map(function(a, s) {
                var n = 'edadeal.' + e.key + '.item.' + s,
                    o = !1;
                return 'all' === e.key ? e.show_discounts && a.rnd_discount && (o = !0) : a.rnd_discount && (o = !0), i('edadeal__item', {
                    href: 'all' === e.key ? a.retailerURL : a.shareURL,
                    title: a.retailer,
                    img: a.logo['200x200'],
                    dist: 'all' !== e.key ? home.view('dist', {
                        dist: a.distance,
                        mod: ' edadeal__dist'
                    }) : '',
                    stat: t.stat.getAttr(n),
                    discount: o ? i('edadeal__discount', {
                        text: a.rnd_discount.category,
                        num: a.rnd_discount.discount
                    }) : i('edadeal__discount-empty', {})
                });
            }).join('') + e.showAll;
        }), s('edadeal__discount-empty', function(e, t, i) {
            return '<div class="edadeal__discount-empty"></div>';
        }), s('edadeal__discount', function(e, t, i) {
            var a, s;
            return '<div class="edadeal__discount"><div class="edadeal__discount-text"><div class="edadeal__discount-text-inner i-multiline-overflow">' + (e.text !== s ? e.text : t.text !== s ? t.text : (a = i('text', e)) !== s ? a : '') + '</div></div><div class="edadeal__discount-percent"><div class="edadeal__percent"><div class="edadeal__percent-to">до</div><span class="edadeal__percent-num">' + (e.num !== s ? e.num : t.num !== s ? t.num : (a = i('num', e)) !== s ? a : '') + '</span><span class="edadeal__percent-sign">%</span></div></div></div>';
        }), s('edadeal__all', function(e, t, i) {
            var a, s;
            return '<a class="edadeal__item imageloader__card edadeal__item-all" href="' + (e.href !== s ? e.href : t.href !== s ? t.href : (a = i('href', e)) !== s ? a : '') + '"' + (e.stat !== s ? e.stat : '') + '><div class="edadeal__item-img imageloader__image imageloader__image_loaded_no" style="background-image:url(' + (e.img !== s ? e.img : t.img !== s ? t.img : (a = i('img', e)) !== s ? a : '') + ')" title="Edadeal"></div><div class="edadeal__item-all__inner">Показать все предложения</div></a>';
        }), s('edadeal__item', function(e, t, i) {
            var a, s;
            return '<a class="edadeal__item imageloader__card" href="' + (e.href !== s ? e.href : t.href !== s ? t.href : (a = i('href', e)) !== s ? a : '') + '"' + (e.stat !== s ? e.stat : '') + '><div class="edadeal__item-img imageloader__image imageloader__image_loaded_no" style="background-image:url(' + (e.img !== s ? e.img : t.img !== s ? t.img : (a = i('img', e)) !== s ? a : '') + ')" title="' + (e.title !== s ? e.title : t.title !== s ? t.title : (a = i('title', e)) !== s ? a : '') + '"></div>' + (e.dist !== s ? e.dist : t.dist !== s ? t.dist : (a = i('dist', e)) !== s ? a : '') + (e.discount !== s ? e.discount : t.discount !== s ? t.discount : (a = i('discount', e)) !== s ? a : '') + '</a>';
        }), s('edadeal__panel-contents', function(e, t, i) {
            return '<div class="scroller__hider"><div class="edadeal__items-scroller scroller imageloader imageloader_theme_light imageloader__scroller edadeal__scroller i-bem" data-bem="{&quot;scroller&quot;:{}}"><div class="edadeal__items">' + (void 0 !== e.items ? e.items : '') + '</div></div></div>';
        }), s('edadeal__geo', function(e, t, i) {
            var a, s;
            return '<div class="edadeal__geo"><div class="edadeal__geo-text"><div class="edadeal__geo-status">' + (e.status !== s ? e.status : t.status !== s ? t.status : (a = i('status', e)) !== s ? a : '') + '</div></div></div>';
        }), s('district__posts', function(e, t, i) {
            var a, s, n = e.posts,
                o = e.tab,
                r = e.feedLinks,
                l = e.utm || '',
                c = e.coloredAvatars;
            return a = n.map(function(e, a) {
                var s, n = 'district.' + o + '.item.' + a,
                    r = e.district_name,
                    _ = e.user.display_name || e.user.first_name || e.user.login || '',
                    d = '',
                    m = e.comments_cnt > 0;
                return s = r ? 5 : 6, e.images_count && (s -= 1, d = i('district__post-images-count', {
                    content: e.images_count + '&nbsp;' + home.decline(e.images_count, ['фото', 'фото', 'фото'])
                })), i('home-link', {
                    href: e.url + l,
                    mix: 'district__post' + (m ? '' : ' district__post_comments_no'),
                    mods: {
                        black: 'yes'
                    },
                    stat: t.stat.getAttr(n, null, {
                        customParams: {
                            id: e.id
                        }
                    }),
                    content: i('district__post', {
                        text: home.htmlFilter(e.text),
                        linesCount: s,
                        imagesCount: d,
                        region: home.htmlFilter(r),
                        login: home.htmlFilter(home.cleverString.cutEndOfString(_, 25)),
                        userIcon: i('avatar', {
                            mix: 'district__post-avatar',
                            avatarUrl: e.user && e.user.avatar_url,
                            mods: {
                                size: 's'
                            },
                            colored: c
                        }),
                        comments_cnt: m ? e.comments_cnt : ''
                    })
                });
            }, this), s = i('enrich-list-with-promo', {
                list: a,
                promo: i('login-promo-card', {
                    place: 'district_touch',
                    block: 'district',
                    mix: 'district__post',
                    serverLog: 1
                })
            }), s += i('home-link', {
                href: r.more,
                mix: 'district__post district__more',
                stat: t.stat.getAttr('district.more'),
                content: i('district__more', {})
            });
        }), s('district__category', function(e, t, i) {
            var a;
            return '<a class="district__category' + (e.mod !== a ? e.mod : '') + '" href="' + (e.href !== a ? e.href : '') + '" aria-selected="' + (e.selected !== a ? e.selected : '') + '" data-stat-select="' + (e.selectCounter !== a ? e.selectCounter : '') + '" data-stat-link="' + (e.clickCounter !== a ? e.clickCounter : '') + '">' + (e.text !== a ? e.text : '') + '</a>';
        }), s('district__post-images-count', function(e, t, i) {
            return '<div class="district__post-images-count">' + (void 0 !== e.content ? e.content : '') + '</div>';
        }), s('district__post', function(e, t, i) {
            var a;
            return '<div class="district__post-region">' + (e.region !== a ? e.region : '') + '</div><div class="district__post-text i-multiline-overflow" data-lines="' + (e.linesCount !== a ? e.linesCount : '') + '">' + (e.text !== a ? e.text : '') + '</div>' + (e.imagesCount !== a ? e.imagesCount : '') + '<div class="district__post-footer"><div class="district__post-comments">' + (e.comments_cnt !== a ? e.comments_cnt : '') + '</div><div class="district__post-user">' + (e.userIcon !== a ? e.userIcon : '') + '<span class="district__post-username">' + (e.login !== a ? e.login : '') + '</span></div></div>';
        }), s('district__more', function(e, t, i) {
            return '<div class="district__more-centered"><div class="district__more-icon"></div><div class="district__more-text">Больше постов</div></div>';
        }), s('district2__locate', function(e, t, i) {
            return i('geobutton', {
                mods: {
                    theme: 'white',
                    size: 'l'
                },
                mix: 'district2__locate-icon'
            });
        }), s('district2__posts', function(e, t, i) {
            var a = e.tab,
                s = e.utm,
                n = e.moreUrl,
                o = e.coloredAvatars;
            return e.posts.map(function(n, r) {
                var l = n.user.display_name || n.user.first_name || n.user.login || '',
                    c = n.hits_cnt || n.comments_cnt || n.likes_cnt || n.dislikes_cnt,
                    _ = !n.comments_cnt && !n.likes_cnt && !n.dislikes_cnt,
                    d = n.hits_cnt;
                return d >= 10000 ? d = '%nK'.replace('%n', Math.floor(d / 1000)) : d && _ && (d = d + ' ' + home.decline(d, ['Просмотр', 'Просмотра', 'Просмотров']).toLowerCase()), i('home-link', {
                    href: n.url + s,
                    mix: 'district2__post imageloader__card' + (c ? '' : ' district2__post_meta_no'),
                    mods: {
                        black: 'yes'
                    },
                    stat: t.stat.getAttr('district.' + a + '.item.' + r, null, {
                        customParams: {
                            id: n.id,
                            rtxreqid: n.rtxreqid
                        }
                    }),
                    content: i('district2__post-layout', {
                        avatar: i('avatar', {
                            mix: 'district2__post-avatar',
                            imageMix: 'imageloader__image imageloader__image_loaded_no',
                            avatarUrl: n.user.avatar_url,
                            colored: o
                        }),
                        username: home.htmlFilter(l),
                        district: home.htmlFilter(n.district_name),
                        text: home.htmlFilter(n.text),
                        image: n.image && e.hasImageFlag ? i('span', {
                            mod: 'district2__post-image imageloader__image imageloader__image_loaded_no',
                            attrs: {
                                style: 'background-image: url(' + n.image + '/s136x136_crop)'
                            },
                            content: n.images_count > 1 ? i('span', {
                                mod: 'district2__post-stack'
                            }) : ''
                        }) : '',
                        'meta-left': [d ? i('district2__post-icon', {
                            id: 'views',
                            content: d
                        }) : '', n.comments_cnt ? i('district2__post-icon', {
                            id: 'comments',
                            content: n.comments_cnt
                        }) : ''].join(''),
                        'meta-right': [n.likes_cnt ? i('district2__post-icon', {
                            id: 'like',
                            content: n.likes_cnt
                        }) : '', n.dislikes_cnt ? i('district2__post-icon', {
                            id: 'dislike',
                            content: n.dislikes_cnt
                        }) : ''].join('')
                    })
                });
            }).join('') + i('home-link', {
                href: n,
                mix: 'district2__post district2__more',
                mods: {
                    black: 'yes'
                },
                stat: t.stat.getAttr('district.more'),
                content: i('district2__more', e)
            });
        }), s('district2__panel_near', function(e, t, i) {
            return '<div class="district2__overlay district2__locate geoblock2__locate" data-statlog="district.geopromo" data-guidecounter="district.geoguide" role="button">' + (void 0 !== e.locate ? e.locate : '') + '<div class="district2__overlay-text district2__locate-text geoblock2__locate-text">Показать, что пишут рядом</div></div>';
        }), s('district2__more', function(e, t, i) {
            return '<div class="district2__more-icon"></div><div class="district2__more-text">Больше постов</div>';
        }), s('district2__post-icon', function(e, t, i) {
            var a;
            return '<span class="district2__post-icon district2__post-' + (e.id !== a ? e.id : '') + '">' + (e.content !== a ? e.content : '') + '</span>';
        }), s('district2__post-layout', function(e, t, i) {
            var a;
            return '<div class="district2__post-header">' + (e.avatar !== a ? e.avatar : '') + '<span class="district2__post-username">' + (e.username !== a ? e.username : '') + '</span><span class="district2__post-district">' + (e.district !== a ? e.district : '') + '</span></div><div class="district2__post-content">' + (e.image !== a ? e.image : '') + '<span class="district2__post-text i-multiline-overflow">' + (e.text !== a ? e.text : '') + '</span></div><div class="district2__post-footer"><span class="district2__post-meta">' + (e['meta-left'] !== a ? e['meta-left'] : '') + '</span><span class="district2__post-meta">' + (e['meta-right'] !== a ? e['meta-right'] : '') + '</span></div>';
        }), s('district2__panel-contents', function(e, t, i) {
            var a;
            return '<div class="district2__panel-contents scroller__hider"><div class="district2__scroller scroller imageloader imageloader_theme_' + (e['imageloader-theme'] !== a ? e['imageloader-theme'] : '') + ' imageloader_hide-picture_yes i-bem imageloader__scroller" data-bem="{&quot;imageloader&quot;:{}}"><div class="district2__list">' + (e.items !== a ? e.items : '') + '</div></div></div>';
        }), s('geobutton', function(e, t, i) {
            return '<div class="' + home.parseRules.bem(e, t, 'geobutton.class') + '"></div>';
        }), s('places__not-found', function(e, t, i) {
            var a, s;
            return '<div class="places__not-found"><div class="places__not-found-top">Места рядом не найдены</div><a class="places__not-found-link" href="' + (e.href !== s ? e.href : t.href !== s ? t.href : (a = i('href', e)) !== s ? a : '') + '" data-href="' + (e.href !== s ? e.href : t.href !== s ? t.href : (a = i('href', e)) !== s ? a : '') + '" data-statlog="' + (e.stat !== s ? e.stat : t.stat !== s ? t.stat : (a = i('stat', e)) !== s ? a : '') + '"' + home.parseRules.bem(e, t, 'attrs') + '><div class="places__more places__not-found-more"></div>Посмотреть на картах</a></div>';
        }), s('places__more', function(e, t, i) {
            var a;
            return '<div class="places__card places__card_type_more"><a class="places__card-info" href="' + (e.href !== a ? e.href : '') + '" data-href="' + (e.href !== a ? e.href : '') + '" data-statlog="' + (e.stat !== a ? e.stat : '') + '"' + home.parseRules.bem(e, t, 'attrs') + '><div class="places__more places__card-more"></div><div class="places__more-maps-logo"></div></a></div>';
        }), s('places__card', function(e, t, i) {
            var a;
            return '<div class="places__card imageloader__card"><a class="places__card-info" href="' + (e.href !== a ? e.href : '') + '" data-href="' + (e.href !== a ? e.href : '') + '" data-statlog="' + (e.stat !== a ? e.stat : '') + '"' + home.parseRules.bem(e, t, 'attrs') + '><div class="places__card-image imageloader__image imageloader__image_loaded_no' + (e.imageMix !== a ? e.imageMix : '') + '" ' + home.parseRules.bem(e, t, 'imageAttrs.attrs') + '></div><div class="places__card-title">' + (e.title !== a ? e.title : '') + '</div><div class="places__card-address">' + (e.address !== a ? e.address : '') + '</div><div class="places__card-footer">' + (e.dist !== a ? e.dist : '') + '<div class="places__card-time">' + (e.time !== a ? e.time : '') + '</div></div></a></div>';
        }), s('metro__station-item', function(e, t, i) {
            var a, s;
            return '<a class="metro__item listview__item metro__station" href="' + (e.href !== s ? e.href : t.href !== s ? t.href : (a = i('href', e)) !== s ? a : '') + '" data-href="' + (e.href !== s ? e.href : t.href !== s ? t.href : (a = i('href', e)) !== s ? a : '') + '" data-statlog="' + (e.counter !== s ? e.counter : t.counter !== s ? t.counter : (a = i('counter', e)) !== s ? a : '') + '"' + (e.attrs !== s ? e.attrs : t.attrs !== s ? t.attrs : (a = i('attrs', e)) !== s ? a : '') + '><div class="metro__item-inner listview__item-inner"><span class="metro__circle" style="background:' + (e.color !== s ? e.color : t.color !== s ? t.color : (a = i('color', e)) !== s ? a : '') + '"></span><span class="metro__text">' + (e.text !== s ? e.text : t.text !== s ? t.text : (a = i('text', e)) !== s ? a : '') + '</span>' + (e.dist !== s ? e.dist : t.dist !== s ? t.dist : (a = i('dist', e)) !== s ? a : '') + '</div><div class="listview__arrow"></div></a>';
        }), s('eda__card_detect', function(e, t, i) {
            return i('eda__info_card', {
                mod: 'eda__card-detect',
                title: 'Уточните область доставки',
                description: 'Чтобы найти ближайшие<br/>рестораны, нам нужно<br/>знать ваше местоположение',
                buttons: i('eda__button_locate')
            });
        }), s('eda__cards-layout', function(e, t, i) {
            return '<div class="scroller__hider"><div class="imageloader__scroller collections__scroller scroller i-bem" data-bem="{&quot;scroller&quot;:' + home.parseRules.bem(e, t, 'js') + '}"><div class="eda__cards-list">' + (void 0 !== e.cards ? e.cards : '') + '</div></div></div>';
        }), s('eda__show-all', function(e, t, i) {
            return '<div class="eda__item eda__show-more"><a class="eda__item-link " href="' + (void 0 !== e.link ? e.link : '') + '" target="_blank" rel="noopener"><span class="eda__show-all-icon"></span><div class="eda__show-all-capture">Все рестораны</div></a></div>';
        }), s('eda__card_empty', function(e, t, i) {
            return '<div class="eda__item"><div class="eda__item-img-wrapper"></div><div class="eda__item-description eda__item-description_empty"></div></div>';
        }), s('eda__delivery-time', function(e, t, i) {
            return '<div class="eda__item-delivery-time">' + (void 0 !== e.deliveryTime ? e.deliveryTime : '') + '</div>';
        }), s('eda__card', function(e, t, i) {
            var a;
            return '<div class="eda__item"><a class="eda__item-link " href="' + (e.link !== a ? e.link : '') + '" target="_blank" rel="noopener" data-statlog="' + (e.stat !== a ? e.stat : '') + '"><div class="eda__item-img-wrapper"><div class="eda__item-img" style="background-image:url(' + (e.img !== a ? e.img : '') + ')"></div></div><div class="eda__item-description"><span class="eda__item-title">' + (e.title !== a ? e.title : '') + '</span>' + (e.deliveryTime !== a ? e.deliveryTime : '') + (e.rating !== a ? e.rating : '') + '</div></a></div>';
        }), s('eda__layout', function(e, t, i) {
            var a;
            return '<div class="eda i-bem block" data-bem="' + home.parseRules.bem(e, t, 'js') + '" data-blockname="eda"><div class="block__title"><a href="' + (e.link !== a ? e.link : '') + '" class="block__title-text">' + (e.title !== a ? e.title : '') + '</a></div><div class="block__content">' + (e.content !== a ? e.content : '') + (e.categories !== a ? e.categories : '') + '</div></div>';
        }), s('rating', function(e, t, i) {
            for (var a = e.maxValue || DEFAULT_MARKS_COUNT, s = i('rating__layout-mark', {}), n = i('rating__layout-mark', {
                    mod: 'rating__mark_active'
                }), o = '', r = '', l = 0; l < a; l++) o += s, r += n;
            return e.value ? i('rating__layout', {
                mod: e.mod,
                marks: o,
                active_marks: r,
                value: Math.min(100, 100 * (e.value || 0) / a)
            }) : i('rating__layout-empty', e);
        }), s('rating__layout-empty', function(e, t, i) {
            return '<div class="rating ' + (void 0 !== e.mod ? e.mod : '') + '"><div class="rating__marks rating__marks_empty"><div class="rating__mark"></div><div class="rating__mark_empty-legend">Мало оценок</div></div></div>';
        }), s('rating__layout-mark', function(e, t, i) {
            return '<div class="rating__mark ' + (void 0 !== e.mod ? e.mod : '') + '"></div>';
        }), s('rating__layout', function(e, t, i) {
            var a;
            return '<div class="rating ' + (e.mod !== a ? e.mod : '') + '"><div class="rating__marks">' + (e.marks !== a ? e.marks : '') + '</div><div class="rating__marks-overlay" style="width: ' + (e.value !== a ? e.value : '') + '%;"><div class="rating__marks">' + (e.active_marks !== a ? e.active_marks : '') + '</div></div></div>';
        }), s('collections__item-new', function(e, t, i) {
            var a = '',
                s = e.badge && i('span', {
                    mod: 'collections__item-new-badge',
                    content: e.badge
                }) || '';
            if (e.title) {
                var n = home.color(e.titleBg || '#302A2C'),
                    o = n.hsl.l;
                if (o > 0.7) {
                    var r = 100 - 0.7 / o * 100;
                    n = n.lighter(-r);
                }
                var l = n.toString(),
                    c = n.setOpacity(0.7).toString();
                a = i('span', {
                    mod: 'collections__item-new-title i-multiline-overflow',
                    attrs: {
                        style: 'background:' + l + ';background:-webkit-linear-gradient(' + c + ',' + l + ' 34px);background:linear-gradient(' + c + ',' + l + ' 34px);'
                    },
                    content: i('span', {
                        mod: 'collections__item-new-title-text',
                        content: e.title
                    })
                });
            }
            var _ = e.favorite && i('span', {
                mod: 'collections__item-new-favorite'
            }) || '';
            return i('collections__item-new-layout', {
                stat: e.stat,
                href: e.href,
                imageAttrs: e.imageAttrs,
                content: s + a + _
            });
        }), s('collections__image-type', function(e) {
            var t = [{
                name: 'vertical',
                size: '280x404'
            }, {
                name: 'square',
                size: '404x404'
            }, {
                name: 'horizontal',
                size: '300x192'
            }];
            e.exclude && (t = t.reduce(function(t, i) {
                return i.name !== e.exclude && t.push(i), t;
            }, []));
            var i = Math.round(Math.random() * (t.length - 1));
            return e.prev && t[i].name === e.prev.name && (i = i < t.length - 1 ? i + 1 : i - 1), t[i];
        }), s('collections__feed', function(e, t, i) {
            var a, s = null;
            return e.isNewLayout ? e.list.map(function(e, a) {
                var s = e.images['296x296'],
                    n = {
                        1: s,
                        2: e.images['404x404']
                    };
                return i('collections__item-new', {
                    href: e.link,
                    stat: t.stat.getClientCounter('collections.feed.' + a + '(id=' + e.channel_id + ')'),
                    imageAttrs: {
                        'data-image': home.getBEMParams(n),
                        style: 'background-image:url(' + s + ')'
                    },
                    title: e.title,
                    titleBg: e.color_wiz.back
                });
            }).join('') : e.list.map(function(n, o) {
                var r, l, c, _ = o === e.list.length - 1;
                return r = s ? a : i('collections__image-type', {
                    prev: a,
                    exclude: _ && !s ? 'horizontal' : ''
                }), a = r, l = i('collections__feed-item', {
                    mod: ' collections__feed-item_type_' + r.name,
                    stat: t.stat.getClientCounter('collections.feed.' + o + '(id=' + n.channel_id + ')'),
                    img: n.images[r.size],
                    href: n.link
                }), 'horizontal' !== r.name || s ? (c = i('collections__column', {
                    items: (s || '') + l
                }), s = null) : (c = '', s = l), c;
            }).join('');
        }), s('collections__column', function(e, t, i) {
            var a, s;
            return '<div class="collections__column imageloader__column">' + (e.items !== s ? e.items : t.items !== s ? t.items : (a = i('items', e)) !== s ? a : '') + '</div>';
        }), s('collections__feed-item', function(e, t, i) {
            var a, s;
            return '<a class="collections__feed-item imageloader__card' + (e.mod !== s ? e.mod : t.mod !== s ? t.mod : (a = i('mod', e)) !== s ? a : '') + '" href="' + (e.href !== s ? e.href : t.href !== s ? t.href : (a = i('href', e)) !== s ? a : '') + '"' + (e.stat !== s ? e.stat : '') + '><div class="collections__feed-img imageloader__image imageloader__image_loaded_no" style="background-image:url(' + (e.img !== s ? e.img : t.img !== s ? t.img : (a = i('img', e)) !== s ? a : '') + ')"></div></a>';
        }), s('collections__page', function(e, t, i) {
            var a, s;
            return '<div class="scroller__hider"><div class="imageloader i-bem' + (e.mod !== s ? e.mod : t.mod !== s ? t.mod : (a = i('mod', e)) !== s ? a : '') + '" data-bem="{&quot;imageloader&quot;:{}}"><div class="imageloader__scroller scroller i-bem" data-bem="{&quot;scroller&quot;:{}}"><div class="collections__page">' + (e.content !== s ? e.content : t.content !== s ? t.content : (a = i('content', e)) !== s ? a : '') + '</div></div></div></div>';
        }), s('collections__item-new-layout', function(e, t, i) {
            var a;
            return '<a class="collections__item-new imageloader__card" href="' + (e.href !== a ? e.href : '') + '"' + (e.stat !== a ? e.stat : '') + '><span class="collections__item-new-inner"><span class="collections__item-new-images"><span class="collections__item-new-image imageloader__image imageloader__image_loaded_no" ' + home.parseRules.bem(e, t, 'imageAttrs.attrs') + '></span></span>' + (e.content !== a ? e.content : '') + '</span></a>';
        }), s('promo-pusher-button__text', function(e) {
            if (e.text) return '<div class="promo-pusher-button__text">' + e.text + '</div>';
        }), s('promo-pusher-button', function(e, t, i) {
            var a;
            return '<div class="' + home.parseRules.bem(e, t, 'promo-pusher-button.class') + ' i-bem" data-bem="' + home.parseRules.bem(e, t, 'js') + '" title="Подписаться"><svg class="promo-pusher-button__icon" width="100%" height="100%" viewBox="0 0 18 18"><g fill="none"><path class="promo-pusher-button__base" d="M2.5 14h13v-.382l-2-1V12l.002-3.938c-.152-2.44-1.12-4.02-3.262-4.596l-.74-.2V2h-1v1.267l-.74.199C5.669 4.028 4.658 5.66 4.5 8v4.618l-2 1V14z" stroke="#FFF" stroke-width="2"/><path class="promo-pusher-button__base" d="M9 17c.986 0 1.5-.514 1.5-1.5V15h-3v.5c0 .986.514 1.5 1.5 1.5z" fill="#FFF"/><path class="promo-pusher-button__path" d="M2.5 14h13v-.382l-2-1V12l.002-3.938c-.152-2.44-1.12-4.02-3.262-4.596l-.74-.2V2h-1v1.267l-.74.199C5.669 4.028 4.658 5.66 4.5 8v4.618l-2 1V14z" stroke="#FFF" stroke-width="2"/></g></svg><div class="promo-pusher-button__icon-active"></div>' + (void 0 !== (a = i('promo-pusher-button__text', e)) ? a : '') + '</div>';
        }), s('stream-inserts__content', function(e, t, i) {
            return e.items ? e.items.map(function(a, s) {
                var n = {
                    href: i('stream-url', {
                        streamId: a.content_id,
                        from: 'morda_touch',
                        fromBlock: e.blockName
                    }),
                    target: '_blank',
                    rel: 'noopener',
                    role: 'button',
                    tabindex: 0
                };
                return 'horizontal' === e.type ? i('home-link', {
                    href: i('stream-url', {
                        streamId: a.content_id,
                        from: 'morda_touch',
                        fromBlock: 'stream-inserts'
                    }),
                    attrs: {
                        target: '_blank',
                        role: 'button',
                        tabindex: 0
                    },
                    mods: {
                        hover: 'inherit'
                    },
                    target: '_blank',
                    mix: 'stream-inserts__horizontal-card stream-inserts__item',
                    content: i('stream-inserts__horizontal-card', {
                        tag: 'a',
                        mix: 'stream-inserts__item imageloader__card',
                        thumbMix: 'imageloader__image imageloader__image_loaded_no',
                        item: a,
                        allowVideoPreview: e.allowVideoPreview
                    })
                }) : i('stream-inserts__item', {
                    mix: 'imageloader__card',
                    rating: e.noRating ? '' : i('kinopoisk-rating', {
                        rating: a.rating_kp,
                        mix: 'stream-inserts__item-rating'
                    }),
                    restrictionAge: a.restriction_age >= 18 ? i('restriction-age', {
                        restrictionAge: a.restriction_age,
                        mods: {
                            type: 'poster'
                        }
                    }) : '',
                    posterMix: 'imageloader__image imageloader__image_loaded_no',
                    posterBg: {
                        style: i('stream-thumbnail', {
                            thumbnail: a.onto_poster
                        })
                    },
                    title: a.title,
                    attrs: n,
                    stat: t.stat.getAttr(e.statRoot + '.item.' + s)
                });
            }).join('') : '';
        }), s('stream-inserts__content-layout', function(e, t, i) {
            var a;
            return '<div class="scroller__hider"><div class="scroller i-bem imageloader__scroller" data-bem="{&quot;scroller&quot;:{}}"><div class="stream-inserts__items ' + (e.mix !== a ? e.mix : '') + '">' + (e.items !== a ? e.items : '') + '</div></div></div>';
        }), s('stream-inserts__item', function(e, t, i) {
            var a;
            return '<a class="' + home.parseRules.bem(e, t, 'stream-inserts__item.class') + ' ' + (e.mix !== a ? e.mix : '') + '" ' + (e.stat !== a ? e.stat : '') + ' ' + home.parseRules.bem(e, t, 'attrs') + '><div class="stream-inserts__item-poster ' + (e.posterMix !== a ? e.posterMix : '') + '" ' + home.parseRules.bem(e, t, 'posterBg.attrs') + '>' + (e.rating !== a ? e.rating : '') + ' ' + (e.restrictionAge !== a ? e.restrictionAge : '') + '</div><div class="stream-inserts__item-title i-multiline-overflow">' + (e.title !== a ? e.title : '') + '</div></a>';
        }), s('kinopoisk-rating__color', function(e) {
            var t = e.rating;
            return t >= 8 ? '#32ba43' : t >= 7 ? '#89c939' : t >= 5 ? '#91a449' : t >= 3 ? '#85855d' : '#727272';
        }), s('kinopoisk-rating', function(e, t, i) {
            var a, s, n;
            return e.rating ? (s = (a = parseFloat(e.rating)).toFixed(1).replace('.', ','), n = 'Рейтинг %s'.replace('%s', s), i('kinopoisk-rating__tmpl', {
                mix: e.mix,
                text: s,
                label: n,
                color: i('kinopoisk-rating__color', {
                    rating: a
                })
            })) : '';
        }), s('kinopoisk-rating__tmpl', function(e, t, i) {
            var a;
            return '<span class="' + home.parseRules.bem(e, t, 'kinopoisk-rating.class') + '" style="background-color:' + (e.color !== a ? e.color : '') + ';" aria-hidden="true">' + (e.text !== a ? e.text : '') + '</span><span class="a11y-hidden">' + (e.label !== a ? e.label : '') + '</span>';
        }), s('stream-url', function(e, t, i) {
            (e = e || {}).streamDefault && !e.streamChannel && (e.streamChannel = 'default');
            var a, s, n = home.getData('stream.stream.clientData.settings', i('stream-settings')),
                o = n.streamPath,
                r = n.streamPaths,
                l = n.streamSharePath,
                c = n.streamRetPath,
                _ = n.homePageNoArgs || '',
                d = n.streamFrom,
                m = n.streamYellowSkin,
                u = n.streamYellowSkinParams,
                v = e.from || d,
                p = {
                    stream_active: e.streamActive,
                    stream_id: e.streamId,
                    stream_channel: e.streamChannel,
                    stream_category: e.streamCategory,
                    stream_publisher: e.streamPublisher,
                    search_text: e.streamSearchText,
                    filters: e.streamFilters,
                    from_block: e.fromBlock,
                    source: e.source,
                    from: v
                },
                f = o,
                h = home.parseUrl(_);
            e.path && 'undefined' != typeof r[e.path] && (f = r[e.path]), e.isSharing && (a = h.host, s = 'https', f = l), e.isRetPath && (a = h.host, s = 'https', f = c), e.isSportContent && (a = n.yandexSportUrl, s = 'https', f = '/efir'), (e.withHost || m) && (a = h.host, s = 'https');
            var g = home.makeUrl({
                scheme: s,
                host: a,
                path: f,
                query: p
            });
            return m ? home.yellowskin(u, g) : g;
        }), s('stream-inserts__horizontal-card', function(e, t, i) {
            var a, s = e.item || {},
                n = s.channelSettings || {},
                o = parseInt(t.Timestamp || home.now && home.now() / 1000, 10),
                r = o >= s.start_time && o <= s.end_time,
                l = s.onto_poster || n.thumbnail,
                c = '',
                _ = '',
                d = [],
                m = [],
                u = i('stream-thumbnail__src', {
                    thumbnail: s.thumbnail
                }),
                v = home.getAttributes({
                    style: 'background-color: ' + (s.main_color || '#dfdcd7')
                }),
                p = i('stream-duration', {
                    item: s
                }),
                f = e.attrs || {},
                h = e.mix || '',
                g = e.thumbMix || '',
                b = e.allowVideoPreview && s.ya_video_preview,
                y = i('stream-settings__get') || {};
            return b && !y.videoPreviewDisabled && (f['data-bem'] = home.getBEMParams({
                'thumb-preview': {
                    preview: {
                        url: s.ya_video_preview
                    }
                }
            }), h += ' thumb-preview thumb-preview_video i-bem', g += ' thumb-preview__target'), l && (c = i('stream-thumbnail__src', {
                thumbnail: l
            }), l = i('stream-inserts__horizontal-card-poster', {
                mods: {
                    vertical: s.onto_poster ? 'yes' : undefined
                },
                thumbMix: e.thumbMix,
                poster: home.getAttributes({
                    'data-image': c
                }),
                bgColorStyle: v,
                rating: s.rating_kp ? i('kinopoisk-rating', {
                    mix: 'stream-inserts__horizontal-card-rating',
                    rating: s.rating_kp
                }) : ''
            })), r && d.push(i('stream-inserts__horizontal-card-badge', {
                mods: {
                    live: 'yes'
                },
                badge: 'Прямой эфир'
            })), s.restriction_age >= 18 && d.push(i('restriction-age', {
                mix: 'stream-inserts__horizontal-card-badge',
                restrictionAge: s.restriction_age
            })), s.meta && s.meta.superres && (_ = i('stream-inserts__horizontal-card-dhd', {
                firstLetter: 'dHD' [0],
                text: 'dHD'.slice(1)
            })), l || !p && !_ || m.push(i('stream-inserts__horizontal-card-badge', {
                badge: (p ? home.formatDuration(p) : '') + (p && _ ? '&nbsp;' : '') + _
            })), a = n.title || i('stream-meta', {
                release_year: s.release_year,
                genres: s.genres
            }), i('stream-inserts__horizontal-card-layout', {
                mix: h,
                attrs: f,
                thumb: home.getAttributes({
                    'data-image': u
                }),
                mods: {
                    poster: l ? 'yes' : undefined,
                    subtitle: a ? 'yes' : 'no',
                    'play-preview': b ? 'yes' : 'no'
                },
                thumbMix: g,
                poster: l || '',
                bgColorStyle: v,
                badgesTop: d.join(''),
                badgesBottom: m.join(''),
                title: s.title,
                titleMix: a ? '' : ' i-multiline-overflow',
                subtitle: a ? i('stream-inserts__horizontal-card-subtitle', {
                    text: a
                }) : ''
            });
        }), s('stream-inserts__horizontal-card-dhd', function(e, t, i) {
            var a;
            return '<span class="stream-inserts__horizontal-card-dhd"><span class="stream-inserts__horizontal-card-light">' + (e.firstLetter !== a ? e.firstLetter : '') + '</span>' + (e.text !== a ? e.text : '') + '</span>';
        }), s('stream-inserts__horizontal-card-badge', function(e, t, i) {
            return '<div class="' + home.parseRules.bem(e, t, 'stream-inserts__horizontal-card-badge.class') + '">' + (void 0 !== e.badge ? e.badge : '') + '</div>';
        }), s('stream-inserts__horizontal-card-poster', function(e, t, i) {
            var a;
            return '<div class="' + home.parseRules.bem(e, t, 'stream-inserts__horizontal-card-poster.class') + ' ' + (e.thumbMix !== a ? e.thumbMix : '') + '" ' + (e.bgColorStyle !== a ? e.bgColorStyle : '') + ' ' + (e.poster !== a ? e.poster : '') + '>' + (e.rating !== a ? e.rating : '') + '</div>';
        }), s('stream-inserts__horizontal-card-subtitle', function(e, t, i) {
            return '<div class="stream-inserts__horizontal-card-subtitle">' + (void 0 !== e.text ? e.text : '') + '</div>';
        }), s('stream-inserts__horizontal-card-layout', function(e, t, i) {
            var a;
            return '<div class="' + home.parseRules.bem(e, t, 'stream-inserts__horizontal-card.class') + '" ' + home.parseRules.bem(e, t, 'attrs') + '><div class="stream-inserts__horizontal-card-image ' + (e.thumbMix !== a ? e.thumbMix : '') + '" ' + (e.thumb !== a ? e.thumb : '') + ' ' + (e.bgColorStyle !== a ? e.bgColorStyle : '') + '>' + (e.poster !== a ? e.poster : '') + '<div class="stream-inserts__horizontal-card-badges-top">' + (e.badgesTop !== a ? e.badgesTop : '') + '</div><div class="stream-inserts__horizontal-card-badges-bottom">' + (e.badgesBottom !== a ? e.badgesBottom : '') + '</div></div><div class="stream-inserts__horizontal-card-text"><div class="stream-inserts__horizontal-card-title' + (e.titleMix !== a ? e.titleMix : '') + '">' + (e.title !== a ? e.title : '') + '</div>' + (e.subtitle !== a ? e.subtitle : '') + '</div></div>';
        }), s('restriction-age', function(e, t, i) {
            var a = e.restrictionAge;
            return a ? (a += '+', i('restriction-age__tmpl', {
                mix: e.mix,
                text: a,
                mods: e.mods,
                label: 'Возрастной рейтинг: ' + a
            })) : '';
        }), s('restriction-age__tmpl', function(e, t, i) {
            var a;
            return '<span class="' + home.parseRules.bem(e, t, 'restriction-age.class') + '" aria-hidden="true">' + (e.text !== a ? e.text : '') + '</span><span class="a11y-hidden">' + (e.label !== a ? e.label : '') + '</span>';
        }), s('stream-meta__upperCase', function(e) {
            return e.text[0] ? e.text[0].toUpperCase() + e.text.substring(1) : (home.error.logError({
                block: 'stream-meta',
                message: 'stream-meta text is undefined',
                method: '__upperCase',
                meta: {
                    type: e.type
                }
            }), '');
        }), s('stream-meta', function(e, t, i) {
            var a = [],
                s = String(new Date().getFullYear()) === e.release_year;
            return e.release_year && (s ? a.push(i('stream-meta-badge', {
                year: e.release_year
            })) : a.push(e.release_year)), e.onto_category && a.push(i('stream-meta__upperCase', {
                text: t.l10n('stream.card.category.' + e.onto_category),
                type: 'onto_category'
            })), e.genres && e.genres.length && a.push(i('stream-meta__upperCase', {
                text: e.genres.join(', '),
                type: 'genres'
            })), a.length ? a.join(' &middot; ') : '';
        }), s('stream-duration', function(e) {
            var t = e.item || {},
                i = t.start ? t.start() : t.start_time,
                a = t.end ? t.end() : t.end_time,
                s = t.duration;
            return t.release_date_ut && (i = t.release_date_ut), i && a && !s && (s = a - i), s;
        }), s('divjson__text', function(e, t, i) {
            if (e.text) {
                return i('divjson__text-layout', {
                    mods: {
                        style: (e.style || '').replace(/_/g, '-')
                    },
                    mix: [e.mix, e.maxLines && 'divjson__text_clamped_yes i-multiline-overflow'].filter(Boolean).join(' '),
                    text: home.divjsonUtils.processText(e.text || ''),
                    attrs: {
                        style: e.maxLines ? home.makeStyle({
                            '-webkit-line-clamp': e.maxLines,
                            'max-height': ({
                                numbers_s: 1.1,
                                numbers_m: 1.15,
                                numbers_l: 1,
                                title_m: 1.1,
                                title_l: 1.2,
                                button: 1.15,
                                card_header: 1.45
                            }[e.style] || 1.25) * e.maxLines + 'em'
                        }) : undefined,
                        'data-lines': e.maxLines
                    }
                });
            }
        }), s('divjson__base', function(e, t, i) {
            return i('divjson__clickable', {
                defaultTag: 'div',
                action: e.action,
                block: e.block,
                stack: e.stack,
                attrs: {
                    style: home.makeStyle(e.style),
                    'data-bem': e.js ? home.getBEMParams(e.js) : undefined,
                    id: e.id
                },
                mix: [e.mix, home.getBEMClassname('divjson__block', {
                    mods: {
                        'padding-side': e.padding_modifier ? e.padding_modifier.position || 'left' : undefined,
                        'padding-size': e.padding_modifier && e.padding_modifier.size ? e.padding_modifier.size : undefined
                    }
                })].filter(Boolean).join(' '),
                content: e.content
            });
        }), s('divjson__clickable', function(e, t, i) {
            var a = e.action && !e.stack.some(function(t, i) {
                    return i < e.stack.length - 1 && t.hasAction;
                }) && e.action.url,
                s = a && 0 === a.indexOf('div-action://set_state?state_id='),
                n = a && !s ? a : undefined,
                o = s && a.slice('div-action://set_state?state_id='.length),
                r = n && i('new-tab-links__check'),
                l = home.deepExtend({
                    href: n,
                    'data-set-state': o || undefined,
                    tabindex: o ? '0' : undefined
                }, e.attrs || {});
            return r && (l.target = '_blank', l.rel = 'noopener'), i('divjson__clickable-layout', {
                tag: n ? 'a' : e.defaultTag || 'div',
                stat: a && e.action.log_id ? t.stat.getAttr(e.block + '.' + e.action.log_id.replace(/^([^(]+)\//g, '$1.')) : '',
                attrs: l,
                mix: [e.mix || '', s && 'divjson__state-setter'].filter(Boolean).join(' '),
                content: e.content
            });
        }), s('divjson__blocks', function(e, t, i) {
            return e.blocks.map(function(t) {
                return home.divjsonUtils.jsonWrap(i, 'divjson__block', e, {
                    json: t
                });
            }).join('');
        }), s('divjson__block', function(e, t, i) {
            var a;
            if (a = {
                    'div-title-block': 'divjson-title',
                    'div-separator-block': 'divjson-separator',
                    'div-universal-block': 'divjson-universal',
                    'div-image-block': 'divjson-image',
                    'div-table-block': 'divjson-table',
                    'div-buttons-block': 'divjson-buttons',
                    'div-footer-block': 'divjson-footer',
                    'div-traffic-block': 'divjson-traffic',
                    'div-gallery-block': 'divjson-gallery',
                    'div-tabs-block': 'divjson-tabs',
                    'div-container-block': 'divjson-container'
                }[e.json.type]) return i(a, e);
        }), s('divjson__supports-bg', function() {
            return !0;
        }), s('divjson', function(e, t, i) {
            var a = e.json,
                s = 'divjson_' + home.rnd().substr(0, 5),
                n = '';
            e.id = s, a.background && a.background.length && i('divjson__supports-bg') && (n = 'background-image:' + i('divjson-background', a.background));
            var o = i('divjson__blocks', {
                    blocks: a.states[0].blocks,
                    block: e.block
                }),
                r = a.states.map(function(e) {
                    return e.state_id;
                });
            return r.length > 1 && (o = i('div', {
                mix: 'divjson__panels',
                content: i('mix-tabber__panel', {
                    block: 'divjson',
                    id: s,
                    key: r[0],
                    content: o
                })
            })), i('divjson__layout', {
                content: o,
                attrs: {
                    style: n
                },
                js: {
                    divjson: {
                        keys: r,
                        data: Object.keys(a.states).slice(1).reduce(function(e, t) {
                            return e[r[t]] = {
                                blocks: a.states[t].blocks
                            }, e;
                        }, {}),
                        id: s,
                        selectedKey: r[0],
                        baseData: {
                            block: e.block
                        }
                    }
                }
            });
        }), s('divjson__text-layout', function(e, t, i) {
            return '<div class="' + home.parseRules.bem(e, t, 'divjson__text.class') + '"' + home.parseRules.bem(e, t, 'attrs') + '>' + (void 0 !== e.text ? e.text : '') + '</div>';
        }), s('divjson__clickable-layout', function(e, t, i) {
            var a;
            return '<' + (e.tag !== a ? e.tag : '') + ' class="' + (e.mix !== a ? e.mix : '') + '"' + home.parseRules.bem(e, t, 'attrs') + (e.stat !== a ? e.stat : '') + '>' + (e.content !== a ? e.content : '') + '</' + (e.tag !== a ? e.tag : '') + '>';
        }), s('divjson__layout', function(e, t, i) {
            return '<div class="divjson i-bem"' + home.parseRules.bem(e, t, 'attrs') + ' data-bem="' + home.parseRules.bem(e, t, 'js') + '">' + (void 0 !== e.content ? e.content : '') + '</div>';
        }), s('divjson__base', function n(e, t, i) {
            return e.stack.slice(0, e.stack.length - 1).some(function(e) {
                return 'div-container-block' !== e.type && 'div-tabs-block' !== e.type;
            }) || (e.mix = [e.mix, 'divjson__block_toplevel_yes'].filter(Boolean).join(' ')), i(n.base, e);
        }), s('divjson-background__image', function(e) {
            return 'url("' + e.image_url + '")';
        }), s('divjson-background__gradient', function(e) {
            return 'linear-gradient(to bottom,' + home.divjsonUtils.convertColor(e.start_color) + ', ' + home.divjsonUtils.convertColor(e.end_color) + ')';
        }), s('divjson-background__solid', function(e) {
            var t = home.divjsonUtils.convertColor(e.color);
            return 'linear-gradient(to bottom,' + t + ',' + t + ')';
        }), s('divjson-background', function(e, t, i) {
            return e.map(function(e) {
                var t;
                return 'div-solid-background' === e.type ? t = 'divjson-background__solid' : 'div-gradient-background' === e.type ? t = 'divjson-background__gradient' : 'div-image-background' === e.type && (t = 'divjson-background__image'), i(t, e);
            }).reverse().join(',') + ';';
        }), s('divjson-title', function(e, t, i) {
            var a = e.json;
            return i('divjson__base', {
                block: e.block,
                action: a.action,
                stack: e.stack,
                padding_modifier: a.padding_modifier,
                mix: 'divjson-title',
                content: i('div', {
                    mix: 'block__title',
                    content: i('div', {
                        mix: 'block__title-text',
                        content: i('divjson__text', {
                            text: a.text
                        })
                    })
                })
            });
        }), s('divjson-separator', function(e, t, i) {
            var a = e.json;
            return i('divjson__base', {
                block: e.block,
                action: a.action,
                stack: e.stack,
                padding_modifier: a.padding_modifier,
                mix: 'divjson-separator divjson-separator_size_' + (a.size || 'xs').replace('_', '-') + (a.has_delimiter ? ' divjson-separator_delimiter' : ''),
                style: {
                    'border-color': home.divjsonUtils.convertColor(a.delimiter_color || '#14000000'),
                    'flex-grow': 'match_parent' === a.size ? a.weight || 1 : undefined
                }
            });
        }), s('divjson-image-element', function(e, t, i) {
            var a = e.json;
            if (!a.image_url) return '';
            var s = e.stack.some(function(e) {
                    return 'div-gallery-block' === e.type;
                }),
                n = {},
                o = !!e.size;
            if (o) {
                var r = {
                    xs: 16,
                    s: 18,
                    m: 20,
                    l: 24,
                    xl: 36,
                    xxl: 40
                }[e.size || 'm'];
                n.width = home.divjsonUtils.convertPXToEM((a.ratio || 1) * r), n.height = home.divjsonUtils.convertPXToEM(r);
            } else n['padding-bottom'] = (100 / (a.ratio || 1)).toFixed(2) + '%';
            return n['background-image'] = s ? undefined : 'url("' + a.image_url + '")', i('div', {
                mix: home.getBEMClassname('divjson-image-element', {
                    mix: [e.mix, s && 'imageloader__image'].filter(Boolean).join(' '),
                    mods: {
                        subtype: 'block' === e.subtype || o ? 'centered' : undefined,
                        'full-width': o ? undefined : 'yes'
                    }
                }),
                attrs: {
                    'data-image': s ? a.image_url : undefined,
                    style: home.makeStyle(n)
                }
            });
        }), s('divjson-date-element', function(e, t, i) {
            var a = e.json;
            return i('divjson-date-element__layout', {
                day: home.htmlFilter(a.date_day),
                month: home.htmlFilter(a.date_month)
            });
        }), s('divjson-date-element__layout', function(e, t, i) {
            var a;
            return '<div class="divjson-date-element"><div class="divjson-date-element__day">' + (e.day !== a ? e.day : '') + '</div><div class="divjson-date-element__month">' + (e.month !== a ? e.month : '') + '</div></div>';
        }), s('divjson-universal', function(e, t, i) {
            var a = e.json,
                s = '',
                n = '',
                o = '';
            return a.side_element && ('div-image-element' === a.side_element.element.type ? o = home.divjsonUtils.jsonWrap(i, 'divjson-image-element', e, {
                json: a.side_element.element,
                mix: a.side_element.size ? 'divjson-universal__element-image_size_' + a.side_element.size : ''
            }) : 'date_element' === a.side_element.element.type && (o = i('divjson-date-element', {
                json: a.side_element.element
            }))), o && (o = i('div', {
                mix: home.getBEMClassname('divjson-universal__element', {
                    mods: {
                        size: a.side_element.size
                    }
                }),
                content: o
            }), 'right' === a.side_element.position ? n = o : s = o), i('divjson__base', {
                block: e.block,
                action: a.action,
                stack: e.stack,
                padding_modifier: a.padding_modifier,
                mix: home.getBEMClassname('divjson-universal', {
                    mods: {
                        title: a.title ? 'yes' : undefined,
                        text: a.text ? 'yes' : undefined
                    }
                }),
                content: i('divjson-universal__layout', {
                    left: s,
                    right: n,
                    title: i('divjson__text', {
                        mix: 'divjson-universal__title',
                        text: a.title,
                        style: a.title_style || 'title_m',
                        maxLines: a.title_max_lines
                    }),
                    text: i('divjson__text', {
                        mix: 'divjson-universal__text',
                        text: a.text,
                        style: a.text_style || 'text_s',
                        maxLines: a.text_max_lines
                    })
                })
            });
        }), s('divjson-universal__layout', function(e, t, i) {
            var a;
            return (e.left !== a ? e.left : '') + '<div class="divjson-universal__main">' + (e.title !== a ? e.title : '') + (e.text !== a ? e.text : '') + '</div>' + (e.right !== a ? e.right : '');
        }), s('divjson-container', function(e, t, i) {
            var a = e.json,
                s = {},
                n = {
                    direction: a.direction || 'vertical',
                    valign: a.alignment_vertical || 'top',
                    halign: a.alignment_horizontal || 'left',
                    style: a.frame && a.frame.style ? a.frame && a.frame.style : undefined
                };
            return a.width && ('numeric' === a.width.type ? s.width = home.divjsonUtils.convertPXToEM(a.width.value) : 'predefined' === a.width.type && 'match_parent' === a.width.value ? n.width = 'match-parent' : 'predefined' === a.width.type && 'wrap_content' === a.width.value && (n.width = 'wrap-content')), a.height && 'numeric' === a.height.type && (s.height = home.divjsonUtils.convertPXToEM(a.height.value)), a.background && a.background.length && (s['background-image'] = i('divjson-background', a.background)), a.frame && 'border' === a.frame.style && a.frame.color && (s['border-color'] = home.divjsonUtils.convertColor(a.frame.color)), i('divjson__base', {
                block: e.block,
                action: a.action,
                stack: e.stack,
                mix: home.getBEMClassname('divjson-container', {
                    mix: i('divjson-container__mix', e),
                    mods: n
                }),
                style: s,
                content: a.children.map(function(t) {
                    return home.divjsonUtils.jsonWrap(i, 'divjson__block', e, {
                        json: t
                    });
                }).join('')
            });
        }), s('divjson-container__mix', function(e) {
            var t = e.json;
            if (t.frame && t.frame.adaptive_bg) return 'divjson-container_adaptive-bg_yes';
        }), s('divjson-image', function(e, t, i) {
            var a = e.json;
            return i('div', {
                mix: 'divjson-image',
                content: home.divjsonUtils.jsonWrap(i, 'divjson-image-element', e, {
                    json: a.image,
                    subtype: 'block'
                })
            });
        }), s('divjson-table', function(e, t, i) {
            for (var a = e.json, s = 1, n = 0; n < a.rows.length; ++n)
                if ('row_element' === a.rows[n].type) {
                    s = a.rows[n].cells.length;
                    break;
                }
            for (var o = a.columns || []; o.length < s;) o.push({});
            var r = o.some(function(e) {
                    return !!e.weight;
                }),
                l = o.some(function(e) {
                    return !e.weight;
                }),
                c = a.rows.map(function(t) {
                    var a;
                    if ('row_element' === t.type) a = t.cells.map(function(a, s) {
                        var n = o[s],
                            r = '',
                            l = '';
                        a.text && (r = i('divjson__text', {
                            mix: 'divjson-table__cell-text',
                            style: a.text_style || 'text_m',
                            text: a.text
                        })), a.image && (l = i('div', {
                            mix: 'divjson-table__cell-image',
                            content: home.divjsonUtils.jsonWrap(i, 'divjson-image-element', e, {
                                json: a.image,
                                size: a.text ? 'm' : a.image_size || 'm'
                            })
                        }));
                        var c = [];
                        return r && c.push(r), l && ('right' === a.image_position ? c.push(l) : c.unshift(l)), i('divjson-table__cell', {
                            mods: {
                                left: n.left_padding || 'xs',
                                right: n.right_padding || 'xs',
                                top: t.top_padding || 'zero',
                                bottom: t.bottom_padding || 'xxs',
                                valign: a.vertical_alignment || 'center',
                                halign: a.horizontal_alignment || 'left'
                            },
                            content: c.join('')
                        });
                    }).join('');
                    else {
                        var n = o[0],
                            r = o[o.length - 1];
                        a = i('divjson-table__cell', {
                            mods: {
                                separator: 'yes',
                                left: n.left_padding || 'xs',
                                right: r.right_padding || 'xs'
                            },
                            attrs: {
                                colspan: s,
                                style: home.makeStyle({
                                    'border-color': home.divjsonUtils.convertColor(t.color || '#14000000')
                                })
                            },
                            content: i('div', {
                                mix: 'divjson-table__cell-separator'
                            })
                        });
                    }
                    return i('divjson-table__row', {
                        cells: a
                    });
                }).join(''),
                _ = o.reduce(function(e, t) {
                    return e + (t.weight || 0);
                }, 0) || o.length,
                d = i('divjson-table__colgroup', {
                    cols: o.map(function(e) {
                        return i('divjson-table__col', {
                            width: (100 * (e.weight || 0) / _).toFixed(2) + '%'
                        });
                    }).join('')
                });
            return i('divjson__base', {
                block: e.block,
                action: a.action,
                stack: e.stack,
                padding_modifier: a.padding_modifier,
                mix: 'i-bem ' + home.getBEMClassname('divjson-table', {
                    mods: {
                        'full-width': r ? 'yes' : undefined,
                        fixed: l ? undefined : 'yes'
                    }
                }),
                content: i('divjson-table__layout', {
                    colgroup: d,
                    rows: c
                }),
                js: {
                    'divjson-table': {}
                }
            });
        }), s('divjson-table__col', function(e, t, i) {
            return '<col width="' + (void 0 !== e.width ? e.width : '') + '">';
        }), s('divjson-table__colgroup', function(e, t, i) {
            return '<colgroup>' + (void 0 !== e.cols ? e.cols : '') + '</colgroup>';
        }), s('divjson-table__row', function(e, t, i) {
            return '<tr>' + (void 0 !== e.cells ? e.cells : '') + '</tr>';
        }), s('divjson-table__cell', function(e, t, i) {
            return '<td class="' + home.parseRules.bem(e, t, 'divjson-table__cell.class') + '"' + home.parseRules.bem(e, t, 'attrs') + '>' + (void 0 !== e.content ? e.content : '') + '</td>';
        }), s('divjson-table__layout', function(e, t, i) {
            var a;
            return '<div class="divjson-table__sizer"></div><table class="divjson-table__table">' + (e.colgroup !== a ? e.colgroup : '') + (e.rows !== a ? e.rows : '') + '</table>';
        }), s('divjson-buttons__button', function(e, t, i) {
            var a = e.json;
            return i('divjson__clickable', {
                defaultTag: 'button',
                action: a.action,
                block: e.block,
                stack: e.stack,
                attrs: {
                    style: home.makeStyle({
                        'background-color': home.divjsonUtils.convertColor(a.background_color || '#edf0f2')
                    })
                },
                mix: home.getBEMClassname('divjson-buttons__button', {
                    mods: {
                        text: a.text ? 'yes' : undefined,
                        image: a.image ? 'yes' : undefined
                    }
                }),
                content: (a.image ? i('div', {
                    mix: 'divjson-buttons__image',
                    content: home.divjsonUtils.jsonWrap(i, 'divjson-image-element', e, {
                        json: a.image
                    })
                }) : '') + (a.text ? i('div', {
                    mix: 'divjson-buttons__text',
                    content: home.divjsonUtils.processText(a.text)
                }) : '')
            });
        }), s('divjson-buttons', function(e, t, i) {
            var a = e.json;
            return i('divjson__base', {
                block: e.block,
                action: a.action,
                stack: e.stack,
                padding_modifier: a.padding_modifier,
                mix: home.getBEMClassname('divjson-buttons', {
                    mods: {
                        alignment: a.alignment || 'left',
                        fullwidth: a.is_fullwidth ? 'yes' : undefined
                    }
                }),
                content: a.items.map(function(t) {
                    return home.divjsonUtils.jsonWrap(i, 'divjson-buttons__button', e, {
                        json: t
                    });
                }).join('')
            });
        }), s('divjson-footer', function(e, t, i) {
            var a = e.json;
            return i('divjson__base', {
                block: e.block,
                action: a.action,
                stack: e.stack,
                padding_modifier: a.padding_modifier,
                mix: 'divjson-footer',
                content: (a.image ? i('div', {
                    mix: 'divjson-footer__image',
                    content: home.divjsonUtils.jsonWrap(i, 'divjson-image-element', e, {
                        json: a.image
                    })
                }) : '') + i('divjson__text', {
                    mix: 'divjson-footer__text',
                    text: a.text,
                    style: a.text_style || 'button'
                })
            });
        }), s('divjson-traffic', function(e, t, i) {
            var a = e.json;
            return i('divjson__base', {
                block: e.block,
                action: a.action,
                stack: e.stack,
                padding_modifier: a.padding_modifier,
                mix: home.getBEMClassname('divjson-traffic', {
                    mods: {
                        align: a.alignment || 'left'
                    }
                }),
                content: a.items.map(function(e) {
                    return i('divjson-traffic__item', {
                        scoreAttrs: {
                            style: home.makeStyle({
                                'border-color': home.divjsonUtils.convertColor(e.color || '#ffedf0f2')
                            })
                        },
                        score: e.score,
                        text: home.divjsonUtils.processText(e.text)
                    });
                }).join('')
            });
        }), s('divjson-traffic__item', function(e, t, i) {
            var a;
            return '<div class="divjson-traffic__element"><div class="divjson-traffic__element-score"' + home.parseRules.bem(e, t, 'scoreAttrs.attrs') + '>' + (e.score !== a ? e.score : '') + '</div><div class="divjson-traffic__element-text">' + (e.text !== a ? e.text : '') + '</div></div>';
        }), s('divjson-gallery__js', function() {
            return {
                imageloader: {}
            };
        }), s('divjson-gallery', function(e, t, i) {
            var a = e.json,
                s = i('divjson-gallery__default-item-padding'),
                n = a.items.map(function(t, n) {
                    var o;
                    return n === a.items.length - 1 ? a.tail && (o = s) : o = a.padding_between_items && a.padding_between_items.value || s, i('divjson-gallery__item', {
                        attrs: {
                            style: home.makeStyle({
                                'margin-right': o ? home.divjsonUtils.convertPXToEM(o) : undefined
                            })
                        },
                        content: home.divjsonUtils.jsonWrap(i, 'divjson-container', e, {
                            json: t
                        })
                    });
                }).join('');
            if (a.tail) {
                var o = '';
                o = a.tail.icon.image_url ? i('divjson-gallery__tail-image', {
                    image: a.tail.icon.image_url
                }) : i('divjson-gallery__tail-arrow', {
                    attrs: {
                        style: home.makeStyle({
                            'border-color': home.divjsonUtils.convertColor(a.tail.icon.border_color || '#f2f2f2'),
                            'background-color': home.divjsonUtils.convertColor(a.tail.icon.fill_color || '#f2f2f2')
                        })
                    },
                    svgAttrs: {
                        fill: home.divjsonUtils.convertColor(a.tail.icon.icon_color || '#808080')
                    }
                }), n += i('divjson__clickable', {
                    defaultTag: 'div',
                    block: e.block,
                    action: a.tail.action,
                    stack: e.stack,
                    mix: 'divjson-gallery__item divjson-gallery__tail imageloader__column imageloader__card',
                    content: o + i('divjson__text', {
                        mix: 'divjson-gallery__tail-text',
                        text: a.tail.text || '',
                        style: a.tail.text_style || 'text_m'
                    })
                });
            }
            return i('divjson__base', {
                block: e.block,
                action: a.action,
                stack: e.stack,
                mix: i('divjson-gallery__mix') + ' ' + home.getBEMClassname('divjson-gallery', {
                    mods: {
                        'padding-side': a.padding_modifier ? a.padding_modifier.position || 'left' : undefined,
                        'padding-size': a.padding_modifier && a.padding_modifier.size ? a.padding_modifier.size : undefined
                    }
                }),
                js: i('divjson-gallery__js', e),
                style: {
                    'padding-top': a.padding_top ? home.divjsonUtils.convertPXToEM(a.padding_top.value) : undefined,
                    'padding-bottom': a.padding_bottom ? home.divjsonUtils.convertPXToEM(a.padding_bottom.value) : undefined
                },
                content: i('divjson-gallery__content', {
                    items: n
                })
            });
        }), s('divjson-gallery__tail-arrow', function(e, t, i) {
            return '<div class="divjson-gallery__tail-icon divjson-gallery__tail-icon_arrow"' + home.parseRules.bem(e, t, 'attrs') + '><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"' + home.parseRules.bem(e, t, 'svgAttrs.attrs') + '><g fill-rule="evenodd"><path d="M4 13h12.17l-5.59 5.59L12 20l8-8-8-8-1.41 1.41L16.17 11H4z" /><path fill-opacity=".01" d="M24 24H0V0h24z" /></g></svg></div>';
        }), s('divjson-gallery__tail-image', function(e, t, i) {
            return '<div class="divjson-gallery__tail-icon divjson-gallery__tail-icon_image" style="background-image:url(&quot;' + (void 0 !== e.image ? e.image : '') + '&quot;);"></div>';
        }), s('divjson-gallery__item', function(e, t, i) {
            return '<div class="divjson-gallery__item imageloader__column imageloader__card"' + home.parseRules.bem(e, t, 'attrs') + '>' + (void 0 !== e.content ? e.content : '') + '</div>';
        }), s('divjson-gallery__mix', function() {
            return 'i-bem imageloader imageloader_different_yes';
        }), s.cached('divjson-gallery__default-item-padding', function() {
            return 12;
        }), s('divjson-gallery__content', function(e, t, i) {
            return '<div class="scroller__hider"><div class="scroller i-bem imageloader__scroller divjson-gallery__scroller"><div class="divjson-gallery__list">' + (void 0 !== e.items ? e.items : '') + '</div></div></div>';
        }), s('divjson-tabs__panel-mix', function() {
            return '';
        }), s('divjson-tabs__tabs-mix', function() {
            return 'divjson-tabs__tabs scroller';
        }), s('divjson-tabs', function(e, t, i) {
            var a = e.json,
                s = 'divjson-tabs-' + home.rnd().substr(0, 5),
                n = i('divjson-tabs__style', {
                    id: s,
                    json: a
                }) || '';
            return i('divjson__base', {
                block: e.block,
                stack: e.stack,
                mix: 'divjson-tabs i-bem ' + i('divjson-tabs__mix', e),
                id: s,
                js: {
                    'divjson-tabs': {
                        uniqId: s,
                        baseData: {
                            block: e.block,
                            stack: e.stack
                        },
                        data: Object.keys(a.items).slice(1).reduce(function(e, t) {
                            return e[t] = a.items[t].content, e;
                        }, {})
                    }
                },
                content: n + i('divjson-tabs__layout', {
                    json: a,
                    tabs: a.items.length > 1 ? i('div', {
                        mix: i('divjson-tabs__tabs-mix'),
                        content: a.items.map(function(t, a) {
                            var n = 0 === a,
                                o = t.title.action;
                            return i('mix-tabber__tab', {
                                href: o ? o.url : undefined,
                                mods: {
                                    selected: n ? 'yes' : 'no'
                                },
                                mix: home.getBEMClassname('divjson-tabs__tab', {
                                    mods: {
                                        selected: n ? 'yes' : 'no'
                                    }
                                }),
                                content: home.capitalize(t.title.text.toLowerCase()),
                                attrs: {
                                    tabindex: n ? '0' : '-1',
                                    'aria-selected': n ? 'true' : 'false',
                                    'aria-controls': n ? s + '_panel_' + a : undefined,
                                    'data-key': a,
                                    'data-stat-link': o ? e.block + '.' + o.log_id.replace(/\//g, '.') + '.link.' + a : undefined,
                                    'data-stat-select': o ? e.block + '.' + o.log_id.replace(/\//g, '.') + '.select.' + a : e.block + '.tab.select.' + a,
                                    id: s + '_tab_' + a
                                }
                            });
                        }).join('')
                    }) : '',
                    panels: i('mix-tabber__panel', {
                        block: 'divjson-tabs',
                        id: s,
                        key: '0',
                        mix: i('divjson-tabs__panel-mix'),
                        attrs: {
                            'aria-labelledby': s + '_tab_0'
                        },
                        content: home.divjsonUtils.jsonWrap(i, 'divjson-container', e, {
                            json: a.items[0].content
                        })
                    })
                })
            });
        }), s('divjson-tabs__layout', function(e, t, i) {
            var a = '',
                s = '';
            return 'bottom' === e.json.tabs_position ? s = e.tabs : a = e.tabs, i('divjson-tabs__layout-html', {
                top: a,
                bottom: s,
                panels: e.panels
            });
        }), s('divjson-tabs__style', function(e, t, i) {
            var a = e.json;
            if (!(a.inactive_tab_color || a.active_tab_color || a.active_tab_bg_color || a.inactive_tab_bg_color)) return '';
            var s = e.id,
                n = '';
            if (a.active_tab_color || a.active_tab_bg_color || a.inactive_tab_color || a.inactive_tab_bg_color) {
                var o = home.css();
                a.active_tab_color && o.decl('#' + s + ' > .divjson-tabs__tabs > .divjson-tabs__tab_selected_yes').push('color:' + home.divjsonUtils.convertColor(a.active_tab_color)), a.active_tab_bg_color && o.decl('#' + s + ' > .divjson-tabs__tabs > .divjson-tabs__tab_selected_yes').push('background-color:' + home.divjsonUtils.convertColor(a.active_tab_bg_color)), a.inactive_tab_color && o.decl('#' + s + ' > .divjson-tabs__tabs > .divjson-tabs__tab_selected_no').push('color:' + home.divjsonUtils.convertColor(a.inactive_tab_color)), a.inactive_tab_bg_color && o.decl('#' + s + ' > .divjson-tabs__tabs > .divjson-tabs__tab_selected_no').push('background-color:' + home.divjsonUtils.convertColor(a.inactive_tab_bg_color)), n += o.get();
            }
            return i('style', {
                content: n
            });
        }), s('divjson-tabs__mix', function(e) {
            return 'mix-tabber_theme_grey mix-tabber_size_narrow' + ('bottom' === e.json.tabs_position ? ' divjson-tabs_tabs-position_bottom' : '');
        }), s('divjson-tabs__layout-html', function(e, t, i) {
            var a;
            return (e.top !== a ? e.top : '') + '<div class="divjson-tabs__panels">' + (e.panels !== a ? e.panels : '') + '</div>' + (e.bottom !== a ? e.bottom : '');
        }), s('answers__reactions-value', function(e, t, i) {
            var a = 'answers__reactions-value';
            return e.active && (a += ' answers__reactions-value_active'), e.isNew && (a += ' answers__reactions-value_new'), i('span', {
                mod: a,
                content: e.count
            });
        }), s('answers__background', function() {
            var e = ['99C24D', '679436', '397367', '5DA399', '1670B7', '254E70', '6A4C93', 'BDADEA', '88A6C9', '8192B4', 'A37871', 'A3333D'];
            return '#' + e[Math.floor(Math.random() * e.length)];
        }), s.cached('answers__item-mix', function() {
            return 'answers__card imageloader__card home-link_hover_inherit ';
        }), s('answers__item', function(e, t, i) {
            var a = e.item,
                s = e.index,
                n = e.rtxreqid,
                o = a.question,
                r = a.answer,
                l = i('retina-scale__is-big'),
                c = o.cover_id ? '//avatars.mds.yandex.net/get-znatoki-cover/' + o.cover_id + '/desktop-teaser' : null,
                _ = c ? 'imageloader__image  imageloader__image_loaded_no' : '',
                d = i('avatar__href', {
                    avatar_id: r.author_avatar_id,
                    avatar_size: l ? 'islands-retina-middle' : 'islands-middle'
                }),
                m = o.url + '?utm_source=yandex&utm_medium=morda_informer_question',
                u = i('new-tab-links__check') ? '_blank' : '',
                v = r.vote,
                p = 1 === v,
                f = -1 === v,
                h = e.reactions;
            return i('home-link', {
                mix: i('answers__item-mix') + (o.title.length > 50 ? 'answers_small-title' : ''),
                href: m,
                target: u,
                stat: t.stat.getAttr('answers.link.' + s, m, {
                    precise: !0,
                    customParams: {
                        questionId: o.id,
                        answerId: r.id,
                        rtxreqid: n
                    }
                }),
                content: i('answers__card', {
                    mix: _,
                    cardId: r.id,
                    background: c ? '' : i('answers__background'),
                    questionTitle: o.title || '',
                    questionImage: c,
                    answerImage: d,
                    answerText: home.cleverString.substring(r.text || '', 0, 200),
                    answerAuthor: r.author || '',
                    answerAbout: r.author_about || '',
                    answers: home.decline(o.answers, ['Ещё %d ответ', 'Ещё %d ответа', 'Ещё %d ответов']).replace('%d', o.answers),
                    likes: i('answers__reactions-layout', {
                        type: 'like',
                        mix: p ? 'answers__footer-item_active_yes' : '',
                        value: i('answers__reactions-value', {
                            active: p,
                            count: r.likes || '0'
                        }),
                        stat: h ? t.stat.getAttr('answers.reactions.like.' + s, null, {
                            precise: !0,
                            customParams: {
                                questionId: o.id,
                                answerId: r.id,
                                rtxreqid: n
                            }
                        }) : null
                    }),
                    dislikes: i('answers__reactions-layout', {
                        type: 'dislike',
                        mix: f ? 'answers__footer-item_active_yes' : '',
                        value: i('answers__reactions-value', {
                            active: f,
                            count: r.dislikes || '0'
                        }),
                        stat: h ? t.stat.getAttr('answers.reactions.dislike.' + s, null, {
                            precise: !0,
                            customParams: {
                                questionId: o.id,
                                answerId: r.id,
                                rtxreqid: n
                            }
                        }) : null
                    })
                })
            });
        }), s('answers__dummy-item', function(e, t, i) {
            return '<div class="answers__card-dummy answers__card i-bem imageloader__card media-service__item"><div class="answers__card-inner answers__dummy-item  media-service__bg media-service__shadow"><div class="answers__dummy-content"></div></div></div>';
        }), s('answers__reactions-layout', function(e, t, i) {
            var a;
            return '<div class="answers__footer-item answers__footer-' + (e.type !== a ? e.type : '') + ' ' + (e.mix !== a ? e.mix : '') + '" ' + (e.stat !== a ? e.stat : '') + '><div class="answers__footer-icon answers__footer-icon_type_' + (e.type !== a ? e.type : '') + '"></div><div class="answers__reactions-wrapper">' + (e.value !== a ? e.value : '') + '</div></div>';
        }), s('answers__card-footer', function(e, t, i) {
            var a;
            return '<div class="answers__card-footer"><div class="answers__footer-left"><div class="answers__footer-a-icon"></div>' + (e.answers !== a ? e.answers : '') + '</div><div class="answers__footer-right">' + (e.likes !== a ? e.likes : '') + ' ' + (e.dislikes !== a ? e.dislikes : '') + '</div></div>';
        }), s('answers__card-answer', function(e, t, i) {
            var a;
            return '<div class="answers__answer"><div class="answers__a-header"><span class="answers__a-img imageloader__image imageloader__image_loaded_no" data-image="' + (e.answerImage !== a ? e.answerImage : '') + '"></span><div class="answers__a-title"><div class="answers__a-author">' + (e.answerAuthor !== a ? e.answerAuthor : '') + '</div><div class="answers__a-about">' + (e.answerAbout !== a ? e.answerAbout : '') + '</div></div></div><div class="answers__a-text">' + (e.answerText !== a ? e.answerText : '') + '</div></div>';
        }), s('answers__card-question', function(e, t, i) {
            var a;
            return '<div class="answers__question ' + (e.mix !== a ? e.mix : '') + '" data-image="' + (e.questionImage !== a ? e.questionImage : '') + '"  style="background-color:' + (e.background !== a ? e.background : '') + '"><div class="answers__question-inner"><div class="answers__q-text">' + (e.questionTitle !== a ? e.questionTitle : '') + '</div></div></div>';
        }), s('answers__card', function(e, t, i) {
            var a, s;
            return '<div class="answers__card-inner media-service__bg media-service__shadow" data-card-id="' + (e.cardId !== s ? e.cardId : '') + '">' + ((a = i('answers__card-question', e)) !== s ? a : '') + ((a = i('answers__card-answer', e)) !== s ? a : '') + ((a = i('answers__card-footer', e)) !== s ? a : '') + '</div>';
        }), s.cached('answers__footer-text', function(e) {
            return ['%d ответ', '%d ответа', '%d ответов'];
        }), s('block', function(e, t, i) {
            var a, s;
            return '<div class="' + (e.block !== s ? e.block : t.block !== s ? t.block : (a = i('block', e)) !== s ? a : '') + ' ' + (e.rootMod !== s ? e.rootMod : t.rootMod !== s ? t.rootMod : (a = i('rootMod', e)) !== s ? a : '') + ' block"' + (e.attrs !== s ? e.attrs : t.attrs !== s ? t.attrs : (a = i('attrs', e)) !== s ? a : '') + '><div class="block__title">' + ((a = i('block__title', e)) !== s ? a : '') + '</div><div class="' + (e.block !== s ? e.block : t.block !== s ? t.block : (a = i('block', e)) !== s ? a : '') + '__content block__content">' + (e.content !== s ? e.content : t.content !== s ? t.content : (a = i('content', e)) !== s ? a : '') + '</div>' + (e.after !== s ? e.after : t.after !== s ? t.after : (a = i('after', e)) !== s ? a : '') + '</div>';
        }), s('informers8-traffic-personal__panel-loader', function(e, t, i) {
            return i('informers8-item__inner', {
                innerContent: i('span', {
                    attrs: e && e.attrs ? e.attrs : {},
                    mod: 'informers8-traffic-personal__panel-loader'
                })
            });
        }), s('informers8-traffic-personal__panel', function(e, t, i) {
            var a = e.router || {},
                s = e.key,
                n = e.title || '',
                o = '',
                r = '',
                l = '',
                c = a.direct,
                _ = c && c.mapUrl;
            a.isBlocked || c && c.isBlocked ? (r = a.description || '', l = 'informer.traffic.jobhome.blocked.' + s, o = i('span', {
                mod: 'informers8-traffic-personal__icon informers8-traffic-personal__icon_type_blocked'
            })) : c ? (r = c.timeText || '', l = 'informer.traffic.jobhome.direct.' + s, a.jamsRate && (o = i('informers8-item__traffic-jams', {
                mod: 'informers8-traffic-personal__jams',
                jams: a.jamsRate
            }))) : (r = 'нет данных', l = 'informer.traffic.jobhome.' + (e.error ? 'error' : 'no_data') + '.' + s, o = i('span', {
                mod: 'informers8-traffic-personal__icon informers8-traffic-personal__icon_type_no-data'
            }));
            var d = home.deepExtend({
                tabindex: 0
            }, _ ? i('informers8-item__traffic-attrs', {
                counter: l,
                query: _.slice(_.indexOf('?') + 1)
            }) : {});
            return i('home-link', {
                href: _,
                mix: 'informers8-traffic-personal__panel-link',
                stat: t.stat.getAttr(l),
                attrs: d,
                content: i('informers8-item__inner', {
                    innerContent: n + o + (!o && r ? ' ' : '') + r
                })
            });
        }), s('informers8-item__inner', function(e, t, i) {
            var a = e.innerContent || '';
            return e.icon && (a += i('span', {
                mod: 'informers8-item__icon ' + (e.iconMix || '')
            })), e.text && (a += i('span', {
                mod: 'informers8-item__text',
                content: e.text
            })), i('span', {
                mod: 'informers8-item__inner',
                content: i('informers8-item__inner-layout', {
                    title: e.title || '&nbsp;',
                    content: a
                })
            });
        }), s('informers8-item__inner-layout', function(e, t, i) {
            var a;
            return '<span class="informers8-item__title" aria-hidden="true">' + (e.title !== a ? e.title : '') + '</span><span class="informers8-item__content">' + (e.content !== a ? e.content : '') + '</span>';
        }), s('informers8-item__traffic-attrs', function(e, t) {
            var i = {};
            return t.isAppOpenerDisabled || (i['data-app-query'] = e.query, i['data-app'] = 'maps', i['data-app-query-sources'] = JSON.stringify({
                ll: {
                    location: 'client'
                }
            }), i['data-app-counter'] = e.counter + '.app'), i.role = 'complementary', i['aria-label'] = 'Пробки', i;
        }), s('informers8-item__traffic-jams-color', function(e) {
            return e.noData ? 'gray' : e.jams >= 7 || e.isBlocked ? 'red' : e.jams > 3 ? 'yellow' : 'green';
        }), s('informers8-item__traffic-jams', function(e, t, i) {
            if (e.jams >= 0) {
                var a = i('informers8-item__traffic-jams-color', e);
                if (a) {
                    var s = e.mod || '';
                    return s += ' informers8-item__traffic-jams informers8-item__traffic-jams_color_' + a, 10 === e.jams && (s += ' informers8-item__traffic-jams_high'), i('span', {
                        mod: 'informers8-item__traffic-jams-wrapper',
                        content: i('span', {
                            mod: s,
                            content: e.jams
                        })
                    });
                }
            }
        }), s('nhl__panel', function(e, t, i) {
            var a;
            return a = e.dummy ? new Array(3).join(i('nhl-item_dummy', {})) : e.items.map(function(t) {
                return t.isDark = e.isDark, t.isTouch = !0, i('nhl-item', t);
            }).join(''), i('nhl__panel-layout', {
                items: a
            });
        }), s('nhl__panel-layout', function(e, t, i) {
            return '<div class="scroller__hider imageloader i-bem" data-bem="{&quot;imageloader&quot;:{}}"><div class="scroller imageloader__scroller i-bem" data-bem="{&quot;scroller&quot;:{}}"><div class="nhl__items">' + (void 0 !== e.items ? e.items : '') + '</div></div></div>';
        }), s('tumbler', function(e, t, i) {
            var a = e.id || home.rnd(),
                s = e.content === undefined ? [] : [].concat(e.content),
                n = '',
                o = '',
                r = function(e) {
                    'left' !== e.side && 'right' !== e.side && home.error('tumbler: У элемента option должно быть свойство side в значении left или right'), 'left' === e.side && (n = i('tumbler__option', e)), 'right' === e.side && (o = i('tumbler__option', e));
                },
                l = e.mods || {};
            l.view || (l.view = 'classic'), s[0] && r(s[0]), s[1] && r(s[1]);
            var c = {
                values: [n.value || 'false', o.value || 'true'],
                view: l.view,
                name: e.name || a,
                leftId: n ? 'left' + a : undefined,
                rightId: o ? 'right' + a : undefined,
                tabindex: e.tabindex || 0,
                checked: 'yes' === l.checked,
                disabled: 'yes' === l.disabled
            };
            return i('span', {
                mod: home.getBEMClassname('tumbler', {
                    mix: 'i-bem' + (e.mix ? ' ' + e.mix : ''),
                    mods: l
                }),
                attrs: {
                    'data-bem': home.getBEMParams({
                        tumbler: home.deepExtend({
                            live: !1
                        }, e.js || {})
                    })
                },
                content: n + i('tumbler__box', c) + o + i('tumbler__input', c)
            });
        }), s('tumbler__box', function(e, t, i) {
            return i('span', {
                mod: 'tumbler__box',
                content: i('tumbler__sticker', {
                    mods: {
                        position: 'left'
                    },
                    content: i('tumbler__sticker-label', {
                        content: 'Вкл'
                    })
                }) + i('tumbler__sticker', {
                    mods: {
                        position: 'right'
                    },
                    content: i('tumbler__sticker-label', {
                        content: 'Откл'
                    })
                }) + i('button2', {
                    js: {
                        prvntKeys: ['ENTER'],
                        clickKeys: ['SPACE']
                    },
                    mods: {
                        view: 'classic' === e.view ? 'classic' : undefined,
                        theme: 'normal',
                        disabled: e.disabled ? 'yes' : undefined
                    },
                    tabindex: e.tabindex,
                    attrs: {
                        'aria-labelledby': e.leftId || e.rightId,
                        'aria-pressed': e.checked
                    },
                    mix: 'tumbler__button'
                })
            });
        }), s('tumbler__input', function(e, t, i) {
            var a = e.checked ? e.rightId || e.leftId : e.leftId || e.rightId;
            return i('tumbler__input-layout', {
                attrs: {
                    'data-bem': home.getBEMParams({
                        tumbler__input: {
                            _values: e.values
                        }
                    }),
                    name: e.name,
                    checked: e.checked,
                    value: e.values[Number(e.checked)],
                    disabled: e.disabled,
                    tabindex: -1,
                    autocomplete: 'off',
                    'aria-hidden': 'true',
                    'aria-labelledby': a
                }
            });
        }), s('tumbler__input-layout', function(e, t, i) {
            return '<input type="checkbox" class="tumbler__input"' + home.parseRules.bem(e, t, 'attrs') + '>';
        }), s('tumbler__sticker', function(e, t, i) {
            return i('div', {
                mix: home.getBEMClassname('tumbler__sticker', {
                    mods: e.mods
                }),
                attrs: {
                    'aria-hidden': 'true'
                },
                content: e.content
            });
        }), s('tumbler__sticker-label', function(e, t, i) {
            return i('div', {
                mix: 'tumbler__sticker-label',
                content: e.content
            });
        }), s('tumbler__option', function(e, t, i) {
            return i('span', {
                mod: home.getBEMClassname('tumbler__label', {
                    mods: {
                        side: e.side
                    }
                }),
                content: i('tumbler__text', {
                    side: e.side,
                    content: e.content
                })
            });
        }), s('tumbler__text', function(e, t, i) {
            return i('span', {
                mod: home.getBEMClassname('tumbler__text', {
                    mods: {
                        side: e.side
                    }
                }),
                content: e.content
            });
        }), s('dummy-cards__tabs', function(e, t, i) {
            return new Array(5).join(i('mix-tabber__tab', {
                mods: {
                    dummy: 'yes'
                },
                content: '&nbsp;'
            }));
        }), s('nhl-item__schedule-row', function(e, t, i) {
            var a, s = '\u2013 : \u2013',
                n = '\u2013 : \u2013';
            if ('in_progress' === e.status || 'finished' === e.status) {
                var o, r = e.teams[0].score,
                    l = e.teams[1].score;
                'finished' === e.status && ('shootout' === e.m_end_status ? o = 'Б' : 'overtime' === e.m_end_status && (o = 'ОТ')), o && (e.teams[0].winner ? r += ' ' + o : l += ' ' + o), s = r + ' : ' + l;
            } else 'not_started' === e.status && e.start && (s = n = e.start);
            return 'not_started' === e.status ? a = 'notstarted' : 'in_progress' === e.status ? a = 'inprogress' : 'finished' === e.status && (a = 'finished'), i('home-link', {
                href: e.url,
                stat: t.stat.getAttr('nhl.item.schedule_match'),
                mix: 'nhl-item__table-row nhl-item__schedule-row' + (a ? ' nhl-item__schedule-row_status_' + a : ''),
                content: i('nhl-item__schedule-row-layout', {
                    name0: e.teams[0].name,
                    icon0: e.teams[0].icon,
                    name1: e.teams[1].name,
                    icon1: e.teams[1].icon,
                    score: s,
                    hiddenScore: n
                })
            });
        }), s('nhl-item_schedule', function(e, t, i) {
            var a = i('nhl-item__table-limit') || 5;
            return i('nhl-item__layout_schedule', {
                mix: 'imageloader__card ' + i('nhl-item__mix'),
                mods: {
                    schedule: 'yes'
                },
                title: e.title,
                events: e.events.slice(0, a).map(function(e) {
                    return i('nhl-item__schedule-row', e);
                }).join(''),
                button: i('button2', {
                    mods: {
                        theme: 'normal',
                        size: e.isTouch ? 'touch' : 'nhl',
                        view: 'default',
                        tone: e.isDark ? 'dark2' : 'default'
                    },
                    url: e.button_url,
                    stat: t.stat.getAttr('nhl.item.schedule'),
                    content: e.button_text,
                    mix: 'nhl-item__table-button'
                })
            });
        }), s('nhl-item_news', function(e, t, i) {
            return i('home-link', {
                href: e.url,
                stat: t.stat.getAttr('nhl.item.news'),
                target: e.linkTarget,
                mix: 'nhl-item i-bem nhl-item_news_yes imageloader__card ' + i('nhl-item__mix'),
                attrs: {
                    'data-bem': home.getBEMParams({
                        'nhl-item': {}
                    })
                },
                content: i(e.img ? 'nhl-item__layout_news' : 'nhl-item__layout_news-text', e)
            });
        }), s('nhl-item__table-row', function(e, t, i) {
            return i('home-link', {
                href: e.url,
                stat: t.stat.getAttr('nhl.item.team'),
                mix: 'nhl-item__table-row',
                content: i('nhl-item__table-row-layout', e)
            });
        }), s('nhl-item_table', function(e, t, i) {
            var a = i('nhl-item__table-limit') || 5;
            return i('nhl-item__layout_table', {
                mix: 'imageloader__card ' + i('nhl-item__mix'),
                mods: {
                    table: 'yes'
                },
                teams: e.teams.slice(0, a).map(function(e) {
                    return i('nhl-item__table-row', e);
                }).join(''),
                button: i('button2', {
                    mods: {
                        theme: 'normal',
                        size: e.isTouch ? 'touch' : 'nhl',
                        view: 'default',
                        tone: e.isDark ? 'dark2' : 'default'
                    },
                    url: e.table_url,
                    stat: t.stat.getAttr('nhl.item.table'),
                    content: 'Показать таблицу целиком',
                    mix: 'nhl-item__table-button'
                })
            });
        }), s('nhl-item', function(e, t, i) {
            if ('table' === e.type) return i('nhl-item_table', e);
            if ('news' === e.type) return i('nhl-item_news', e);
            if ('schedule' === e.type) return i('nhl-item_schedule', e);
            var a, s, n, o, r = !!e.content_id;
            (r && (e.is_vod ? a = 'Лучшие моменты' : 'in_progress' === e.status ? a = 'Прямая трансляция' : 'finished' === e.status && (a = 'Запись матча')), e.teams && 'not_started' !== e.status) && ('in_progress' !== e.status && 'finished' !== e.status || (s = e.teams[0].result, n = e.teams[1].result), 'finished' === e.status && ('shootout' === e.m_end_status ? o = 'Б' : 'overtime' === e.m_end_status && (o = 'ОТ'), o && (e.teams[0].winner ? s += ' ' + o : n += ' ' + o)));
            return i('home-link', {
                mix: home.getBEMClassname('nhl-item', {
                    mods: {
                        stream: r ? 'yes' : ''
                    },
                    mix: 'i-bem imageloader__card ' + i('nhl-item__mix')
                }),
                href: e.url,
                stat: t.stat.getAttr('nhl.match.link'),
                target: e.linkTarget,
                attrs: {
                    'data-bem': home.getBEMParams({
                        'nhl-item': {}
                    })
                },
                content: i('nhl-item__layout', {
                    topBadge: a ? i('nhl-item__top-badge', {
                        mods: {
                            live: 'in_progress' === e.status ? 'yes' : ''
                        },
                        mix: 'nhl-item__badge',
                        content: a
                    }) : '',
                    push: 'not_started' === e.status && e.push && t.pushSupported ? i('promo-pusher-button_theme_nhl', {
                        mods: {
                            theme: 'nhl'
                        },
                        mix: 'nhl-item__push',
                        text: 'Напомнить',
                        js: {
                            'promo-pusher-button': {
                                counter: 'nhl.match.sup',
                                tags: [{
                                    name: e.push.tag,
                                    value: e.push.value,
                                    expiryDate: e.push.expire
                                }],
                                subscribedText: 'Вы подписаны'
                            }
                        }
                    }) : '',
                    play: r ? i('nhl-item__play') : '',
                    teams: e.teams && 'not_started' !== e.status ? i('nhl-item__teams', {
                        bg0: e.teams[0].bg,
                        bg1: e.teams[1].bg,
                        icon0: e.teams[0].icon,
                        icon1: e.teams[1].icon,
                        text0: s !== undefined ? i('div', {
                            mix: 'nhl-item__team-text',
                            content: s
                        }) : '',
                        text1: n !== undefined ? i('div', {
                            mix: 'nhl-item__team-text',
                            content: n
                        }) : ''
                    }) : '',
                    bottomBadge: e.duration ? i('div', {
                        mix: 'nhl-item__badge nhl-item__bottom-badge',
                        content: e.duration
                    }) : '',
                    img: e.img,
                    text: e.teams ? e.teams[0].name + ' \u2014 ' + e.teams[1].name : e.text,
                    textMods: {
                        mods: {
                            long: e.is_vod ? 'yes' : ''
                        },
                        mix: e.is_vod ? 'i-multiline-overflow' : ''
                    },
                    status: e.status_name
                })
            });
        }), s('nhl-item__schedule-row-layout', function(e, t, i) {
            var a;
            return '<span class="nhl-item__table-cell nhl-item__table-cell_team"><span class="nhl-item__schedule-name-wrapper" title="' + (e.name0 !== a ? e.name0 : '') + '"><span class="nhl-item__table-icon nhl-item__table-icon_left nhl-item__icon nhl-item__icon_size_s" style="background-image:url(' + (e.icon0 !== a ? e.icon0 : '') + ')"></span><span class="nhl-item__schedule-name">' + (e.name0 !== a ? e.name0 : '') + '</span></span></span><span class="nhl-item__table-cell nhl-item__table-cell_score"><div class="nhl-item__schedule-score">' + (e.score !== a ? e.score : '') + '</div><div class="nhl-item__schedule-score-placeholder">' + (e.hiddenScore !== a ? e.hiddenScore : '') + '</div></span><span class="nhl-item__table-cell nhl-item__table-cell_team nhl-item__table-cell_team-right"><span class="nhl-item__schedule-name-wrapper" title="' + (e.name1 !== a ? e.name1 : '') + '"><span class="nhl-item__schedule-name">' + (e.name1 !== a ? e.name1 : '') + '</span><span class="nhl-item__table-icon nhl-item__table-icon_right nhl-item__icon nhl-item__icon_size_s" style="background-image:url(' + (e.icon1 !== a ? e.icon1 : '') + ')"></span></span></span>';
        }), s('nhl-item__layout_schedule', function(e, t, i) {
            var a;
            return '<div class="' + home.parseRules.bem(e, t, 'nhl-item.class') + '"><div class="nhl-item__schedule-title">' + (e.title !== a ? e.title : '') + '</div><div class="nhl-item__table nhl-item__table_schedule_yes"><tbody>' + (e.events !== a ? e.events : '') + '</tbody></div>' + (e.button !== a ? e.button : '') + '</div>';
        }), s('nhl-item_dummy', function(e, t, i) {
            var a;
            return '<div class="nhl-item nhl-item_dummy ' + (void 0 !== (a = i('nhl-item__mix', e)) ? a : '') + '"></div>';
        }), s('nhl-item__layout_news-text', function(e, t, i) {
            var a;
            return '<div class="nhl-item__news-text nhl-item__news-text_title_yes i-multiline-overflow">' + (e.text !== a ? e.text : '') + '</div><div class="nhl-item__news-subtext i-multiline-overflow">' + (e.subtext !== a ? e.subtext : '') + '</div>';
        }), s('nhl-item__layout_news', function(e, t, i) {
            var a;
            return '<div class="nhl-item__news-image imageloader__image imageloader__image_loaded_no" data-image="' + (e.img !== a ? e.img : '') + '"></div><div class="nhl-item__news-text i-multiline-overflow">' + (e.text !== a ? e.text : '') + '</div>';
        }), s('nhl-item__table-row-layout', function(e, t, i) {
            var a;
            return '<span class="nhl-item__table-cell nhl-item__table-cell_name"><span class="nhl-item__table-icon nhl-item__table-icon_left nhl-item__icon nhl-item__icon_size_s" style="background-image:url(' + (e.icon !== a ? e.icon : '') + ')"></span>' + (e.name !== a ? e.name : '') + '</span><span class="nhl-item__table-cell nhl-item__table-cell_num">' + (e.score !== a ? e.score : '') + '</span><span class="nhl-item__table-cell nhl-item__table-cell_num">' + (e.games !== a ? e.games : '') + '</span>';
        }), s('nhl-item__layout_table', function(e, t, i) {
            var a;
            return '<div class="' + home.parseRules.bem(e, t, 'nhl-item.class') + '"><div class="nhl-item__table"><div class="nhl-item__table-row"><span class="nhl-item__table-cell_head nhl-item__table-cell nhl-item__table-cell_name">Турнирная таблица</span><span class="nhl-item__table-cell_head nhl-item__table-cell nhl-item__table-cell_num">очки</span><span class="nhl-item__table-cell_head nhl-item__table-cell nhl-item__table-cell_num">игры</span></div>' + (e.teams !== a ? e.teams : '') + '</div>' + (e.button !== a ? e.button : '') + '</div>';
        }), s('nhl-item__teams', function(e, t, i) {
            var a;
            return '<div class="nhl-item__teams" style="background:' + (e.bg0 !== a ? e.bg0 : '') + '"><div class="nhl-item__team"><div class="nhl-item__icon" style="background-image:url(' + (e.icon0 !== a ? e.icon0 : '') + ')"></div>' + (e.text0 !== a ? e.text0 : '') + '</div><div class="nhl-item__team" style="background:linear-gradient(110deg,transparent,transparent 12px,' + (e.bg1 !== a ? e.bg1 : '') + ' 12px,' + (e.bg1 !== a ? e.bg1 : '') + ')">' + (e.text1 !== a ? e.text1 : '') + '<div class="nhl-item__icon" style="background-image:url(' + (e.icon1 !== a ? e.icon1 : '') + ')"></div></div></div>';
        }), s('nhl-item__play', function(e, t, i) {
            return '<div class="nhl-item__play"></div>';
        }), s('nhl-item__top-badge', function(e, t, i) {
            return '<div class="' + home.parseRules.bem(e, t, 'nhl-item__top-badge.class') + '">' + (void 0 !== e.content ? e.content : '') + '</div>';
        }), s('nhl-item__layout', function(e, t, i) {
            var a;
            return '<div class="nhl-item__top imageloader__image imageloader__image_loaded_no" data-image="' + (e.img !== a ? e.img : '') + '">' + (e.topBadge !== a ? e.topBadge : '') + (e.push !== a ? e.push : '') + (e.play !== a ? e.play : '') + (e.teams !== a ? e.teams : '') + (e.bottomBadge !== a ? e.bottomBadge : '') + '</div><div class="nhl-item__bottom"><div class="' + home.parseRules.bem(e, t, 'textMods.nhl-item__text.class') + '">' + (e.text !== a ? e.text : '') + '</div><div class="nhl-item__status">' + (e.status !== a ? e.status : '') + '</div></div>';
        }), s.cached('nhl-item__table-limit', function() {
            return 4;
        }), s('promo-pusher-button_theme_nhl', function(e, t, i) {
            var a;
            return '<div class="' + home.parseRules.bem(e, t, 'promo-pusher-button.class') + ' i-bem" data-bem="' + home.parseRules.bem(e, t, 'js') + '" title="Подписаться"><svg class="promo-pusher-button__icon" viewBox="0 0 16 16"><path d="M8 16a2.5 2.5 0 0 0 2.5-2.5h-5A2.5 2.5 0 0 0 8 16z" fill="#fff"/><path fill-rule="evenodd" clip-rule="evenodd" d="M7 1a1 1 0 0 1 2 0v.609a4.635 4.635 0 0 1 3.596 3.945l.49 3.896a3.554 3.554 0 0 0 1.119 2.17l.353.325c.36.332.47.856.272 1.305-.2.456-.652.75-1.15.75H2.32a1.26 1.26 0 0 1-1.152-.75 1.145 1.145 0 0 1 .272-1.306l.353-.324A3.554 3.554 0 0 0 2.91 9.45l.49-3.896A4.635 4.635 0 0 1 7 1.608V1zm4.102 8.7c.104.825.548 1.8 1.048 2.3h-8.3c.5-.5.941-1.475 1.045-2.3l.49-3.896a2.633 2.633 0 0 1 5.226 0l.491 3.896z" fill="#fff"/></svg><div class="promo-pusher-button__icon-progress"></div><div class="promo-pusher-button__icon-active"></div>' + (void 0 !== (a = i('promo-pusher-button__text', e)) ? a : '') + '</div>';
        });
    }();
    if (window.Ya && Ya.Rum) {
        Ya.Rum.sendTimeMark('2095.1428');
    }
});