import {
    Application
} from 't3js';
import dom from '../../js/services/dom';
import util from '../../js/services/util';
import apiService from '../../js/services/component-api';
import globalEvents from '../../js/services/global-events';
import template from './quickly-catch-up-fe.html';


class QuicklyCatchUp {
    constructor({
        config,
        element
    }) {
        this.config = config;
        this.element = element;
    }

    getData() {
        if (this.config.stories) {
            return Promise.resolve(this.config);
        }

        return apiService
            .get('qcu', {
                origin: window.BZFD.Config.webRoot
            })
            .then(this.transformData.bind(this));
    }

    /* eslint-disable camelcase */
    transformData({
        results,
        updated_at
    }) {
        return {
            newsDesign: this.config.newsDesign,
            title: this.config.title || 'Quickly Catch Up',
            newsLogoUrl: this.config.newsLogoUrl,
            timeSince: util.timeSince(updated_at).text,
            stories: results.map(({
                id,
                name,
                url
            }) => ({
                id,
                title: name,
                url,
            }))
        };
    }
    /* eslint-enable camelcase */

    createComponent(data) {
        return template.render(data);
    }

    attachComponent(component) {
        return dom.append(this.element, component);
    }

    setAttr() {
        const svg = this.element.querySelector('svg');
        const title = this.element.querySelector('title');
        if (title && svg) {
            const id = `buzzfeed-news-logo-${Math.random().toString(36).replace(/[^a-z1-9]+/g, '')}`;
            svg.setAttribute('aria-labelledby', id);
            title.setAttribute('id', id);
        }
    }

    fallback(error) {
        dom.hide(this.element);

        if ('raven' in window && window.BZFD.Config.env !== 'dev') {
            return window.raven.captureException(error);
        }

        throw new Error(error);
    }

    /**
     * Code that runs when this module has been processed
     */
    loadComplete() {
        let idxInParent;
        if ('idxInParent' in this.config) {
            idxInParent = this.config.idxInParent;
        } else if ('idxInParent' in this.element.dataset) {
            idxInParent = Number(this.element.dataset.idxInParent);
        }
        Application.broadcast(
            globalEvents.componentLoaded, {
                id: this.element.id,
                idxInParent
            }
        );
    }

    init() {
        return this.getData.bind(this)()
            .then(this.createComponent)
            .then(this.attachComponent.bind(this))
            .then(this.setAttr.bind(this))
            .catch(this.fallback.bind(this))
            .then(this.loadComplete.bind(this));
    }
}

Application.addModule('quickly-catch-up',
    context => new QuicklyCatchUp({
        config: context.getConfig(),
        element: context.getElement(),
    })
);