import {
    has,
    get
} from 'lodash';

export function gaMap(mapper) {

    const servicesToCategories = {
        'feedpager': 'Feed',
        'bpager': 'Buzz'
    };

    const clickRouter = mapper.getOrCreateRouter('track/click');
    const scrollRouter = mapper.getOrCreateRouter('track/scroll');

    const bfReviewsPackageClickConfig = clickRouter.createConfigForRoute(function(src) {
        return src.l === 'Package/reviews';
    });
    bfReviewsPackageClickConfig.addMapTo('category', '').mapFrom(function(src) {
        return has(servicesToCategories, get(src, 'data.page.platform')) ?
            servicesToCategories[get(src, 'data.page.platform')] : get(src, 'data.page.platform');
    });
    bfReviewsPackageClickConfig.addMapTo('action', '').mapFrom(function(src) {
        if (src.n.match('|')) {
            src.n = src.n.replace(/\|/g, '/');
        }
        return src.n;
    });
    bfReviewsPackageClickConfig.addMapTo('label', '').mapFrom('d');
    bfReviewsPackageClickConfig.addMapTo('value', '').mapFrom(function(src) {
        return {
            dimension6: get(src, 'data.url')
        };
    });

    const bfReviewsPackageImpressionConfig = scrollRouter.createConfigForRoute(function(src) {
        return src.l === 'Package/reviews';
    });
    bfReviewsPackageImpressionConfig.addMapTo('category', '').mapFrom(function(src) {
        return has(servicesToCategories, get(src, 'data.page.platform')) ?
            servicesToCategories[get(src, 'data.page.platform')] : get(src, 'data.page.platform');
    });
    bfReviewsPackageImpressionConfig.addMapTo('action', 'impression');
    bfReviewsPackageImpressionConfig.addMapTo('label', '').mapFrom('d');

}