import {
    has,
    get
} from 'lodash';

export function gaMap(mapper) {

    const servicesToCategories = {
        'feedpager': 'Feed',
        'bpager': 'Buzz'
    };

    const clickRouter = mapper.getOrCreateRouter('track/click');
    const scrollRouter = mapper.getOrCreateRouter('track/scroll');

    const bbPackageClickConfig = clickRouter.createConfigForRoute(function(src) {
        return src.l === 'buzzblocks/Package';
    });
    bbPackageClickConfig.addMapTo('category', '').mapFrom(function(src) {
        let platform = has(servicesToCategories, get(src, 'data.page.platform')) ?
            servicesToCategories[get(src, 'data.page.platform')] : get(src, 'data.page.platform');
        return platform + ':package';
    });
    bbPackageClickConfig.addMapTo('action', '').mapFrom(function(src) {
        if (src.n.match('|')) {
            src.n = src.n.replace(/\|/g, '/');
        }
        return 'click:' + src.n;
    });
    bbPackageClickConfig.addMapTo('label', '').mapFrom('d');

    const bbPackageImpressionConfig = scrollRouter.createConfigForRoute(function(src) {
        return src.l === 'buzzblocks/Package';
    });
    bbPackageImpressionConfig.addMapTo('category', '').mapFrom(function(src) {
        let platform = has(servicesToCategories, get(src, 'data.page.platform')) ?
            servicesToCategories[get(src, 'data.page.platform')] : get(src, 'data.page.platform');
        return platform + ':package';
    });
    bbPackageImpressionConfig.addMapTo('action', 'impression');
    bbPackageImpressionConfig.addMapTo('label', '').mapFrom(function(src) {
        let label = src.d;
        // For determinate tracking for each post in package
        if (src.n.indexOf('post|package') === 0) {
            label += src.n.replace('post|package|', '/');
        }
        return label;
    });
}