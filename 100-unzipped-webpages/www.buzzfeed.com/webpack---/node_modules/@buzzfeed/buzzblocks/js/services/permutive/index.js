import {
    queryStringToObject
} from '@buzzfeed/bf-utils/lib/query-string';
import abeagle from '../abeagle';
import webview from '../webview';
import gdpr from '../gdpr';


// namespace for easier testing
const util = {
    queryStringToObject
};


const service = {

    /**
     * Whether or not the current page is a test page for permutive
     * @property
     * @return {Boolean}
     */
    'isTest': isTestPage(),

    /**
     * Get promise to determine whether permutive should be enabled or not
     * @returns {Promise} (reject if should not init)
     */
    'checkIsOn': function() {
        // always run permutive code if on test page
        if (service.isTest) {
            return Promise.resolve(true);
        }
        if (
            // no init where gdpr is required
            gdpr.needsConsent
            // no init on mobile app fallback
            ||
            webview.isMobileApp()
        ) {
            return Promise.resolve(false);
        }
        // should init if feature flag is on
        return abeagle.getExperimentVariant('ADSGROUP-442-permutive')
            .catch(err => {
                if (err && err.type === 'ExperimentNotFound') {
                    return 'on'; // default to "on" where abeagle experiment is not set up
                }
                return null;
            })
            .then((variant) => Promise.resolve(variant === 'on'));
    },

};

/**
 * Whether current page is a test page
 * @return {Boolean}
 */
function isTestPage() {
    const queryParams = util.queryStringToObject(window.location.search) || {};
    return 'permutive-test' in queryParams;
}

export default service;