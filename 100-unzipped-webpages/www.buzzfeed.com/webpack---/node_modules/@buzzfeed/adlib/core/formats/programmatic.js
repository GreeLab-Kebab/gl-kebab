import {
    Application
} from 't3js';
import ads from '../../core/ads';
import {
    AdFormat
} from '../base/format';
import formatTemplateDefault from '../partials/format-simple.html';
import programmaticTemplate from '../partials/programmatic.html';


class AdFormatProgrammatic extends AdFormat {
    constructor() {
        super(...arguments);
        this.template = programmaticTemplate;
    }

    buildFormat() {
        const banner = ads.getSlotContainer(this.config.wid);
        if (!banner) {
            window.raven && window.raven.captureMessage('buildFormat error: slot does not exist', {
                tags: {
                    wid: this.config.wid
                }
            });
            return;
        }
        // move the "advertisement" disclaimer to the top
        banner.parentElement.insertBefore(this.element, banner);
        super.buildFormat();
        // trigger the event when the browser has inserted the disclosure and repainted the layout
        requestAnimationFrame(() => this.context.application.broadcast(`ad-content-rendered-${this.config.wid}`));
    }
}

AdFormatProgrammatic.formatType = 'programmatic';
AdFormatProgrammatic.moduleTemplate = formatTemplateDefault;

Application.addModule(`ad-format-${AdFormatProgrammatic.formatType}`, AdFormatProgrammatic.generateModule());


/**
 * @see https://www.google.com/dfp/6556#delivery/CreateNativeAdFormatAndStyle/nativeStyleId=150925&creativeTemplateId=11762833
 */
class AdFormatProgrammaticResponsive extends AdFormatProgrammatic {}

AdFormatProgrammaticResponsive.formatType = 'programmatic_responsive';

Application.addModule(
    `ad-format-${AdFormatProgrammaticResponsive.formatType}`,
    AdFormatProgrammaticResponsive.generateModule()
);


export {
    AdFormatProgrammatic,
    AdFormatProgrammaticResponsive
};