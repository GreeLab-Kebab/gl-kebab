/**
 * https://developers.facebook.com/docs/plugins/embedded-video-player/api
 */

"use strict";

function FacebookVideoHandler(executable) {
    var _this = this;
    this.initCounter = 0;

    this.init = function() {
        if (window.FB) {
            window.FB.Event.subscribe("xfbml.ready", function(msg) {
                if (msg.type === "video") {
                    _this.processVideo(msg);
                }
            });
            return;
        }

        if (this.initCounter < 10) {
            this.initCounter++;
            setTimeout(function() {
                _this.init();
            }, 500)
        }
    };

    this.processVideo = function(msg) {
        var playerElement = document.getElementById(msg.id);
        var playerInstance = msg.instance;
        var data = {
            id: msg.id,
            published: playerElement.getAttribute("data-published"),
            url: playerElement.getAttribute("data-video-url"),
            source: "facebook",
            type: "embed",
        };

        playerInstance.subscribe("startedPlaying", function() {
            data.duration = msg.instance.getDuration();
            data.currentTime = msg.instance.getCurrentPosition();
            window[executable].apply(this, ["track/video/play", {
                data: data,
            }, ]);
        });

        playerInstance.subscribe("paused", function() {
            data.duration = msg.instance.getDuration();
            data.currentTime = msg.instance.getCurrentPosition();
            window[executable].apply(this, ["track/video/pause", {
                data: data,
            }, ]);
        });

        playerInstance.subscribe("finishedPlaying", function() {
            data.duration = msg.instance.getDuration();
            data.currentTime = msg.instance.getCurrentPosition();
            window[executable].apply(this, ["track/video/finish", {
                data: data,
            }, ]);
        });

        playerInstance.subscribe("startedBuffering", function() {
            data.duration = msg.instance.getDuration();
            data.currentTime = msg.instance.getCurrentPosition();
            window[executable].apply(this, ["track/video/startedBuffering", {
                data: data,
            }, ]);
        });

        playerInstance.subscribe("finishedBuffering", function() {
            data.duration = msg.instance.getDuration();
            data.currentTime = msg.instance.getCurrentPosition();
            window[executable].apply(this, ["track/video/finishedBuffering", {
                data: data,
            }, ]);
        });

        playerInstance.subscribe("error", function() {
            window[executable].apply(this, ["track/video/error", {
                data: data,
            }, ]);
        });
    }
}

export default FacebookVideoHandler;