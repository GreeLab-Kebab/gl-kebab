(function webpackUniversalModuleDefinition(root, factory) {
    if (typeof exports === 'object' && typeof module === 'object')
        module.exports = factory();
    else if (typeof define === 'function' && define.amd)
        define("Sailthru", [], factory);
    else if (typeof exports === 'object')
        exports["Sailthru"] = factory();
    else
        root["Sailthru"] = factory();
})(this, function() {
    return /******/ (function(modules) { // webpackBootstrap
        /******/ // The module cache
        /******/
        var installedModules = {};
        /******/
        /******/ // The require function
        /******/
        function __webpack_require__(moduleId) {
            /******/
            /******/ // Check if module is in cache
            /******/
            if (installedModules[moduleId])
                /******/
                return installedModules[moduleId].exports;
            /******/
            /******/ // Create a new module (and put it into the cache)
            /******/
            var module = installedModules[moduleId] = {
                /******/
                exports: {},
                /******/
                id: moduleId,
                /******/
                loaded: false
                /******/
            };
            /******/
            /******/ // Execute the module function
            /******/
            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
            /******/
            /******/ // Flag the module as loaded
            /******/
            module.loaded = true;
            /******/
            /******/ // Return the exports of the module
            /******/
            return module.exports;
            /******/
        }
        /******/
        /******/
        /******/ // expose the modules object (__webpack_modules__)
        /******/
        __webpack_require__.m = modules;
        /******/
        /******/ // expose the module cache
        /******/
        __webpack_require__.c = installedModules;
        /******/
        /******/ // __webpack_public_path__
        /******/
        __webpack_require__.p = "";
        /******/
        /******/ // Load entry module and return exports
        /******/
        return __webpack_require__(0);
        /******/
    })
    /************************************************************************/
    /******/
    ([
        /* 0 */
        /***/
        function(module, exports, __webpack_require__) {

            'use strict';

            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.overlay = exports.integration = exports.track = exports.personalize = exports.init = exports.debug = undefined;

            var _config = __webpack_require__(1);

            var _config2 = _interopRequireDefault(_config);

            var _spm2 = __webpack_require__(2);

            var _spm3 = _interopRequireDefault(_spm2);

            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default: obj
                };
            }

            var _spm = (0, _spm3.default)(_config2.default),
                debug = _spm.debug,
                init = _spm.init,
                personalize = _spm.personalize,
                track = _spm.track,
                integration = _spm.integration,
                overlay = _spm.overlay;

            exports.debug = debug;
            exports.init = init;
            exports.personalize = personalize;
            exports.track = track;
            exports.integration = integration;
            exports.overlay = overlay;

            /***/
        },
        /* 1 */
        /***/
        function(module, exports) {

            'use strict';

            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                trackDomain: 'https://api.sail-track.com',
                personalizeDomain: 'https://api.sail-personalize.com',
                overlayTrackDomain: 'https://overlay-track-prod01.sailthru.cloud',
                assetsPath: 'https://ak.sail-horizon.com/spm/',
                enableHeartbeat: true
            };

            /***/
        },
        /* 2 */
        /***/
        function(module, exports, __webpack_require__) {

            'use strict';

            Object.defineProperty(exports, "__esModule", {
                value: true
            });

            var _extends2 = __webpack_require__(3);

            var _extends3 = _interopRequireDefault(_extends2);

            var _track = __webpack_require__(41);

            var _track2 = _interopRequireDefault(_track);

            var _heartbeat = __webpack_require__(92);

            var _heartbeat2 = _interopRequireDefault(_heartbeat);

            var _integration = __webpack_require__(94);

            var _integration2 = _interopRequireDefault(_integration);

            var _utility = __webpack_require__(95);

            var _utility2 = _interopRequireDefault(_utility);

            var _personalize = __webpack_require__(123);

            var _personalize2 = _interopRequireDefault(_personalize);

            var _overlay = __webpack_require__(101);

            var _overlay2 = _interopRequireDefault(_overlay);

            var _cookies = __webpack_require__(89);

            var _cookies2 = _interopRequireDefault(_cookies);

            var _sessionOverlay = __webpack_require__(121);

            var _sessionOverlay2 = _interopRequireDefault(_sessionOverlay);

            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default: obj
                };
            }

            exports.default = function(envConfig) {
                var fetchPersonalize = void 0;
                var click = void 0;
                var impression = void 0;
                var pageview = void 0;
                var appendHeartbeatListener = void 0;
                var getCurrentUser = void 0;
                var userSignUp = void 0;
                var userSignUpConfirmedOptIn = void 0;
                var addToCart = void 0;
                var purchase = void 0;
                var customEvent = void 0;
                var SPMPersonalize = void 0;
                var SPMOverlay = void 0;
                var gdprDoNotTrack = void 0;
                var cookiesDoNotTrack = void 0;
                var dismiss = void 0;

                var config = {};

                return {
                    debug: function debug() {
                        return (0, _extends3.default)({}, config);
                    },
                    init: function init() {
                        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                            _ref$userIdKey = _ref.userIdKey,
                            userIdKey = _ref$userIdKey === undefined ? 'hid' : _ref$userIdKey,
                            _ref$checkBlocked = _ref.checkBlocked,
                            checkBlocked = _ref$checkBlocked === undefined ? false : _ref$checkBlocked,
                            _ref$isCustom = _ref.isCustom,
                            isCustom = _ref$isCustom === undefined ? false : _ref$isCustom,
                            _ref$autoTrackPagevie = _ref.autoTrackPageview,
                            autoTrackPageview = _ref$autoTrackPagevie === undefined ? true : _ref$autoTrackPagevie,
                            _ref$excludeContent = _ref.excludeContent,
                            excludeContent = _ref$excludeContent === undefined ? false : _ref$excludeContent,
                            _ref$useStoredTags = _ref.useStoredTags,
                            useStoredTags = _ref$useStoredTags === undefined ? true : _ref$useStoredTags,
                            customerId = _ref.customerId,
                            onSuccess = _ref.onSuccess,
                            onError = _ref.onError,
                            onSignupSuccess = _ref.onSignupSuccess,
                            onSignupError = _ref.onSignupError;

                        config = (0, _extends3.default)({
                            VERSION: 'v1.0.1'
                        }, envConfig, {
                            isCustom: isCustom,
                            userIdKey: userIdKey,
                            checkBlocked: checkBlocked,
                            customerId: customerId,
                            overlays: {},
                            sections: {},
                            requestedSections: {},
                            impressions: {},
                            cleanJSON: [],
                            autoTrackPageview: autoTrackPageview,
                            excludeContent: excludeContent,
                            useStoredTags: useStoredTags,
                            onSuccess: onSuccess,
                            onError: onError,
                            onSignupSuccess: onSignupSuccess,
                            onSignupError: onSignupError
                        });

                        if (typeof config.customerId === 'undefined') {
                            throw Error('Customer ID is required.');
                        }

                        _cookies2.default.refreshNoCookies();
                        _cookies2.default.handleGDPR();

                        var SPMUtility = (0, _utility2.default)(config);
                        fetchPersonalize = SPMUtility.fetchPersonalize;

                        var SPMTrack = (0, _track2.default)(config);
                        click = SPMTrack.click;
                        impression = SPMTrack.impression;
                        pageview = SPMTrack.pageview;
                        gdprDoNotTrack = SPMTrack.gdprDoNotTrack;
                        cookiesDoNotTrack = SPMTrack.cookiesDoNotTrack;

                        var SPMHeartbeat = (0, _heartbeat2.default)(config);
                        appendHeartbeatListener = SPMHeartbeat.appendHearbeatListener;

                        var SPMIntegration = (0, _integration2.default)(config);
                        getCurrentUser = SPMIntegration.getCurrentUser;
                        userSignUp = SPMIntegration.userSignUp;
                        userSignUpConfirmedOptIn = SPMIntegration.userSignUpConfirmedOptIn;
                        addToCart = SPMIntegration.addToCart;
                        purchase = SPMIntegration.purchase;
                        customEvent = SPMIntegration.customEvent;
                        var SPMSessionOverlay = (0, _sessionOverlay2.default)();
                        dismiss = SPMSessionOverlay.dismiss;

                        SPMPersonalize = (0, _personalize2.default)(config);
                        SPMOverlay = (0, _overlay2.default)(config);
                        _cookies2.default.updatePageviewsCookie();
                        SPMOverlay.hideOverlay();

                        if (!isCustom) {
                            return SPMPersonalize.buildPersonalizeUrl(false).then(function(url) {
                                return fetchPersonalize(url, window.location);
                            }).then(function() {
                                if (!_cookies2.default.isDoNotTrackUser()) {
                                    appendHeartbeatListener();
                                }
                            });
                        }
                        if (autoTrackPageview) {
                            pageview(window.location.href);
                        }
                        return SPMOverlay.buildOverlayUrl().then(function(url) {
                            return fetchPersonalize(url, window.location);
                        });
                    },
                    personalize: function personalize(options) {
                        _cookies2.default.handleGDPR();
                        return SPMPersonalize.personalize(options);
                    },
                    track: function track(event, options) {
                        var eventOptions = (0, _extends3.default)({}, options);
                        var sectionId = eventOptions.sectionId,
                            url = eventOptions.url,
                            urls = eventOptions.urls;

                        var errorMessage = 'Invalid event: ' + event + '. Please specify a valid event.';

                        delete eventOptions.sectionId;
                        delete eventOptions.url;
                        delete eventOptions.urls;
                        delete eventOptions.email;
                        delete eventOptions.name;
                        delete eventOptions.id;
                        delete eventOptions.key;

                        _cookies2.default.handleGDPR();

                        switch (event) {
                            case 'click':
                                return click(sectionId, url, eventOptions);
                            case 'impression':
                                return impression(sectionId, urls, eventOptions);
                            case 'pageview':
                                return pageview(url, eventOptions).then(function() {
                                    if (!_cookies2.default.isDoNotTrackUser()) {
                                        appendHeartbeatListener();
                                    }
                                });
                            case 'gdprDoNotTrack':
                                return gdprDoNotTrack(event);
                            case 'cookiesDoNotTrack':
                                return cookiesDoNotTrack(options);
                            default:
                                console.error(errorMessage);
                                return errorMessage;
                        }
                    },
                    integration: function integration(event, options) {
                        var eventOptions = (0, _extends3.default)({}, options);
                        var email = eventOptions.email,
                            name = eventOptions.name,
                            id = eventOptions.id,
                            _eventOptions$key = eventOptions.key,
                            key = _eventOptions$key === undefined ? 'email' : _eventOptions$key;

                        var userId = {
                            id: id || email,
                            key: key
                        };
                        var errorMessage = 'Invalid event: ' + event + '. Please specify a valid event.';

                        delete eventOptions.sectionId;
                        delete eventOptions.url;
                        delete eventOptions.urls;
                        delete eventOptions.email;
                        delete eventOptions.name;
                        delete eventOptions.id;
                        delete eventOptions.key;

                        _cookies2.default.handleGDPR();

                        switch (event) {
                            case 'getCurrentUser':
                                return getCurrentUser(eventOptions);
                            case 'userSignUp':
                                return userSignUp(email, eventOptions);
                            case 'userSignUpConfirmedOptIn':
                                return userSignUpConfirmedOptIn(userId, eventOptions);
                            case 'addToCart':
                                return addToCart(userId, eventOptions);
                            case 'purchase':
                                return purchase(userId, eventOptions);
                            case 'customEvent':
                                return customEvent(name, userId, eventOptions);
                            default:
                                console.error(errorMessage);
                                return errorMessage;
                        }
                    },
                    overlay: function overlay(event, options) {
                        var errorMessage = 'Invalid event: ' + event + '. Please specify a valid event.';
                        var overlayId = options.overlayId;


                        switch (event) {
                            case 'dismiss':
                                return dismiss(overlayId);
                            default:
                                console.error(errorMessage);
                                return errorMessage;
                        }
                    }
                };
            };

            /***/
        },
        /* 3 */
        /***/
        function(module, exports, __webpack_require__) {

            "use strict";

            exports.__esModule = true;

            var _assign = __webpack_require__(4);

            var _assign2 = _interopRequireDefault(_assign);

            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default: obj
                };
            }

            exports.default = _assign2.default || function(target) {
                for (var i = 1; i < arguments.length; i++) {
                    var source = arguments[i];

                    for (var key in source) {
                        if (Object.prototype.hasOwnProperty.call(source, key)) {
                            target[key] = source[key];
                        }
                    }
                }

                return target;
            };

            /***/
        },
        /* 4 */
        /***/
        function(module, exports, __webpack_require__) {

            module.exports = {
                "default": __webpack_require__(5),
                __esModule: true
            };

            /***/
        },
        /* 5 */
        /***/
        function(module, exports, __webpack_require__) {

            __webpack_require__(6);
            module.exports = __webpack_require__(9).Object.assign;

            /***/
        },
        /* 6 */
        /***/
        function(module, exports, __webpack_require__) {

            // 19.1.3.1 Object.assign(target, source)
            var $export = __webpack_require__(7);

            $export($export.S + $export.F, 'Object', {
                assign: __webpack_require__(22)
            });

            /***/
        },
        /* 7 */
        /***/
        function(module, exports, __webpack_require__) {

            var global = __webpack_require__(8),
                core = __webpack_require__(9),
                ctx = __webpack_require__(10),
                hide = __webpack_require__(12),
                PROTOTYPE = 'prototype';

            var $export = function(type, name, source) {
                var IS_FORCED = type & $export.F,
                    IS_GLOBAL = type & $export.G,
                    IS_STATIC = type & $export.S,
                    IS_PROTO = type & $export.P,
                    IS_BIND = type & $export.B,
                    IS_WRAP = type & $export.W,
                    exports = IS_GLOBAL ? core : core[name] || (core[name] = {}),
                    expProto = exports[PROTOTYPE],
                    target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE],
                    key, own, out;
                if (IS_GLOBAL) source = name;
                for (key in source) {
                    // contains in native
                    own = !IS_FORCED && target && target[key] !== undefined;
                    if (own && key in exports) continue;
                    // export native or passed
                    out = own ? target[key] : source[key];
                    // prevent global pollution for namespaces
                    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
                        // bind timers to global for call from export context
                        :
                        IS_BIND && own ? ctx(out, global)
                        // wrap global constructors for prevent change them in library
                        :
                        IS_WRAP && target[key] == out ? (function(C) {
                            var F = function(a, b, c) {
                                if (this instanceof C) {
                                    switch (arguments.length) {
                                        case 0:
                                            return new C;
                                        case 1:
                                            return new C(a);
                                        case 2:
                                            return new C(a, b);
                                    }
                                    return new C(a, b, c);
                                }
                                return C.apply(this, arguments);
                            };
                            F[PROTOTYPE] = C[PROTOTYPE];
                            return F;
                            // make static versions for prototype methods
                        })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
                    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
                    if (IS_PROTO) {
                        (exports.virtual || (exports.virtual = {}))[key] = out;
                        // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
                        if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
                    }
                }
            };
            // type bitmap
            $export.F = 1; // forced
            $export.G = 2; // global
            $export.S = 4; // static
            $export.P = 8; // proto
            $export.B = 16; // bind
            $export.W = 32; // wrap
            $export.U = 64; // safe
            $export.R = 128; // real proto method for `library` 
            module.exports = $export;

            /***/
        },
        /* 8 */
        /***/
        function(module, exports) {

            // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
            var global = module.exports = typeof window != 'undefined' && window.Math == Math ?
                window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
            if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

            /***/
        },
        /* 9 */
        /***/
        function(module, exports) {

            var core = module.exports = {
                version: '2.4.0'
            };
            if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

            /***/
        },
        /* 10 */
        /***/
        function(module, exports, __webpack_require__) {

            // optional / simple context binding
            var aFunction = __webpack_require__(11);
            module.exports = function(fn, that, length) {
                aFunction(fn);
                if (that === undefined) return fn;
                switch (length) {
                    case 1:
                        return function(a) {
                            return fn.call(that, a);
                        };
                    case 2:
                        return function(a, b) {
                            return fn.call(that, a, b);
                        };
                    case 3:
                        return function(a, b, c) {
                            return fn.call(that, a, b, c);
                        };
                }
                return function( /* ...args */ ) {
                    return fn.apply(that, arguments);
                };
            };

            /***/
        },
        /* 11 */
        /***/
        function(module, exports) {

            module.exports = function(it) {
                if (typeof it != 'function') throw TypeError(it + ' is not a function!');
                return it;
            };

            /***/
        },
        /* 12 */
        /***/
        function(module, exports, __webpack_require__) {

            var dP = __webpack_require__(13),
                createDesc = __webpack_require__(21);
            module.exports = __webpack_require__(17) ? function(object, key, value) {
                return dP.f(object, key, createDesc(1, value));
            } : function(object, key, value) {
                object[key] = value;
                return object;
            };

            /***/
        },
        /* 13 */
        /***/
        function(module, exports, __webpack_require__) {

            var anObject = __webpack_require__(14),
                IE8_DOM_DEFINE = __webpack_require__(16),
                toPrimitive = __webpack_require__(20),
                dP = Object.defineProperty;

            exports.f = __webpack_require__(17) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
                anObject(O);
                P = toPrimitive(P, true);
                anObject(Attributes);
                if (IE8_DOM_DEFINE) try {
                    return dP(O, P, Attributes);
                } catch (e) { /* empty */ }
                if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
                if ('value' in Attributes) O[P] = Attributes.value;
                return O;
            };

            /***/
        },
        /* 14 */
        /***/
        function(module, exports, __webpack_require__) {

            var isObject = __webpack_require__(15);
            module.exports = function(it) {
                if (!isObject(it)) throw TypeError(it + ' is not an object!');
                return it;
            };

            /***/
        },
        /* 15 */
        /***/
        function(module, exports) {

            module.exports = function(it) {
                return typeof it === 'object' ? it !== null : typeof it === 'function';
            };

            /***/
        },
        /* 16 */
        /***/
        function(module, exports, __webpack_require__) {

            module.exports = !__webpack_require__(17) && !__webpack_require__(18)(function() {
                return Object.defineProperty(__webpack_require__(19)('div'), 'a', {
                    get: function() {
                        return 7;
                    }
                }).a != 7;
            });

            /***/
        },
        /* 17 */
        /***/
        function(module, exports, __webpack_require__) {

            // Thank's IE8 for his funny defineProperty
            module.exports = !__webpack_require__(18)(function() {
                return Object.defineProperty({}, 'a', {
                    get: function() {
                        return 7;
                    }
                }).a != 7;
            });

            /***/
        },
        /* 18 */
        /***/
        function(module, exports) {

            module.exports = function(exec) {
                try {
                    return !!exec();
                } catch (e) {
                    return true;
                }
            };

            /***/
        },
        /* 19 */
        /***/
        function(module, exports, __webpack_require__) {

            var isObject = __webpack_require__(15),
                document = __webpack_require__(8).document
                // in old IE typeof document.createElement is 'object'
                ,
                is = isObject(document) && isObject(document.createElement);
            module.exports = function(it) {
                return is ? document.createElement(it) : {};
            };

            /***/
        },
        /* 20 */
        /***/
        function(module, exports, __webpack_require__) {

            // 7.1.1 ToPrimitive(input [, PreferredType])
            var isObject = __webpack_require__(15);
            // instead of the ES6 spec version, we didn't implement @@toPrimitive case
            // and the second argument - flag - preferred type is a string
            module.exports = function(it, S) {
                if (!isObject(it)) return it;
                var fn, val;
                if (S && typeof(fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
                if (typeof(fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
                if (!S && typeof(fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
                throw TypeError("Can't convert object to primitive value");
            };

            /***/
        },
        /* 21 */
        /***/
        function(module, exports) {

            module.exports = function(bitmap, value) {
                return {
                    enumerable: !(bitmap & 1),
                    configurable: !(bitmap & 2),
                    writable: !(bitmap & 4),
                    value: value
                };
            };

            /***/
        },
        /* 22 */
        /***/
        function(module, exports, __webpack_require__) {

            'use strict';
            // 19.1.2.1 Object.assign(target, source, ...)
            var getKeys = __webpack_require__(23),
                gOPS = __webpack_require__(38),
                pIE = __webpack_require__(39),
                toObject = __webpack_require__(40),
                IObject = __webpack_require__(27),
                $assign = Object.assign;

            // should work with symbols and should have deterministic property order (V8 bug)
            module.exports = !$assign || __webpack_require__(18)(function() {
                var A = {},
                    B = {},
                    S = Symbol(),
                    K = 'abcdefghijklmnopqrst';
                A[S] = 7;
                K.split('').forEach(function(k) {
                    B[k] = k;
                });
                return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
            }) ? function assign(target, source) { // eslint-disable-line no-unused-vars
                var T = toObject(target),
                    aLen = arguments.length,
                    index = 1,
                    getSymbols = gOPS.f,
                    isEnum = pIE.f;
                while (aLen > index) {
                    var S = IObject(arguments[index++]),
                        keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S),
                        length = keys.length,
                        j = 0,
                        key;
                    while (length > j)
                        if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
                }
                return T;
            } : $assign;

            /***/
        },
        /* 23 */
        /***/
        function(module, exports, __webpack_require__) {

            // 19.1.2.14 / 15.2.3.14 Object.keys(O)
            var $keys = __webpack_require__(24),
                enumBugKeys = __webpack_require__(37);

            module.exports = Object.keys || function keys(O) {
                return $keys(O, enumBugKeys);
            };

            /***/
        },
        /* 24 */
        /***/
        function(module, exports, __webpack_require__) {

            var has = __webpack_require__(25),
                toIObject = __webpack_require__(26),
                arrayIndexOf = __webpack_require__(30)(false),
                IE_PROTO = __webpack_require__(34)('IE_PROTO');

            module.exports = function(object, names) {
                var O = toIObject(object),
                    i = 0,
                    result = [],
                    key;
                for (key in O)
                    if (key != IE_PROTO) has(O, key) && result.push(key);
                // Don't enum bug & hidden keys
                while (names.length > i)
                    if (has(O, key = names[i++])) {
                        ~arrayIndexOf(result, key) || result.push(key);
                    }
                return result;
            };

            /***/
        },
        /* 25 */
        /***/
        function(module, exports) {

            var hasOwnProperty = {}.hasOwnProperty;
            module.exports = function(it, key) {
                return hasOwnProperty.call(it, key);
            };

            /***/
        },
        /* 26 */
        /***/
        function(module, exports, __webpack_require__) {

            // to indexed object, toObject with fallback for non-array-like ES3 strings
            var IObject = __webpack_require__(27),
                defined = __webpack_require__(29);
            module.exports = function(it) {
                return IObject(defined(it));
            };

            /***/
        },
        /* 27 */
        /***/
        function(module, exports, __webpack_require__) {

            // fallback for non-array-like ES3 and non-enumerable old V8 strings
            var cof = __webpack_require__(28);
            module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it) {
                return cof(it) == 'String' ? it.split('') : Object(it);
            };

            /***/
        },
        /* 28 */
        /***/
        function(module, exports) {

            var toString = {}.toString;

            module.exports = function(it) {
                return toString.call(it).slice(8, -1);
            };

            /***/
        },
        /* 29 */
        /***/
        function(module, exports) {

            // 7.2.1 RequireObjectCoercible(argument)
            module.exports = function(it) {
                if (it == undefined) throw TypeError("Can't call method on  " + it);
                return it;
            };

            /***/
        },
        /* 30 */
        /***/
        function(module, exports, __webpack_require__) {

            // false -> Array#indexOf
            // true  -> Array#includes
            var toIObject = __webpack_require__(26),
                toLength = __webpack_require__(31),
                toIndex = __webpack_require__(33);
            module.exports = function(IS_INCLUDES) {
                return function($this, el, fromIndex) {
                    var O = toIObject($this),
                        length = toLength(O.length),
                        index = toIndex(fromIndex, length),
                        value;
                    // Array#includes uses SameValueZero equality algorithm
                    if (IS_INCLUDES && el != el)
                        while (length > index) {
                            value = O[index++];
                            if (value != value) return true;
                            // Array#toIndex ignores holes, Array#includes - not
                        } else
                            for (; length > index; index++)
                                if (IS_INCLUDES || index in O) {
                                    if (O[index] === el) return IS_INCLUDES || index || 0;
                                }
                    return !IS_INCLUDES && -1;
                };
            };

            /***/
        },
        /* 31 */
        /***/
        function(module, exports, __webpack_require__) {

            // 7.1.15 ToLength
            var toInteger = __webpack_require__(32),
                min = Math.min;
            module.exports = function(it) {
                return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
            };

            /***/
        },
        /* 32 */
        /***/
        function(module, exports) {

            // 7.1.4 ToInteger
            var ceil = Math.ceil,
                floor = Math.floor;
            module.exports = function(it) {
                return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
            };

            /***/
        },
        /* 33 */
        /***/
        function(module, exports, __webpack_require__) {

            var toInteger = __webpack_require__(32),
                max = Math.max,
                min = Math.min;
            module.exports = function(index, length) {
                index = toInteger(index);
                return index < 0 ? max(index + length, 0) : min(index, length);
            };

            /***/
        },
        /* 34 */
        /***/
        function(module, exports, __webpack_require__) {

            var shared = __webpack_require__(35)('keys'),
                uid = __webpack_require__(36);
            module.exports = function(key) {
                return shared[key] || (shared[key] = uid(key));
            };

            /***/
        },
        /* 35 */
        /***/
        function(module, exports, __webpack_require__) {

            var global = __webpack_require__(8),
                SHARED = '__core-js_shared__',
                store = global[SHARED] || (global[SHARED] = {});
            module.exports = function(key) {
                return store[key] || (store[key] = {});
            };

            /***/
        },
        /* 36 */
        /***/
        function(module, exports) {

            var id = 0,
                px = Math.random();
            module.exports = function(key) {
                return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
            };

            /***/
        },
        /* 37 */
        /***/
        function(module, exports) {

            // IE 8- don't enum bug keys
            module.exports = (
                'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
            ).split(',');

            /***/
        },
        /* 38 */
        /***/
        function(module, exports) {

            exports.f = Object.getOwnPropertySymbols;

            /***/
        },
        /* 39 */
        /***/
        function(module, exports) {

            exports.f = {}.propertyIsEnumerable;

            /***/
        },
        /* 40 */
        /***/
        function(module, exports, __webpack_require__) {

            // 7.1.13 ToObject(argument)
            var defined = __webpack_require__(29);
            module.exports = function(it) {
                return Object(defined(it));
            };

            /***/
        },
        /* 41 */
        /***/
        function(module, exports, __webpack_require__) {

            /* WEBPACK VAR INJECTION */
            (function(fetch) {
                'use strict';

                Object.defineProperty(exports, "__esModule", {
                    value: true
                });

                var _keys = __webpack_require__(47);

                var _keys2 = _interopRequireDefault(_keys);

                var _typeof2 = __webpack_require__(51);

                var _typeof3 = _interopRequireDefault(_typeof2);

                var _stringify = __webpack_require__(86);

                var _stringify2 = _interopRequireDefault(_stringify);

                var _extends2 = __webpack_require__(3);

                var _extends3 = _interopRequireDefault(_extends2);

                __webpack_require__(88);

                var _cookies = __webpack_require__(89);

                var _cookies2 = _interopRequireDefault(_cookies);

                var _pageview2 = __webpack_require__(91);

                var _pageview3 = _interopRequireDefault(_pageview2);

                var _constants = __webpack_require__(90);

                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule ? obj : {
                        default: obj
                    };
                }

                exports.default = function(config) {
                    function getFullPathUrl(url) {
                        var div = window.document.createElement('div');
                        div.innerHTML = '<a href="' + url + '"></a>';
                        return div.firstChild.href;
                    }

                    function trackEvent(options) {
                        var data = (0, _extends3.default)({}, options);

                        delete data.apiUrl;

                        if (data.onSuccess) {
                            delete data.onSuccess;
                        }

                        if (data.onError) {
                            delete data.onError;
                        }

                        if (data.elementId) {
                            delete data.elementId;
                        }

                        if (data.pageview) {
                            delete data.pageview;
                        }

                        if (options.userIdKey === undefined || options.userIdKey === '' || options.userIdKey.toUpperCase() === 'HID') {
                            var horizonId = _cookies2.default.read('sailthru_hid');
                            if (horizonId !== undefined && horizonId !== '') {
                                data.userIdKey = 'hid';
                                data.userIdValue = horizonId;
                            }
                        }

                        data = (0, _stringify2.default)(data);

                        return fetch(options.apiUrl, {
                            method: 'POST',
                            headers: {
                                Accept: 'application/json',
                                'Content-Type': 'application/json',
                                'X-Lib-Version': config.VERSION,
                                Authorization: 'Bearer ' + config.customerId
                            },
                            body: data
                        }).then(function(response) {
                            return response.json();
                        }).then(function(json) {
                            if (json && (json.error || json.message)) {
                                throw json;
                            }

                            if (!options) {
                                return;
                            }

                            if (options.elementId) {
                                json.elementId = options.elementId;
                            }

                            if (json.doNotTrack) {
                                _cookies2.default.setSailthruHid(_constants.DO_NOT_TRACK);
                                _cookies2.default.handleGDPR();
                            }

                            if (options.pageview) {
                                _cookies2.default.updateSailthruContentCookie(json.contentHash);
                            }

                            if (options.onSuccess) {
                                options.onSuccess(json);
                            }

                            if (!options.visitorId && json.visitorId) {
                                _cookies2.default.create('sailthru_visitor', json.visitorId, 365 * _constants.CONVERT_DAY_TO_MINUTES);
                            }
                        }).catch(function(json) {
                            var responseText = void 0;

                            if (json && json.responseText) {
                                responseText = JSON.parse(json.responseText);
                                console.log('You have the following track error: ' + responseText.message);
                            }

                            if (!options) return;

                            if (options.elementId) {
                                json.elementId = options.elementId;
                            }

                            if (options.pageview) {
                                console.error(_pageview3.default.defaultPageviewOnError(json));
                            }

                            if (options.onError) {
                                options.onError(json);
                            }
                        });
                    }

                    return {
                        click: function click(sectionId, url, options) {
                            var data = (0, _extends3.default)({}, options, {
                                sectionId: sectionId,
                                url: getFullPathUrl(url),
                                apiUrl: config.trackDomain + '/v1/track/event/click/'
                            });

                            if (sectionId && url) {
                                return trackEvent(data);
                            }

                            console.log('url, and sectionId are required for trackClick.', data);
                            return false;
                        },
                        impression: function impression(sectionId, urls, options) {
                            if (Array.isArray(urls)) {
                                urls = urls.map(getFullPathUrl);
                            } else if ((typeof urls === 'undefined' ? 'undefined' : (0, _typeof3.default)(urls)) === 'object' && (0, _keys2.default)(urls).length > 0) {
                                options = urls;
                                urls = undefined;
                            }

                            var data = (0, _extends3.default)({}, options, {
                                sectionId: sectionId,
                                apiUrl: config.trackDomain + '/v1/track/event/impression/'
                            });

                            if (sectionId) {
                                if (urls && urls.length > 0) {
                                    data.urls = urls;
                                }

                                return trackEvent(data);
                            }

                            console.log('sectionId are required for trackImpression.', data);
                            return false;
                        },
                        pageview: function pageview(url, options) {
                            if (url) {
                                var fullUrl = getFullPathUrl(url);
                                var pageviewData = _pageview3.default.getData(fullUrl, options, config);
                                return trackEvent(pageviewData);
                            }
                            console.log('url is required for trackPageView.', url, options);
                            return false;
                        },
                        navigation: function navigation(url, options) {
                            if (url) {
                                var data = (0, _extends3.default)({}, options, {
                                    url: getFullPathUrl(url),
                                    index: Date.now(),
                                    type: 'navigation',
                                    visitorId: _cookies2.default.read('sailthru_visitor'),
                                    apiUrl: config.trackDomain + '/v1/track/heartbeat'
                                });
                                return trackEvent(data);
                            }
                            console.log('url is required for heartbeat navigation', url, options);
                            return false;
                        },
                        heartbeat: function heartbeat(url, options) {
                            if (url) {
                                var data = (0, _extends3.default)({}, options, {
                                    url: getFullPathUrl(url),
                                    index: Date.now(),
                                    type: 'heartbeat',
                                    visitorId: _cookies2.default.read('sailthru_visitor'),
                                    apiUrl: config.trackDomain + '/v1/track/heartbeat'
                                });
                                return trackEvent(data);
                            }
                            console.log('url is required for heartbeat', url, options);
                            return false;
                        },
                        gdprDoNotTrack: function gdprDoNotTrack(options) {
                            var horizonId = _cookies2.default.read('sailthru_hid');
                            if (!horizonId) {
                                return;
                            }
                            _cookies2.default.setSailthruHid(_constants.DO_NOT_TRACK);
                            _cookies2.default.handleGDPR();
                            fetch(config.trackDomain + '/v1/profile/' + horizonId, {
                                method: 'POST',
                                headers: {
                                    Accept: 'application/json',
                                    'Content-Type': 'application/json',
                                    'X-Lib-Version': config.VERSION,
                                    Authorization: 'Bearer ' + config.customerId
                                },
                                body: (0, _stringify2.default)({
                                    doNotTrack: true
                                })
                            }).then(function(response) {
                                return response.json();
                            }).then(function(json) {
                                if (json && (json.error || json.message)) {
                                    throw json;
                                }

                                if (options && options.onSuccess) {
                                    options.onSuccess(json);
                                }
                            }).catch(function(json) {
                                if (options && options.onError) {
                                    options.onError(json);
                                }
                            });
                        },
                        cookiesDoNotTrack: function cookiesDoNotTrack(options) {
                            var apply = !options || options.set !== false;
                            if (apply) {
                                _cookies2.default.setCookiesDoNotTrack();
                                _cookies2.default.handleGDPR();
                            } else {
                                _cookies2.default.unsetCookiesDoNotTrack();
                            }
                        }
                    };
                };
                /* WEBPACK VAR INJECTION */
            }.call(exports, __webpack_require__(42)))

            /***/
        },
        /* 42 */
        /***/
        function(module, exports, __webpack_require__) {

            /* WEBPACK VAR INJECTION */
            (function(global) { /*** IMPORTS FROM imports-loader ***/
                (function() {

                    // the whatwg-fetch polyfill installs the fetch() function
                    // on the global object (window or self)
                    //
                    // Return that as the export for use in Webpack, Browserify etc.
                    __webpack_require__(43);
                    module.exports = self.fetch.bind(self);


                    /*** EXPORTS FROM exports-loader ***/
                    module.exports = global.fetch;
                }.call(global));
                /* WEBPACK VAR INJECTION */
            }.call(exports, (function() {
                return this;
            }())))

            /***/
        },
        /* 43 */
        /***/
        function(module, exports, __webpack_require__) {

            /* WEBPACK VAR INJECTION */
            (function(Promise) {
                (function(self) {
                    'use strict';

                    if (self.fetch) {
                        return
                    }

                    var support = {
                        searchParams: 'URLSearchParams' in self,
                        iterable: 'Symbol' in self && 'iterator' in Symbol,
                        blob: 'FileReader' in self && 'Blob' in self && (function() {
                            try {
                                new Blob()
                                return true
                            } catch (e) {
                                return false
                            }
                        })(),
                        formData: 'FormData' in self,
                        arrayBuffer: 'ArrayBuffer' in self
                    }

                    if (support.arrayBuffer) {
                        var viewClasses = [
                            '[object Int8Array]',
                            '[object Uint8Array]',
                            '[object Uint8ClampedArray]',
                            '[object Int16Array]',
                            '[object Uint16Array]',
                            '[object Int32Array]',
                            '[object Uint32Array]',
                            '[object Float32Array]',
                            '[object Float64Array]'
                        ]

                        var isDataView = function(obj) {
                            return obj && DataView.prototype.isPrototypeOf(obj)
                        }

                        var isArrayBufferView = ArrayBuffer.isView || function(obj) {
                            return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
                        }
                    }

                    function normalizeName(name) {
                        if (typeof name !== 'string') {
                            name = String(name)
                        }
                        if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
                            throw new TypeError('Invalid character in header field name')
                        }
                        return name.toLowerCase()
                    }

                    function normalizeValue(value) {
                        if (typeof value !== 'string') {
                            value = String(value)
                        }
                        return value
                    }

                    // Build a destructive iterator for the value list
                    function iteratorFor(items) {
                        var iterator = {
                            next: function() {
                                var value = items.shift()
                                return {
                                    done: value === undefined,
                                    value: value
                                }
                            }
                        }

                        if (support.iterable) {
                            iterator[Symbol.iterator] = function() {
                                return iterator
                            }
                        }

                        return iterator
                    }

                    function Headers(headers) {
                        this.map = {}

                        if (headers instanceof Headers) {
                            headers.forEach(function(value, name) {
                                this.append(name, value)
                            }, this)

                        } else if (headers) {
                            Object.getOwnPropertyNames(headers).forEach(function(name) {
                                this.append(name, headers[name])
                            }, this)
                        }
                    }

                    Headers.prototype.append = function(name, value) {
                        name = normalizeName(name)
                        value = normalizeValue(value)
                        var oldValue = this.map[name]
                        this.map[name] = oldValue ? oldValue + ',' + value : value
                    }

                    Headers.prototype['delete'] = function(name) {
                        delete this.map[normalizeName(name)]
                    }

                    Headers.prototype.get = function(name) {
                        name = normalizeName(name)
                        return this.has(name) ? this.map[name] : null
                    }

                    Headers.prototype.has = function(name) {
                        return this.map.hasOwnProperty(normalizeName(name))
                    }

                    Headers.prototype.set = function(name, value) {
                        this.map[normalizeName(name)] = normalizeValue(value)
                    }

                    Headers.prototype.forEach = function(callback, thisArg) {
                        for (var name in this.map) {
                            if (this.map.hasOwnProperty(name)) {
                                callback.call(thisArg, this.map[name], name, this)
                            }
                        }
                    }

                    Headers.prototype.keys = function() {
                        var items = []
                        this.forEach(function(value, name) {
                            items.push(name)
                        })
                        return iteratorFor(items)
                    }

                    Headers.prototype.values = function() {
                        var items = []
                        this.forEach(function(value) {
                            items.push(value)
                        })
                        return iteratorFor(items)
                    }

                    Headers.prototype.entries = function() {
                        var items = []
                        this.forEach(function(value, name) {
                            items.push([name, value])
                        })
                        return iteratorFor(items)
                    }

                    if (support.iterable) {
                        Headers.prototype[Symbol.iterator] = Headers.prototype.entries
                    }

                    function consumed(body) {
                        if (body.bodyUsed) {
                            return Promise.reject(new TypeError('Already read'))
                        }
                        body.bodyUsed = true
                    }

                    function fileReaderReady(reader) {
                        return new Promise(function(resolve, reject) {
                            reader.onload = function() {
                                resolve(reader.result)
                            }
                            reader.onerror = function() {
                                reject(reader.error)
                            }
                        })
                    }

                    function readBlobAsArrayBuffer(blob) {
                        var reader = new FileReader()
                        var promise = fileReaderReady(reader)
                        reader.readAsArrayBuffer(blob)
                        return promise
                    }

                    function readBlobAsText(blob) {
                        var reader = new FileReader()
                        var promise = fileReaderReady(reader)
                        reader.readAsText(blob)
                        return promise
                    }

                    function readArrayBufferAsText(buf) {
                        var view = new Uint8Array(buf)
                        var chars = new Array(view.length)

                        for (var i = 0; i < view.length; i++) {
                            chars[i] = String.fromCharCode(view[i])
                        }
                        return chars.join('')
                    }

                    function bufferClone(buf) {
                        if (buf.slice) {
                            return buf.slice(0)
                        } else {
                            var view = new Uint8Array(buf.byteLength)
                            view.set(new Uint8Array(buf))
                            return view.buffer
                        }
                    }

                    function Body() {
                        this.bodyUsed = false

                        this._initBody = function(body) {
                            this._bodyInit = body
                            if (!body) {
                                this._bodyText = ''
                            } else if (typeof body === 'string') {
                                this._bodyText = body
                            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
                                this._bodyBlob = body
                            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
                                this._bodyFormData = body
                            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
                                this._bodyText = body.toString()
                            } else if (support.arrayBuffer && support.blob && isDataView(body)) {
                                this._bodyArrayBuffer = bufferClone(body.buffer)
                                // IE 10-11 can't handle a DataView body.
                                this._bodyInit = new Blob([this._bodyArrayBuffer])
                            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
                                this._bodyArrayBuffer = bufferClone(body)
                            } else {
                                throw new Error('unsupported BodyInit type')
                            }

                            if (!this.headers.get('content-type')) {
                                if (typeof body === 'string') {
                                    this.headers.set('content-type', 'text/plain;charset=UTF-8')
                                } else if (this._bodyBlob && this._bodyBlob.type) {
                                    this.headers.set('content-type', this._bodyBlob.type)
                                } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
                                    this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')
                                }
                            }
                        }

                        if (support.blob) {
                            this.blob = function() {
                                var rejected = consumed(this)
                                if (rejected) {
                                    return rejected
                                }

                                if (this._bodyBlob) {
                                    return Promise.resolve(this._bodyBlob)
                                } else if (this._bodyArrayBuffer) {
                                    return Promise.resolve(new Blob([this._bodyArrayBuffer]))
                                } else if (this._bodyFormData) {
                                    throw new Error('could not read FormData body as blob')
                                } else {
                                    return Promise.resolve(new Blob([this._bodyText]))
                                }
                            }

                            this.arrayBuffer = function() {
                                if (this._bodyArrayBuffer) {
                                    return consumed(this) || Promise.resolve(this._bodyArrayBuffer)
                                } else {
                                    return this.blob().then(readBlobAsArrayBuffer)
                                }
                            }
                        }

                        this.text = function() {
                            var rejected = consumed(this)
                            if (rejected) {
                                return rejected
                            }

                            if (this._bodyBlob) {
                                return readBlobAsText(this._bodyBlob)
                            } else if (this._bodyArrayBuffer) {
                                return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
                            } else if (this._bodyFormData) {
                                throw new Error('could not read FormData body as text')
                            } else {
                                return Promise.resolve(this._bodyText)
                            }
                        }

                        if (support.formData) {
                            this.formData = function() {
                                return this.text().then(decode)
                            }
                        }

                        this.json = function() {
                            return this.text().then(JSON.parse)
                        }

                        return this
                    }

                    // HTTP methods whose capitalization should be normalized
                    var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']

                    function normalizeMethod(method) {
                        var upcased = method.toUpperCase()
                        return (methods.indexOf(upcased) > -1) ? upcased : method
                    }

                    function Request(input, options) {
                        options = options || {}
                        var body = options.body

                        if (input instanceof Request) {
                            if (input.bodyUsed) {
                                throw new TypeError('Already read')
                            }
                            this.url = input.url
                            this.credentials = input.credentials
                            if (!options.headers) {
                                this.headers = new Headers(input.headers)
                            }
                            this.method = input.method
                            this.mode = input.mode
                            if (!body && input._bodyInit != null) {
                                body = input._bodyInit
                                input.bodyUsed = true
                            }
                        } else {
                            this.url = String(input)
                        }

                        this.credentials = options.credentials || this.credentials || 'omit'
                        if (options.headers || !this.headers) {
                            this.headers = new Headers(options.headers)
                        }
                        this.method = normalizeMethod(options.method || this.method || 'GET')
                        this.mode = options.mode || this.mode || null
                        this.referrer = null

                        if ((this.method === 'GET' || this.method === 'HEAD') && body) {
                            throw new TypeError('Body not allowed for GET or HEAD requests')
                        }
                        this._initBody(body)
                    }

                    Request.prototype.clone = function() {
                        return new Request(this, {
                            body: this._bodyInit
                        })
                    }

                    function decode(body) {
                        var form = new FormData()
                        body.trim().split('&').forEach(function(bytes) {
                            if (bytes) {
                                var split = bytes.split('=')
                                var name = split.shift().replace(/\+/g, ' ')
                                var value = split.join('=').replace(/\+/g, ' ')
                                form.append(decodeURIComponent(name), decodeURIComponent(value))
                            }
                        })
                        return form
                    }

                    function parseHeaders(rawHeaders) {
                        var headers = new Headers()
                        rawHeaders.split(/\r?\n/).forEach(function(line) {
                            var parts = line.split(':')
                            var key = parts.shift().trim()
                            if (key) {
                                var value = parts.join(':').trim()
                                headers.append(key, value)
                            }
                        })
                        return headers
                    }

                    Body.call(Request.prototype)

                    function Response(bodyInit, options) {
                        if (!options) {
                            options = {}
                        }

                        this.type = 'default'
                        this.status = 'status' in options ? options.status : 200
                        this.ok = this.status >= 200 && this.status < 300
                        this.statusText = 'statusText' in options ? options.statusText : 'OK'
                        this.headers = new Headers(options.headers)
                        this.url = options.url || ''
                        this._initBody(bodyInit)
                    }

                    Body.call(Response.prototype)

                    Response.prototype.clone = function() {
                        return new Response(this._bodyInit, {
                            status: this.status,
                            statusText: this.statusText,
                            headers: new Headers(this.headers),
                            url: this.url
                        })
                    }

                    Response.error = function() {
                        var response = new Response(null, {
                            status: 0,
                            statusText: ''
                        })
                        response.type = 'error'
                        return response
                    }

                    var redirectStatuses = [301, 302, 303, 307, 308]

                    Response.redirect = function(url, status) {
                        if (redirectStatuses.indexOf(status) === -1) {
                            throw new RangeError('Invalid status code')
                        }

                        return new Response(null, {
                            status: status,
                            headers: {
                                location: url
                            }
                        })
                    }

                    self.Headers = Headers
                    self.Request = Request
                    self.Response = Response

                    self.fetch = function(input, init) {
                        return new Promise(function(resolve, reject) {
                            var request = new Request(input, init)
                            var xhr = new XMLHttpRequest()

                            xhr.onload = function() {
                                var options = {
                                    status: xhr.status,
                                    statusText: xhr.statusText,
                                    headers: parseHeaders(xhr.getAllResponseHeaders() || '')
                                }
                                options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')
                                var body = 'response' in xhr ? xhr.response : xhr.responseText
                                resolve(new Response(body, options))
                            }

                            xhr.onerror = function() {
                                reject(new TypeError('Network request failed'))
                            }

                            xhr.ontimeout = function() {
                                reject(new TypeError('Network request failed'))
                            }

                            xhr.open(request.method, request.url, true)

                            if (request.credentials === 'include') {
                                xhr.withCredentials = true
                            }

                            if ('responseType' in xhr && support.blob) {
                                xhr.responseType = 'blob'
                            }

                            request.headers.forEach(function(value, name) {
                                xhr.setRequestHeader(name, value)
                            })

                            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)
                        })
                    }
                    self.fetch.polyfill = true
                })(typeof self !== 'undefined' ? self : this);

                /* WEBPACK VAR INJECTION */
            }.call(exports, __webpack_require__(44)))

            /***/
        },
        /* 44 */
        /***/
        function(module, exports, __webpack_require__) {

            var require; /* WEBPACK VAR INJECTION */
            (function(process, Promise, global) {
                /*!
                 * @overview es6-promise - a tiny implementation of Promises/A+.
                 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
                 * @license   Licensed under MIT license
                 *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
                 * @version   4.1.0
                 */

                (function(global, factory) {
                    true ? module.exports = factory() :
                        typeof define === 'function' && define.amd ? define(factory) :
                        (global.ES6Promise = factory());
                }(this, (function() {
                    'use strict';

                    function objectOrFunction(x) {
                        return typeof x === 'function' || typeof x === 'object' && x !== null;
                    }

                    function isFunction(x) {
                        return typeof x === 'function';
                    }

                    var _isArray = undefined;
                    if (!Array.isArray) {
                        _isArray = function(x) {
                            return Object.prototype.toString.call(x) === '[object Array]';
                        };
                    } else {
                        _isArray = Array.isArray;
                    }

                    var isArray = _isArray;

                    var len = 0;
                    var vertxNext = undefined;
                    var customSchedulerFn = undefined;

                    var asap = function asap(callback, arg) {
                        queue[len] = callback;
                        queue[len + 1] = arg;
                        len += 2;
                        if (len === 2) {
                            // If len is 2, that means that we need to schedule an async flush.
                            // If additional callbacks are queued before the queue is flushed, they
                            // will be processed by this flush that we are scheduling.
                            if (customSchedulerFn) {
                                customSchedulerFn(flush);
                            } else {
                                scheduleFlush();
                            }
                        }
                    };

                    function setScheduler(scheduleFn) {
                        customSchedulerFn = scheduleFn;
                    }

                    function setAsap(asapFn) {
                        asap = asapFn;
                    }

                    var browserWindow = typeof window !== 'undefined' ? window : undefined;
                    var browserGlobal = browserWindow || {};
                    var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;
                    var isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';

                    // test for web worker but not in IE10
                    var isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';

                    // node
                    function useNextTick() {
                        // node version 0.10.x displays a deprecation warning when nextTick is used recursively
                        // see https://github.com/cujojs/when/issues/410 for details
                        return function() {
                            return process.nextTick(flush);
                        };
                    }

                    // vertx
                    function useVertxTimer() {
                        if (typeof vertxNext !== 'undefined') {
                            return function() {
                                vertxNext(flush);
                            };
                        }

                        return useSetTimeout();
                    }

                    function useMutationObserver() {
                        var iterations = 0;
                        var observer = new BrowserMutationObserver(flush);
                        var node = document.createTextNode('');
                        observer.observe(node, {
                            characterData: true
                        });

                        return function() {
                            node.data = iterations = ++iterations % 2;
                        };
                    }

                    // web worker
                    function useMessageChannel() {
                        var channel = new MessageChannel();
                        channel.port1.onmessage = flush;
                        return function() {
                            return channel.port2.postMessage(0);
                        };
                    }

                    function useSetTimeout() {
                        // Store setTimeout reference so es6-promise will be unaffected by
                        // other code modifying setTimeout (like sinon.useFakeTimers())
                        var globalSetTimeout = setTimeout;
                        return function() {
                            return globalSetTimeout(flush, 1);
                        };
                    }

                    var queue = new Array(1000);

                    function flush() {
                        for (var i = 0; i < len; i += 2) {
                            var callback = queue[i];
                            var arg = queue[i + 1];

                            callback(arg);

                            queue[i] = undefined;
                            queue[i + 1] = undefined;
                        }

                        len = 0;
                    }

                    function attemptVertx() {
                        try {
                            var r = require;
                            var vertx = __webpack_require__(46);
                            vertxNext = vertx.runOnLoop || vertx.runOnContext;
                            return useVertxTimer();
                        } catch (e) {
                            return useSetTimeout();
                        }
                    }

                    var scheduleFlush = undefined;
                    // Decide what async method to use to triggering processing of queued callbacks:
                    if (isNode) {
                        scheduleFlush = useNextTick();
                    } else if (BrowserMutationObserver) {
                        scheduleFlush = useMutationObserver();
                    } else if (isWorker) {
                        scheduleFlush = useMessageChannel();
                    } else if (browserWindow === undefined && "function" === 'function') {
                        scheduleFlush = attemptVertx();
                    } else {
                        scheduleFlush = useSetTimeout();
                    }

                    function then(onFulfillment, onRejection) {
                        var _arguments = arguments;

                        var parent = this;

                        var child = new this.constructor(noop);

                        if (child[PROMISE_ID] === undefined) {
                            makePromise(child);
                        }

                        var _state = parent._state;

                        if (_state) {
                            (function() {
                                var callback = _arguments[_state - 1];
                                asap(function() {
                                    return invokeCallback(_state, child, callback, parent._result);
                                });
                            })();
                        } else {
                            subscribe(parent, child, onFulfillment, onRejection);
                        }

                        return child;
                    }

                    /**
                      `Promise.resolve` returns a promise that will become resolved with the
                      passed `value`. It is shorthand for the following:
	
                      ```javascript
                      let promise = new Promise(function(resolve, reject){
                        resolve(1);
                      });
	
                      promise.then(function(value){
                        // value === 1
                      });
                      ```
	
                      Instead of writing the above, your code now simply becomes the following:
	
                      ```javascript
                      let promise = Promise.resolve(1);
	
                      promise.then(function(value){
                        // value === 1
                      });
                      ```
	
                      @method resolve
                      @static
                      @param {Any} value value that the returned promise will be resolved with
                      Useful for tooling.
                      @return {Promise} a promise that will become fulfilled with the given
                      `value`
                    */
                    function resolve(object) {
                        /*jshint validthis:true */
                        var Constructor = this;

                        if (object && typeof object === 'object' && object.constructor === Constructor) {
                            return object;
                        }

                        var promise = new Constructor(noop);
                        _resolve(promise, object);
                        return promise;
                    }

                    var PROMISE_ID = Math.random().toString(36).substring(16);

                    function noop() {}

                    var PENDING = void 0;
                    var FULFILLED = 1;
                    var REJECTED = 2;

                    var GET_THEN_ERROR = new ErrorObject();

                    function selfFulfillment() {
                        return new TypeError("You cannot resolve a promise with itself");
                    }

                    function cannotReturnOwn() {
                        return new TypeError('A promises callback cannot return that same promise.');
                    }

                    function getThen(promise) {
                        try {
                            return promise.then;
                        } catch (error) {
                            GET_THEN_ERROR.error = error;
                            return GET_THEN_ERROR;
                        }
                    }

                    function tryThen(then, value, fulfillmentHandler, rejectionHandler) {
                        try {
                            then.call(value, fulfillmentHandler, rejectionHandler);
                        } catch (e) {
                            return e;
                        }
                    }

                    function handleForeignThenable(promise, thenable, then) {
                        asap(function(promise) {
                            var sealed = false;
                            var error = tryThen(then, thenable, function(value) {
                                if (sealed) {
                                    return;
                                }
                                sealed = true;
                                if (thenable !== value) {
                                    _resolve(promise, value);
                                } else {
                                    fulfill(promise, value);
                                }
                            }, function(reason) {
                                if (sealed) {
                                    return;
                                }
                                sealed = true;

                                _reject(promise, reason);
                            }, 'Settle: ' + (promise._label || ' unknown promise'));

                            if (!sealed && error) {
                                sealed = true;
                                _reject(promise, error);
                            }
                        }, promise);
                    }

                    function handleOwnThenable(promise, thenable) {
                        if (thenable._state === FULFILLED) {
                            fulfill(promise, thenable._result);
                        } else if (thenable._state === REJECTED) {
                            _reject(promise, thenable._result);
                        } else {
                            subscribe(thenable, undefined, function(value) {
                                return _resolve(promise, value);
                            }, function(reason) {
                                return _reject(promise, reason);
                            });
                        }
                    }

                    function handleMaybeThenable(promise, maybeThenable, then$$) {
                        if (maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve) {
                            handleOwnThenable(promise, maybeThenable);
                        } else {
                            if (then$$ === GET_THEN_ERROR) {
                                _reject(promise, GET_THEN_ERROR.error);
                                GET_THEN_ERROR.error = null;
                            } else if (then$$ === undefined) {
                                fulfill(promise, maybeThenable);
                            } else if (isFunction(then$$)) {
                                handleForeignThenable(promise, maybeThenable, then$$);
                            } else {
                                fulfill(promise, maybeThenable);
                            }
                        }
                    }

                    function _resolve(promise, value) {
                        if (promise === value) {
                            _reject(promise, selfFulfillment());
                        } else if (objectOrFunction(value)) {
                            handleMaybeThenable(promise, value, getThen(value));
                        } else {
                            fulfill(promise, value);
                        }
                    }

                    function publishRejection(promise) {
                        if (promise._onerror) {
                            promise._onerror(promise._result);
                        }

                        publish(promise);
                    }

                    function fulfill(promise, value) {
                        if (promise._state !== PENDING) {
                            return;
                        }

                        promise._result = value;
                        promise._state = FULFILLED;

                        if (promise._subscribers.length !== 0) {
                            asap(publish, promise);
                        }
                    }

                    function _reject(promise, reason) {
                        if (promise._state !== PENDING) {
                            return;
                        }
                        promise._state = REJECTED;
                        promise._result = reason;

                        asap(publishRejection, promise);
                    }

                    function subscribe(parent, child, onFulfillment, onRejection) {
                        var _subscribers = parent._subscribers;
                        var length = _subscribers.length;

                        parent._onerror = null;

                        _subscribers[length] = child;
                        _subscribers[length + FULFILLED] = onFulfillment;
                        _subscribers[length + REJECTED] = onRejection;

                        if (length === 0 && parent._state) {
                            asap(publish, parent);
                        }
                    }

                    function publish(promise) {
                        var subscribers = promise._subscribers;
                        var settled = promise._state;

                        if (subscribers.length === 0) {
                            return;
                        }

                        var child = undefined,
                            callback = undefined,
                            detail = promise._result;

                        for (var i = 0; i < subscribers.length; i += 3) {
                            child = subscribers[i];
                            callback = subscribers[i + settled];

                            if (child) {
                                invokeCallback(settled, child, callback, detail);
                            } else {
                                callback(detail);
                            }
                        }

                        promise._subscribers.length = 0;
                    }

                    function ErrorObject() {
                        this.error = null;
                    }

                    var TRY_CATCH_ERROR = new ErrorObject();

                    function tryCatch(callback, detail) {
                        try {
                            return callback(detail);
                        } catch (e) {
                            TRY_CATCH_ERROR.error = e;
                            return TRY_CATCH_ERROR;
                        }
                    }

                    function invokeCallback(settled, promise, callback, detail) {
                        var hasCallback = isFunction(callback),
                            value = undefined,
                            error = undefined,
                            succeeded = undefined,
                            failed = undefined;

                        if (hasCallback) {
                            value = tryCatch(callback, detail);

                            if (value === TRY_CATCH_ERROR) {
                                failed = true;
                                error = value.error;
                                value.error = null;
                            } else {
                                succeeded = true;
                            }

                            if (promise === value) {
                                _reject(promise, cannotReturnOwn());
                                return;
                            }
                        } else {
                            value = detail;
                            succeeded = true;
                        }

                        if (promise._state !== PENDING) {
                            // noop
                        } else if (hasCallback && succeeded) {
                            _resolve(promise, value);
                        } else if (failed) {
                            _reject(promise, error);
                        } else if (settled === FULFILLED) {
                            fulfill(promise, value);
                        } else if (settled === REJECTED) {
                            _reject(promise, value);
                        }
                    }

                    function initializePromise(promise, resolver) {
                        try {
                            resolver(function resolvePromise(value) {
                                _resolve(promise, value);
                            }, function rejectPromise(reason) {
                                _reject(promise, reason);
                            });
                        } catch (e) {
                            _reject(promise, e);
                        }
                    }

                    var id = 0;

                    function nextId() {
                        return id++;
                    }

                    function makePromise(promise) {
                        promise[PROMISE_ID] = id++;
                        promise._state = undefined;
                        promise._result = undefined;
                        promise._subscribers = [];
                    }

                    function Enumerator(Constructor, input) {
                        this._instanceConstructor = Constructor;
                        this.promise = new Constructor(noop);

                        if (!this.promise[PROMISE_ID]) {
                            makePromise(this.promise);
                        }

                        if (isArray(input)) {
                            this._input = input;
                            this.length = input.length;
                            this._remaining = input.length;

                            this._result = new Array(this.length);

                            if (this.length === 0) {
                                fulfill(this.promise, this._result);
                            } else {
                                this.length = this.length || 0;
                                this._enumerate();
                                if (this._remaining === 0) {
                                    fulfill(this.promise, this._result);
                                }
                            }
                        } else {
                            _reject(this.promise, validationError());
                        }
                    }

                    function validationError() {
                        return new Error('Array Methods must be provided an Array');
                    };

                    Enumerator.prototype._enumerate = function() {
                        var length = this.length;
                        var _input = this._input;

                        for (var i = 0; this._state === PENDING && i < length; i++) {
                            this._eachEntry(_input[i], i);
                        }
                    };

                    Enumerator.prototype._eachEntry = function(entry, i) {
                        var c = this._instanceConstructor;
                        var resolve$$ = c.resolve;

                        if (resolve$$ === resolve) {
                            var _then = getThen(entry);

                            if (_then === then && entry._state !== PENDING) {
                                this._settledAt(entry._state, i, entry._result);
                            } else if (typeof _then !== 'function') {
                                this._remaining--;
                                this._result[i] = entry;
                            } else if (c === Promise) {
                                var promise = new c(noop);
                                handleMaybeThenable(promise, entry, _then);
                                this._willSettleAt(promise, i);
                            } else {
                                this._willSettleAt(new c(function(resolve$$) {
                                    return resolve$$(entry);
                                }), i);
                            }
                        } else {
                            this._willSettleAt(resolve$$(entry), i);
                        }
                    };

                    Enumerator.prototype._settledAt = function(state, i, value) {
                        var promise = this.promise;

                        if (promise._state === PENDING) {
                            this._remaining--;

                            if (state === REJECTED) {
                                _reject(promise, value);
                            } else {
                                this._result[i] = value;
                            }
                        }

                        if (this._remaining === 0) {
                            fulfill(promise, this._result);
                        }
                    };

                    Enumerator.prototype._willSettleAt = function(promise, i) {
                        var enumerator = this;

                        subscribe(promise, undefined, function(value) {
                            return enumerator._settledAt(FULFILLED, i, value);
                        }, function(reason) {
                            return enumerator._settledAt(REJECTED, i, reason);
                        });
                    };

                    /**
                      `Promise.all` accepts an array of promises, and returns a new promise which
                      is fulfilled with an array of fulfillment values for the passed promises, or
                      rejected with the reason of the first passed promise to be rejected. It casts all
                      elements of the passed iterable to promises as it runs this algorithm.
	
                      Example:
	
                      ```javascript
                      let promise1 = resolve(1);
                      let promise2 = resolve(2);
                      let promise3 = resolve(3);
                      let promises = [ promise1, promise2, promise3 ];
	
                      Promise.all(promises).then(function(array){
                        // The array here would be [ 1, 2, 3 ];
                      });
                      ```
	
                      If any of the `promises` given to `all` are rejected, the first promise
                      that is rejected will be given as an argument to the returned promises's
                      rejection handler. For example:
	
                      Example:
	
                      ```javascript
                      let promise1 = resolve(1);
                      let promise2 = reject(new Error("2"));
                      let promise3 = reject(new Error("3"));
                      let promises = [ promise1, promise2, promise3 ];
	
                      Promise.all(promises).then(function(array){
                        // Code here never runs because there are rejected promises!
                      }, function(error) {
                        // error.message === "2"
                      });
                      ```
	
                      @method all
                      @static
                      @param {Array} entries array of promises
                      @param {String} label optional string for labeling the promise.
                      Useful for tooling.
                      @return {Promise} promise that is fulfilled when all `promises` have been
                      fulfilled, or rejected if any of them become rejected.
                      @static
                    */
                    function all(entries) {
                        return new Enumerator(this, entries).promise;
                    }

                    /**
                      `Promise.race` returns a new promise which is settled in the same way as the
                      first passed promise to settle.
	
                      Example:
	
                      ```javascript
                      let promise1 = new Promise(function(resolve, reject){
                        setTimeout(function(){
                          resolve('promise 1');
                        }, 200);
                      });
	
                      let promise2 = new Promise(function(resolve, reject){
                        setTimeout(function(){
                          resolve('promise 2');
                        }, 100);
                      });
	
                      Promise.race([promise1, promise2]).then(function(result){
                        // result === 'promise 2' because it was resolved before promise1
                        // was resolved.
                      });
                      ```
	
                      `Promise.race` is deterministic in that only the state of the first
                      settled promise matters. For example, even if other promises given to the
                      `promises` array argument are resolved, but the first settled promise has
                      become rejected before the other promises became fulfilled, the returned
                      promise will become rejected:
	
                      ```javascript
                      let promise1 = new Promise(function(resolve, reject){
                        setTimeout(function(){
                          resolve('promise 1');
                        }, 200);
                      });
	
                      let promise2 = new Promise(function(resolve, reject){
                        setTimeout(function(){
                          reject(new Error('promise 2'));
                        }, 100);
                      });
	
                      Promise.race([promise1, promise2]).then(function(result){
                        // Code here never runs
                      }, function(reason){
                        // reason.message === 'promise 2' because promise 2 became rejected before
                        // promise 1 became fulfilled
                      });
                      ```
	
                      An example real-world use case is implementing timeouts:
	
                      ```javascript
                      Promise.race([ajax('foo.json'), timeout(5000)])
                      ```
	
                      @method race
                      @static
                      @param {Array} promises array of promises to observe
                      Useful for tooling.
                      @return {Promise} a promise which settles in the same way as the first passed
                      promise to settle.
                    */
                    function race(entries) {
                        /*jshint validthis:true */
                        var Constructor = this;

                        if (!isArray(entries)) {
                            return new Constructor(function(_, reject) {
                                return reject(new TypeError('You must pass an array to race.'));
                            });
                        } else {
                            return new Constructor(function(resolve, reject) {
                                var length = entries.length;
                                for (var i = 0; i < length; i++) {
                                    Constructor.resolve(entries[i]).then(resolve, reject);
                                }
                            });
                        }
                    }

                    /**
                      `Promise.reject` returns a promise rejected with the passed `reason`.
                      It is shorthand for the following:
	
                      ```javascript
                      let promise = new Promise(function(resolve, reject){
                        reject(new Error('WHOOPS'));
                      });
	
                      promise.then(function(value){
                        // Code here doesn't run because the promise is rejected!
                      }, function(reason){
                        // reason.message === 'WHOOPS'
                      });
                      ```
	
                      Instead of writing the above, your code now simply becomes the following:
	
                      ```javascript
                      let promise = Promise.reject(new Error('WHOOPS'));
	
                      promise.then(function(value){
                        // Code here doesn't run because the promise is rejected!
                      }, function(reason){
                        // reason.message === 'WHOOPS'
                      });
                      ```
	
                      @method reject
                      @static
                      @param {Any} reason value that the returned promise will be rejected with.
                      Useful for tooling.
                      @return {Promise} a promise rejected with the given `reason`.
                    */
                    function reject(reason) {
                        /*jshint validthis:true */
                        var Constructor = this;
                        var promise = new Constructor(noop);
                        _reject(promise, reason);
                        return promise;
                    }

                    function needsResolver() {
                        throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');
                    }

                    function needsNew() {
                        throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
                    }

                    /**
                      Promise objects represent the eventual result of an asynchronous operation. The
                      primary way of interacting with a promise is through its `then` method, which
                      registers callbacks to receive either a promise's eventual value or the reason
                      why the promise cannot be fulfilled.
	
                      Terminology
                      -----------
	
                      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.
                      - `thenable` is an object or function that defines a `then` method.
                      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).
                      - `exception` is a value that is thrown using the throw statement.
                      - `reason` is a value that indicates why a promise was rejected.
                      - `settled` the final resting state of a promise, fulfilled or rejected.
	
                      A promise can be in one of three states: pending, fulfilled, or rejected.
	
                      Promises that are fulfilled have a fulfillment value and are in the fulfilled
                      state.  Promises that are rejected have a rejection reason and are in the
                      rejected state.  A fulfillment value is never a thenable.
	
                      Promises can also be said to *resolve* a value.  If this value is also a
                      promise, then the original promise's settled state will match the value's
                      settled state.  So a promise that *resolves* a promise that rejects will
                      itself reject, and a promise that *resolves* a promise that fulfills will
                      itself fulfill.
	
	
                      Basic Usage:
                      ------------
	
                      ```js
                      let promise = new Promise(function(resolve, reject) {
                        // on success
                        resolve(value);
	
                        // on failure
                        reject(reason);
                      });
	
                      promise.then(function(value) {
                        // on fulfillment
                      }, function(reason) {
                        // on rejection
                      });
                      ```
	
                      Advanced Usage:
                      ---------------
	
                      Promises shine when abstracting away asynchronous interactions such as
                      `XMLHttpRequest`s.
	
                      ```js
                      function getJSON(url) {
                        return new Promise(function(resolve, reject){
                          let xhr = new XMLHttpRequest();
	
                          xhr.open('GET', url);
                          xhr.onreadystatechange = handler;
                          xhr.responseType = 'json';
                          xhr.setRequestHeader('Accept', 'application/json');
                          xhr.send();
	
                          function handler() {
                            if (this.readyState === this.DONE) {
                              if (this.status === 200) {
                                resolve(this.response);
                              } else {
                                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));
                              }
                            }
                          };
                        });
                      }
	
                      getJSON('/posts.json').then(function(json) {
                        // on fulfillment
                      }, function(reason) {
                        // on rejection
                      });
                      ```
	
                      Unlike callbacks, promises are great composable primitives.
	
                      ```js
                      Promise.all([
                        getJSON('/posts'),
                        getJSON('/comments')
                      ]).then(function(values){
                        values[0] // => postsJSON
                        values[1] // => commentsJSON
	
                        return values;
                      });
                      ```
	
                      @class Promise
                      @param {function} resolver
                      Useful for tooling.
                      @constructor
                    */
                    function Promise(resolver) {
                        this[PROMISE_ID] = nextId();
                        this._result = this._state = undefined;
                        this._subscribers = [];

                        if (noop !== resolver) {
                            typeof resolver !== 'function' && needsResolver();
                            this instanceof Promise ? initializePromise(this, resolver) : needsNew();
                        }
                    }

                    Promise.all = all;
                    Promise.race = race;
                    Promise.resolve = resolve;
                    Promise.reject = reject;
                    Promise._setScheduler = setScheduler;
                    Promise._setAsap = setAsap;
                    Promise._asap = asap;

                    Promise.prototype = {
                        constructor: Promise,

                        /**
                          The primary way of interacting with a promise is through its `then` method,
                          which registers callbacks to receive either a promise's eventual value or the
                          reason why the promise cannot be fulfilled.
	  
                          ```js
                          findUser().then(function(user){
                            // user is available
                          }, function(reason){
                            // user is unavailable, and you are given the reason why
                          });
                          ```
	  
                          Chaining
                          --------
	  
                          The return value of `then` is itself a promise.  This second, 'downstream'
                          promise is resolved with the return value of the first promise's fulfillment
                          or rejection handler, or rejected if the handler throws an exception.
	  
                          ```js
                          findUser().then(function (user) {
                            return user.name;
                          }, function (reason) {
                            return 'default name';
                          }).then(function (userName) {
                            // If `findUser` fulfilled, `userName` will be the user's name, otherwise it
                            // will be `'default name'`
                          });
	  
                          findUser().then(function (user) {
                            throw new Error('Found user, but still unhappy');
                          }, function (reason) {
                            throw new Error('`findUser` rejected and we're unhappy');
                          }).then(function (value) {
                            // never reached
                          }, function (reason) {
                            // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.
                            // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.
                          });
                          ```
                          If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.
	  
                          ```js
                          findUser().then(function (user) {
                            throw new PedagogicalException('Upstream error');
                          }).then(function (value) {
                            // never reached
                          }).then(function (value) {
                            // never reached
                          }, function (reason) {
                            // The `PedgagocialException` is propagated all the way down to here
                          });
                          ```
	  
                          Assimilation
                          ------------
	  
                          Sometimes the value you want to propagate to a downstream promise can only be
                          retrieved asynchronously. This can be achieved by returning a promise in the
                          fulfillment or rejection handler. The downstream promise will then be pending
                          until the returned promise is settled. This is called *assimilation*.
	  
                          ```js
                          findUser().then(function (user) {
                            return findCommentsByAuthor(user);
                          }).then(function (comments) {
                            // The user's comments are now available
                          });
                          ```
	  
                          If the assimliated promise rejects, then the downstream promise will also reject.
	  
                          ```js
                          findUser().then(function (user) {
                            return findCommentsByAuthor(user);
                          }).then(function (comments) {
                            // If `findCommentsByAuthor` fulfills, we'll have the value here
                          }, function (reason) {
                            // If `findCommentsByAuthor` rejects, we'll have the reason here
                          });
                          ```
	  
                          Simple Example
                          --------------
	  
                          Synchronous Example
	  
                          ```javascript
                          let result;
	  
                          try {
                            result = findResult();
                            // success
                          } catch(reason) {
                            // failure
                          }
                          ```
	  
                          Errback Example
	  
                          ```js
                          findResult(function(result, err){
                            if (err) {
                              // failure
                            } else {
                              // success
                            }
                          });
                          ```
	  
                          Promise Example;
	  
                          ```javascript
                          findResult().then(function(result){
                            // success
                          }, function(reason){
                            // failure
                          });
                          ```
	  
                          Advanced Example
                          --------------
	  
                          Synchronous Example
	  
                          ```javascript
                          let author, books;
	  
                          try {
                            author = findAuthor();
                            books  = findBooksByAuthor(author);
                            // success
                          } catch(reason) {
                            // failure
                          }
                          ```
	  
                          Errback Example
	  
                          ```js
	  
                          function foundBooks(books) {
	  
                          }
	  
                          function failure(reason) {
	  
                          }
	  
                          findAuthor(function(author, err){
                            if (err) {
                              failure(err);
                              // failure
                            } else {
                              try {
                                findBoooksByAuthor(author, function(books, err) {
                                  if (err) {
                                    failure(err);
                                  } else {
                                    try {
                                      foundBooks(books);
                                    } catch(reason) {
                                      failure(reason);
                                    }
                                  }
                                });
                              } catch(error) {
                                failure(err);
                              }
                              // success
                            }
                          });
                          ```
	  
                          Promise Example;
	  
                          ```javascript
                          findAuthor().
                            then(findBooksByAuthor).
                            then(function(books){
                              // found books
                          }).catch(function(reason){
                            // something went wrong
                          });
                          ```
	  
                          @method then
                          @param {Function} onFulfilled
                          @param {Function} onRejected
                          Useful for tooling.
                          @return {Promise}
                        */
                        then: then,

                        /**
                          `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same
                          as the catch block of a try/catch statement.
	  
                          ```js
                          function findAuthor(){
                            throw new Error('couldn't find that author');
                          }
	  
                          // synchronous
                          try {
                            findAuthor();
                          } catch(reason) {
                            // something went wrong
                          }
	  
                          // async with promises
                          findAuthor().catch(function(reason){
                            // something went wrong
                          });
                          ```
	  
                          @method catch
                          @param {Function} onRejection
                          Useful for tooling.
                          @return {Promise}
                        */
                        'catch': function _catch(onRejection) {
                            return this.then(null, onRejection);
                        }
                    };

                    function polyfill() {
                        var local = undefined;

                        if (typeof global !== 'undefined') {
                            local = global;
                        } else if (typeof self !== 'undefined') {
                            local = self;
                        } else {
                            try {
                                local = Function('return this')();
                            } catch (e) {
                                throw new Error('polyfill failed because global object is unavailable in this environment');
                            }
                        }

                        var P = local.Promise;

                        if (P) {
                            var promiseToString = null;
                            try {
                                promiseToString = Object.prototype.toString.call(P.resolve());
                            } catch (e) {
                                // silently ignored
                            }

                            if (promiseToString === '[object Promise]' && !P.cast) {
                                return;
                            }
                        }

                        local.Promise = Promise;
                    }

                    // Strange compat..
                    Promise.polyfill = polyfill;
                    Promise.Promise = Promise;

                    return Promise;

                })));
                //# sourceMappingURL=es6-promise.map

                /* WEBPACK VAR INJECTION */
            }.call(exports, __webpack_require__(45), __webpack_require__(44), (function() {
                return this;
            }())))

            /***/
        },
        /* 45 */
        /***/
        function(module, exports) {

            // shim for using process in browser
            var process = module.exports = {};

            // cached from whatever global is present so that test runners that stub it
            // don't break things.  But we need to wrap it in a try catch in case it is
            // wrapped in strict mode code which doesn't define any globals.  It's inside a
            // function because try/catches deoptimize in certain engines.

            var cachedSetTimeout;
            var cachedClearTimeout;

            function defaultSetTimout() {
                throw new Error('setTimeout has not been defined');
            }

            function defaultClearTimeout() {
                throw new Error('clearTimeout has not been defined');
            }
            (function() {
                try {
                    if (typeof setTimeout === 'function') {
                        cachedSetTimeout = setTimeout;
                    } else {
                        cachedSetTimeout = defaultSetTimout;
                    }
                } catch (e) {
                    cachedSetTimeout = defaultSetTimout;
                }
                try {
                    if (typeof clearTimeout === 'function') {
                        cachedClearTimeout = clearTimeout;
                    } else {
                        cachedClearTimeout = defaultClearTimeout;
                    }
                } catch (e) {
                    cachedClearTimeout = defaultClearTimeout;
                }
            }())

            function runTimeout(fun) {
                if (cachedSetTimeout === setTimeout) {
                    //normal enviroments in sane situations
                    return setTimeout(fun, 0);
                }
                // if setTimeout wasn't available but was latter defined
                if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
                    cachedSetTimeout = setTimeout;
                    return setTimeout(fun, 0);
                }
                try {
                    // when when somebody has screwed with setTimeout but no I.E. maddness
                    return cachedSetTimeout(fun, 0);
                } catch (e) {
                    try {
                        // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
                        return cachedSetTimeout.call(null, fun, 0);
                    } catch (e) {
                        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
                        return cachedSetTimeout.call(this, fun, 0);
                    }
                }


            }

            function runClearTimeout(marker) {
                if (cachedClearTimeout === clearTimeout) {
                    //normal enviroments in sane situations
                    return clearTimeout(marker);
                }
                // if clearTimeout wasn't available but was latter defined
                if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
                    cachedClearTimeout = clearTimeout;
                    return clearTimeout(marker);
                }
                try {
                    // when when somebody has screwed with setTimeout but no I.E. maddness
                    return cachedClearTimeout(marker);
                } catch (e) {
                    try {
                        // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
                        return cachedClearTimeout.call(null, marker);
                    } catch (e) {
                        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
                        // Some versions of I.E. have different rules for clearTimeout vs setTimeout
                        return cachedClearTimeout.call(this, marker);
                    }
                }



            }
            var queue = [];
            var draining = false;
            var currentQueue;
            var queueIndex = -1;

            function cleanUpNextTick() {
                if (!draining || !currentQueue) {
                    return;
                }
                draining = false;
                if (currentQueue.length) {
                    queue = currentQueue.concat(queue);
                } else {
                    queueIndex = -1;
                }
                if (queue.length) {
                    drainQueue();
                }
            }

            function drainQueue() {
                if (draining) {
                    return;
                }
                var timeout = runTimeout(cleanUpNextTick);
                draining = true;

                var len = queue.length;
                while (len) {
                    currentQueue = queue;
                    queue = [];
                    while (++queueIndex < len) {
                        if (currentQueue) {
                            currentQueue[queueIndex].run();
                        }
                    }
                    queueIndex = -1;
                    len = queue.length;
                }
                currentQueue = null;
                draining = false;
                runClearTimeout(timeout);
            }

            process.nextTick = function(fun) {
                var args = new Array(arguments.length - 1);
                if (arguments.length > 1) {
                    for (var i = 1; i < arguments.length; i++) {
                        args[i - 1] = arguments[i];
                    }
                }
                queue.push(new Item(fun, args));
                if (queue.length === 1 && !draining) {
                    runTimeout(drainQueue);
                }
            };

            // v8 likes predictible objects
            function Item(fun, array) {
                this.fun = fun;
                this.array = array;
            }
            Item.prototype.run = function() {
                this.fun.apply(null, this.array);
            };
            process.title = 'browser';
            process.browser = true;
            process.env = {};
            process.argv = [];
            process.version = ''; // empty string to avoid regexp issues
            process.versions = {};

            function noop() {}

            process.on = noop;
            process.addListener = noop;
            process.once = noop;
            process.off = noop;
            process.removeListener = noop;
            process.removeAllListeners = noop;
            process.emit = noop;

            process.binding = function(name) {
                throw new Error('process.binding is not supported');
            };

            process.cwd = function() {
                return '/'
            };
            process.chdir = function(dir) {
                throw new Error('process.chdir is not supported');
            };
            process.umask = function() {
                return 0;
            };


            /***/
        },
        /* 46 */
        /***/
        function(module, exports) {

            /* (ignored) */

            /***/
        },
        /* 47 */
        /***/
        function(module, exports, __webpack_require__) {

            module.exports = {
                "default": __webpack_require__(48),
                __esModule: true
            };

            /***/
        },
        /* 48 */
        /***/
        function(module, exports, __webpack_require__) {

            __webpack_require__(49);
            module.exports = __webpack_require__(9).Object.keys;

            /***/
        },
        /* 49 */
        /***/
        function(module, exports, __webpack_require__) {

            // 19.1.2.14 Object.keys(O)
            var toObject = __webpack_require__(40),
                $keys = __webpack_require__(23);

            __webpack_require__(50)('keys', function() {
                return function keys(it) {
                    return $keys(toObject(it));
                };
            });

            /***/
        },
        /* 50 */
        /***/
        function(module, exports, __webpack_require__) {

            // most Object methods by ES6 should accept primitives
            var $export = __webpack_require__(7),
                core = __webpack_require__(9),
                fails = __webpack_require__(18);
            module.exports = function(KEY, exec) {
                var fn = (core.Object || {})[KEY] || Object[KEY],
                    exp = {};
                exp[KEY] = exec(fn);
                $export($export.S + $export.F * fails(function() {
                    fn(1);
                }), 'Object', exp);
            };

            /***/
        },
        /* 51 */
        /***/
        function(module, exports, __webpack_require__) {

            "use strict";

            exports.__esModule = true;

            var _iterator = __webpack_require__(52);

            var _iterator2 = _interopRequireDefault(_iterator);

            var _symbol = __webpack_require__(72);

            var _symbol2 = _interopRequireDefault(_symbol);

            var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function(obj) {
                return typeof obj;
            } : function(obj) {
                return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj;
            };

            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default: obj
                };
            }

            exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function(obj) {
                return typeof obj === "undefined" ? "undefined" : _typeof(obj);
            } : function(obj) {
                return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
            };

            /***/
        },
        /* 52 */
        /***/
        function(module, exports, __webpack_require__) {

            module.exports = {
                "default": __webpack_require__(53),
                __esModule: true
            };

            /***/
        },
        /* 53 */
        /***/
        function(module, exports, __webpack_require__) {

            __webpack_require__(54);
            __webpack_require__(67);
            module.exports = __webpack_require__(71).f('iterator');

            /***/
        },
        /* 54 */
        /***/
        function(module, exports, __webpack_require__) {

            'use strict';
            var $at = __webpack_require__(55)(true);

            // 21.1.3.27 String.prototype[@@iterator]()
            __webpack_require__(56)(String, 'String', function(iterated) {
                this._t = String(iterated); // target
                this._i = 0; // next index
                // 21.1.5.2.1 %StringIteratorPrototype%.next()
            }, function() {
                var O = this._t,
                    index = this._i,
                    point;
                if (index >= O.length) return {
                    value: undefined,
                    done: true
                };
                point = $at(O, index);
                this._i += point.length;
                return {
                    value: point,
                    done: false
                };
            });

            /***/
        },
        /* 55 */
        /***/
        function(module, exports, __webpack_require__) {

            var toInteger = __webpack_require__(32),
                defined = __webpack_require__(29);
            // true  -> String#at
            // false -> String#codePointAt
            module.exports = function(TO_STRING) {
                return function(that, pos) {
                    var s = String(defined(that)),
                        i = toInteger(pos),
                        l = s.length,
                        a, b;
                    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
                    a = s.charCodeAt(i);
                    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ?
                        TO_STRING ? s.charAt(i) : a :
                        TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
                };
            };

            /***/
        },
        /* 56 */
        /***/
        function(module, exports, __webpack_require__) {

            'use strict';
            var LIBRARY = __webpack_require__(57),
                $export = __webpack_require__(7),
                redefine = __webpack_require__(58),
                hide = __webpack_require__(12),
                has = __webpack_require__(25),
                Iterators = __webpack_require__(59),
                $iterCreate = __webpack_require__(60),
                setToStringTag = __webpack_require__(64),
                getPrototypeOf = __webpack_require__(66),
                ITERATOR = __webpack_require__(65)('iterator'),
                BUGGY = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
                ,
                FF_ITERATOR = '@@iterator',
                KEYS = 'keys',
                VALUES = 'values';

            var returnThis = function() {
                return this;
            };

            module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
                $iterCreate(Constructor, NAME, next);
                var getMethod = function(kind) {
                    if (!BUGGY && kind in proto) return proto[kind];
                    switch (kind) {
                        case KEYS:
                            return function keys() {
                                return new Constructor(this, kind);
                            };
                        case VALUES:
                            return function values() {
                                return new Constructor(this, kind);
                            };
                    }
                    return function entries() {
                        return new Constructor(this, kind);
                    };
                };
                var TAG = NAME + ' Iterator',
                    DEF_VALUES = DEFAULT == VALUES,
                    VALUES_BUG = false,
                    proto = Base.prototype,
                    $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT],
                    $default = $native || getMethod(DEFAULT),
                    $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined,
                    $anyNative = NAME == 'Array' ? proto.entries || $native : $native,
                    methods, key, IteratorPrototype;
                // Fix native
                if ($anyNative) {
                    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
                    if (IteratorPrototype !== Object.prototype) {
                        // Set @@toStringTag to native iterators
                        setToStringTag(IteratorPrototype, TAG, true);
                        // fix for some old engines
                        if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);
                    }
                }
                // fix Array#{values, @@iterator}.name in V8 / FF
                if (DEF_VALUES && $native && $native.name !== VALUES) {
                    VALUES_BUG = true;
                    $default = function values() {
                        return $native.call(this);
                    };
                }
                // Define iterator
                if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
                    hide(proto, ITERATOR, $default);
                }
                // Plug for library
                Iterators[NAME] = $default;
                Iterators[TAG] = returnThis;
                if (DEFAULT) {
                    methods = {
                        values: DEF_VALUES ? $default : getMethod(VALUES),
                        keys: IS_SET ? $default : getMethod(KEYS),
                        entries: $entries
                    };
                    if (FORCED)
                        for (key in methods) {
                            if (!(key in proto)) redefine(proto, key, methods[key]);
                        } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
                }
                return methods;
            };

            /***/
        },
        /* 57 */
        /***/
        function(module, exports) {

            module.exports = true;

            /***/
        },
        /* 58 */
        /***/
        function(module, exports, __webpack_require__) {

            module.exports = __webpack_require__(12);

            /***/
        },
        /* 59 */
        /***/
        function(module, exports) {

            module.exports = {};

            /***/
        },
        /* 60 */
        /***/
        function(module, exports, __webpack_require__) {

            'use strict';
            var create = __webpack_require__(61),
                descriptor = __webpack_require__(21),
                setToStringTag = __webpack_require__(64),
                IteratorPrototype = {};

            // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
            __webpack_require__(12)(IteratorPrototype, __webpack_require__(65)('iterator'), function() {
                return this;
            });

            module.exports = function(Constructor, NAME, next) {
                Constructor.prototype = create(IteratorPrototype, {
                    next: descriptor(1, next)
                });
                setToStringTag(Constructor, NAME + ' Iterator');
            };

            /***/
        },
        /* 61 */
        /***/
        function(module, exports, __webpack_require__) {

            // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
            var anObject = __webpack_require__(14),
                dPs = __webpack_require__(62),
                enumBugKeys = __webpack_require__(37),
                IE_PROTO = __webpack_require__(34)('IE_PROTO'),
                Empty = function() { /* empty */ },
                PROTOTYPE = 'prototype';

            // Create object with fake `null` prototype: use iframe Object with cleared prototype
            var createDict = function() {
                // Thrash, waste and sodomy: IE GC bug
                var iframe = __webpack_require__(19)('iframe'),
                    i = enumBugKeys.length,
                    lt = '<',
                    gt = '>',
                    iframeDocument;
                iframe.style.display = 'none';
                __webpack_require__(63).appendChild(iframe);
                iframe.src = 'javascript:'; // eslint-disable-line no-script-url
                // createDict = iframe.contentWindow.Object;
                // html.removeChild(iframe);
                iframeDocument = iframe.contentWindow.document;
                iframeDocument.open();
                iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
                iframeDocument.close();
                createDict = iframeDocument.F;
                while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
                return createDict();
            };

            module.exports = Object.create || function create(O, Properties) {
                var result;
                if (O !== null) {
                    Empty[PROTOTYPE] = anObject(O);
                    result = new Empty;
                    Empty[PROTOTYPE] = null;
                    // add "__proto__" for Object.getPrototypeOf polyfill
                    result[IE_PROTO] = O;
                } else result = createDict();
                return Properties === undefined ? result : dPs(result, Properties);
            };


            /***/
        },
        /* 62 */
        /***/
        function(module, exports, __webpack_require__) {

            var dP = __webpack_require__(13),
                anObject = __webpack_require__(14),
                getKeys = __webpack_require__(23);

            module.exports = __webpack_require__(17) ? Object.defineProperties : function defineProperties(O, Properties) {
                anObject(O);
                var keys = getKeys(Properties),
                    length = keys.length,
                    i = 0,
                    P;
                while (length > i) dP.f(O, P = keys[i++], Properties[P]);
                return O;
            };

            /***/
        },
        /* 63 */
        /***/
        function(module, exports, __webpack_require__) {

            module.exports = __webpack_require__(8).document && document.documentElement;

            /***/
        },
        /* 64 */
        /***/
        function(module, exports, __webpack_require__) {

            var def = __webpack_require__(13).f,
                has = __webpack_require__(25),
                TAG = __webpack_require__(65)('toStringTag');

            module.exports = function(it, tag, stat) {
                if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {
                    configurable: true,
                    value: tag
                });
            };

            /***/
        },
        /* 65 */
        /***/
        function(module, exports, __webpack_require__) {

            var store = __webpack_require__(35)('wks'),
                uid = __webpack_require__(36),
                Symbol = __webpack_require__(8).Symbol,
                USE_SYMBOL = typeof Symbol == 'function';

            var $exports = module.exports = function(name) {
                return store[name] || (store[name] =
                    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
            };

            $exports.store = store;

            /***/
        },
        /* 66 */
        /***/
        function(module, exports, __webpack_require__) {

            // 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
            var has = __webpack_require__(25),
                toObject = __webpack_require__(40),
                IE_PROTO = __webpack_require__(34)('IE_PROTO'),
                ObjectProto = Object.prototype;

            module.exports = Object.getPrototypeOf || function(O) {
                O = toObject(O);
                if (has(O, IE_PROTO)) return O[IE_PROTO];
                if (typeof O.constructor == 'function' && O instanceof O.constructor) {
                    return O.constructor.prototype;
                }
                return O instanceof Object ? ObjectProto : null;
            };

            /***/
        },
        /* 67 */
        /***/
        function(module, exports, __webpack_require__) {

            __webpack_require__(68);
            var global = __webpack_require__(8),
                hide = __webpack_require__(12),
                Iterators = __webpack_require__(59),
                TO_STRING_TAG = __webpack_require__(65)('toStringTag');

            for (var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++) {
                var NAME = collections[i],
                    Collection = global[NAME],
                    proto = Collection && Collection.prototype;
                if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
                Iterators[NAME] = Iterators.Array;
            }

            /***/
        },
        /* 68 */
        /***/
        function(module, exports, __webpack_require__) {

            'use strict';
            var addToUnscopables = __webpack_require__(69),
                step = __webpack_require__(70),
                Iterators = __webpack_require__(59),
                toIObject = __webpack_require__(26);

            // 22.1.3.4 Array.prototype.entries()
            // 22.1.3.13 Array.prototype.keys()
            // 22.1.3.29 Array.prototype.values()
            // 22.1.3.30 Array.prototype[@@iterator]()
            module.exports = __webpack_require__(56)(Array, 'Array', function(iterated, kind) {
                this._t = toIObject(iterated); // target
                this._i = 0; // next index
                this._k = kind; // kind
                // 22.1.5.2.1 %ArrayIteratorPrototype%.next()
            }, function() {
                var O = this._t,
                    kind = this._k,
                    index = this._i++;
                if (!O || index >= O.length) {
                    this._t = undefined;
                    return step(1);
                }
                if (kind == 'keys') return step(0, index);
                if (kind == 'values') return step(0, O[index]);
                return step(0, [index, O[index]]);
            }, 'values');

            // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
            Iterators.Arguments = Iterators.Array;

            addToUnscopables('keys');
            addToUnscopables('values');
            addToUnscopables('entries');

            /***/
        },
        /* 69 */
        /***/
        function(module, exports) {

            module.exports = function() { /* empty */ };

            /***/
        },
        /* 70 */
        /***/
        function(module, exports) {

            module.exports = function(done, value) {
                return {
                    value: value,
                    done: !!done
                };
            };

            /***/
        },
        /* 71 */
        /***/
        function(module, exports, __webpack_require__) {

            exports.f = __webpack_require__(65);

            /***/
        },
        /* 72 */
        /***/
        function(module, exports, __webpack_require__) {

            module.exports = {
                "default": __webpack_require__(73),
                __esModule: true
            };

            /***/
        },
        /* 73 */
        /***/
        function(module, exports, __webpack_require__) {

            __webpack_require__(74);
            __webpack_require__(83);
            __webpack_require__(84);
            __webpack_require__(85);
            module.exports = __webpack_require__(9).Symbol;

            /***/
        },
        /* 74 */
        /***/
        function(module, exports, __webpack_require__) {

            'use strict';
            // ECMAScript 6 symbols shim
            var global = __webpack_require__(8),
                has = __webpack_require__(25),
                DESCRIPTORS = __webpack_require__(17),
                $export = __webpack_require__(7),
                redefine = __webpack_require__(58),
                META = __webpack_require__(75).KEY,
                $fails = __webpack_require__(18),
                shared = __webpack_require__(35),
                setToStringTag = __webpack_require__(64),
                uid = __webpack_require__(36),
                wks = __webpack_require__(65),
                wksExt = __webpack_require__(71),
                wksDefine = __webpack_require__(76),
                keyOf = __webpack_require__(77),
                enumKeys = __webpack_require__(78),
                isArray = __webpack_require__(79),
                anObject = __webpack_require__(14),
                toIObject = __webpack_require__(26),
                toPrimitive = __webpack_require__(20),
                createDesc = __webpack_require__(21),
                _create = __webpack_require__(61),
                gOPNExt = __webpack_require__(80),
                $GOPD = __webpack_require__(82),
                $DP = __webpack_require__(13),
                $keys = __webpack_require__(23),
                gOPD = $GOPD.f,
                dP = $DP.f,
                gOPN = gOPNExt.f,
                $Symbol = global.Symbol,
                $JSON = global.JSON,
                _stringify = $JSON && $JSON.stringify,
                PROTOTYPE = 'prototype',
                HIDDEN = wks('_hidden'),
                TO_PRIMITIVE = wks('toPrimitive'),
                isEnum = {}.propertyIsEnumerable,
                SymbolRegistry = shared('symbol-registry'),
                AllSymbols = shared('symbols'),
                OPSymbols = shared('op-symbols'),
                ObjectProto = Object[PROTOTYPE],
                USE_NATIVE = typeof $Symbol == 'function',
                QObject = global.QObject;
            // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
            var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

            // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
            var setSymbolDesc = DESCRIPTORS && $fails(function() {
                return _create(dP({}, 'a', {
                    get: function() {
                        return dP(this, 'a', {
                            value: 7
                        }).a;
                    }
                })).a != 7;
            }) ? function(it, key, D) {
                var protoDesc = gOPD(ObjectProto, key);
                if (protoDesc) delete ObjectProto[key];
                dP(it, key, D);
                if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
            } : dP;

            var wrap = function(tag) {
                var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
                sym._k = tag;
                return sym;
            };

            var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it) {
                return typeof it == 'symbol';
            } : function(it) {
                return it instanceof $Symbol;
            };

            var $defineProperty = function defineProperty(it, key, D) {
                if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
                anObject(it);
                key = toPrimitive(key, true);
                anObject(D);
                if (has(AllSymbols, key)) {
                    if (!D.enumerable) {
                        if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
                        it[HIDDEN][key] = true;
                    } else {
                        if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
                        D = _create(D, {
                            enumerable: createDesc(0, false)
                        });
                    }
                    return setSymbolDesc(it, key, D);
                }
                return dP(it, key, D);
            };
            var $defineProperties = function defineProperties(it, P) {
                anObject(it);
                var keys = enumKeys(P = toIObject(P)),
                    i = 0,
                    l = keys.length,
                    key;
                while (l > i) $defineProperty(it, key = keys[i++], P[key]);
                return it;
            };
            var $create = function create(it, P) {
                return P === undefined ? _create(it) : $defineProperties(_create(it), P);
            };
            var $propertyIsEnumerable = function propertyIsEnumerable(key) {
                var E = isEnum.call(this, key = toPrimitive(key, true));
                if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
                return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
            };
            var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
                it = toIObject(it);
                key = toPrimitive(key, true);
                if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
                var D = gOPD(it, key);
                if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
                return D;
            };
            var $getOwnPropertyNames = function getOwnPropertyNames(it) {
                var names = gOPN(toIObject(it)),
                    result = [],
                    i = 0,
                    key;
                while (names.length > i) {
                    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
                }
                return result;
            };
            var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
                var IS_OP = it === ObjectProto,
                    names = gOPN(IS_OP ? OPSymbols : toIObject(it)),
                    result = [],
                    i = 0,
                    key;
                while (names.length > i) {
                    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
                }
                return result;
            };

            // 19.4.1.1 Symbol([description])
            if (!USE_NATIVE) {
                $Symbol = function Symbol() {
                    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
                    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
                    var $set = function(value) {
                        if (this === ObjectProto) $set.call(OPSymbols, value);
                        if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
                        setSymbolDesc(this, tag, createDesc(1, value));
                    };
                    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, {
                        configurable: true,
                        set: $set
                    });
                    return wrap(tag);
                };
                redefine($Symbol[PROTOTYPE], 'toString', function toString() {
                    return this._k;
                });

                $GOPD.f = $getOwnPropertyDescriptor;
                $DP.f = $defineProperty;
                __webpack_require__(81).f = gOPNExt.f = $getOwnPropertyNames;
                __webpack_require__(39).f = $propertyIsEnumerable;
                __webpack_require__(38).f = $getOwnPropertySymbols;

                if (DESCRIPTORS && !__webpack_require__(57)) {
                    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
                }

                wksExt.f = function(name) {
                    return wrap(wks(name));
                }
            }

            $export($export.G + $export.W + $export.F * !USE_NATIVE, {
                Symbol: $Symbol
            });

            for (var symbols = (
                    // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
                    'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
                ).split(','), i = 0; symbols.length > i;) wks(symbols[i++]);

            for (var symbols = $keys(wks.store), i = 0; symbols.length > i;) wksDefine(symbols[i++]);

            $export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
                // 19.4.2.1 Symbol.for(key)
                'for': function(key) {
                    return has(SymbolRegistry, key += '') ?
                        SymbolRegistry[key] :
                        SymbolRegistry[key] = $Symbol(key);
                },
                // 19.4.2.5 Symbol.keyFor(sym)
                keyFor: function keyFor(key) {
                    if (isSymbol(key)) return keyOf(SymbolRegistry, key);
                    throw TypeError(key + ' is not a symbol!');
                },
                useSetter: function() {
                    setter = true;
                },
                useSimple: function() {
                    setter = false;
                }
            });

            $export($export.S + $export.F * !USE_NATIVE, 'Object', {
                // 19.1.2.2 Object.create(O [, Properties])
                create: $create,
                // 19.1.2.4 Object.defineProperty(O, P, Attributes)
                defineProperty: $defineProperty,
                // 19.1.2.3 Object.defineProperties(O, Properties)
                defineProperties: $defineProperties,
                // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
                getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
                // 19.1.2.7 Object.getOwnPropertyNames(O)
                getOwnPropertyNames: $getOwnPropertyNames,
                // 19.1.2.8 Object.getOwnPropertySymbols(O)
                getOwnPropertySymbols: $getOwnPropertySymbols
            });

            // 24.3.2 JSON.stringify(value [, replacer [, space]])
            $JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function() {
                var S = $Symbol();
                // MS Edge converts symbol values to JSON as {}
                // WebKit converts symbol values to JSON as null
                // V8 throws on boxed symbols
                return _stringify([S]) != '[null]' || _stringify({
                    a: S
                }) != '{}' || _stringify(Object(S)) != '{}';
            })), 'JSON', {
                stringify: function stringify(it) {
                    if (it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
                    var args = [it],
                        i = 1,
                        replacer, $replacer;
                    while (arguments.length > i) args.push(arguments[i++]);
                    replacer = args[1];
                    if (typeof replacer == 'function') $replacer = replacer;
                    if ($replacer || !isArray(replacer)) replacer = function(key, value) {
                        if ($replacer) value = $replacer.call(this, key, value);
                        if (!isSymbol(value)) return value;
                    };
                    args[1] = replacer;
                    return _stringify.apply($JSON, args);
                }
            });

            // 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
            $Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(12)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
            // 19.4.3.5 Symbol.prototype[@@toStringTag]
            setToStringTag($Symbol, 'Symbol');
            // 20.2.1.9 Math[@@toStringTag]
            setToStringTag(Math, 'Math', true);
            // 24.3.3 JSON[@@toStringTag]
            setToStringTag(global.JSON, 'JSON', true);

            /***/
        },
        /* 75 */
        /***/
        function(module, exports, __webpack_require__) {

            var META = __webpack_require__(36)('meta'),
                isObject = __webpack_require__(15),
                has = __webpack_require__(25),
                setDesc = __webpack_require__(13).f,
                id = 0;
            var isExtensible = Object.isExtensible || function() {
                return true;
            };
            var FREEZE = !__webpack_require__(18)(function() {
                return isExtensible(Object.preventExtensions({}));
            });
            var setMeta = function(it) {
                setDesc(it, META, {
                    value: {
                        i: 'O' + ++id, // object ID
                        w: {} // weak collections IDs
                    }
                });
            };
            var fastKey = function(it, create) {
                // return primitive with prefix
                if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
                if (!has(it, META)) {
                    // can't set metadata to uncaught frozen object
                    if (!isExtensible(it)) return 'F';
                    // not necessary to add metadata
                    if (!create) return 'E';
                    // add missing metadata
                    setMeta(it);
                    // return object ID
                }
                return it[META].i;
            };
            var getWeak = function(it, create) {
                if (!has(it, META)) {
                    // can't set metadata to uncaught frozen object
                    if (!isExtensible(it)) return true;
                    // not necessary to add metadata
                    if (!create) return false;
                    // add missing metadata
                    setMeta(it);
                    // return hash weak collections IDs
                }
                return it[META].w;
            };
            // add metadata on freeze-family methods calling
            var onFreeze = function(it) {
                if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
                return it;
            };
            var meta = module.exports = {
                KEY: META,
                NEED: false,
                fastKey: fastKey,
                getWeak: getWeak,
                onFreeze: onFreeze
            };

            /***/
        },
        /* 76 */
        /***/
        function(module, exports, __webpack_require__) {

            var global = __webpack_require__(8),
                core = __webpack_require__(9),
                LIBRARY = __webpack_require__(57),
                wksExt = __webpack_require__(71),
                defineProperty = __webpack_require__(13).f;
            module.exports = function(name) {
                var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
                if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, {
                    value: wksExt.f(name)
                });
            };

            /***/
        },
        /* 77 */
        /***/
        function(module, exports, __webpack_require__) {

            var getKeys = __webpack_require__(23),
                toIObject = __webpack_require__(26);
            module.exports = function(object, el) {
                var O = toIObject(object),
                    keys = getKeys(O),
                    length = keys.length,
                    index = 0,
                    key;
                while (length > index)
                    if (O[key = keys[index++]] === el) return key;
            };

            /***/
        },
        /* 78 */
        /***/
        function(module, exports, __webpack_require__) {

            // all enumerable object keys, includes symbols
            var getKeys = __webpack_require__(23),
                gOPS = __webpack_require__(38),
                pIE = __webpack_require__(39);
            module.exports = function(it) {
                var result = getKeys(it),
                    getSymbols = gOPS.f;
                if (getSymbols) {
                    var symbols = getSymbols(it),
                        isEnum = pIE.f,
                        i = 0,
                        key;
                    while (symbols.length > i)
                        if (isEnum.call(it, key = symbols[i++])) result.push(key);
                }
                return result;
            };

            /***/
        },
        /* 79 */
        /***/
        function(module, exports, __webpack_require__) {

            // 7.2.2 IsArray(argument)
            var cof = __webpack_require__(28);
            module.exports = Array.isArray || function isArray(arg) {
                return cof(arg) == 'Array';
            };

            /***/
        },
        /* 80 */
        /***/
        function(module, exports, __webpack_require__) {

            // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
            var toIObject = __webpack_require__(26),
                gOPN = __webpack_require__(81).f,
                toString = {}.toString;

            var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames ?
                Object.getOwnPropertyNames(window) : [];

            var getWindowNames = function(it) {
                try {
                    return gOPN(it);
                } catch (e) {
                    return windowNames.slice();
                }
            };

            module.exports.f = function getOwnPropertyNames(it) {
                return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
            };


            /***/
        },
        /* 81 */
        /***/
        function(module, exports, __webpack_require__) {

            // 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
            var $keys = __webpack_require__(24),
                hiddenKeys = __webpack_require__(37).concat('length', 'prototype');

            exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
                return $keys(O, hiddenKeys);
            };

            /***/
        },
        /* 82 */
        /***/
        function(module, exports, __webpack_require__) {

            var pIE = __webpack_require__(39),
                createDesc = __webpack_require__(21),
                toIObject = __webpack_require__(26),
                toPrimitive = __webpack_require__(20),
                has = __webpack_require__(25),
                IE8_DOM_DEFINE = __webpack_require__(16),
                gOPD = Object.getOwnPropertyDescriptor;

            exports.f = __webpack_require__(17) ? gOPD : function getOwnPropertyDescriptor(O, P) {
                O = toIObject(O);
                P = toPrimitive(P, true);
                if (IE8_DOM_DEFINE) try {
                    return gOPD(O, P);
                } catch (e) { /* empty */ }
                if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
            };

            /***/
        },
        /* 83 */
        /***/
        function(module, exports) {



            /***/
        },
        /* 84 */
        /***/
        function(module, exports, __webpack_require__) {

            __webpack_require__(76)('asyncIterator');

            /***/
        },
        /* 85 */
        /***/
        function(module, exports, __webpack_require__) {

            __webpack_require__(76)('observable');

            /***/
        },
        /* 86 */
        /***/
        function(module, exports, __webpack_require__) {

            module.exports = {
                "default": __webpack_require__(87),
                __esModule: true
            };

            /***/
        },
        /* 87 */
        /***/
        function(module, exports, __webpack_require__) {

            var core = __webpack_require__(9),
                $JSON = core.JSON || (core.JSON = {
                    stringify: JSON.stringify
                });
            module.exports = function stringify(it) { // eslint-disable-line no-unused-vars
                return $JSON.stringify.apply($JSON, arguments);
            };

            /***/
        },
        /* 88 */
        /***/
        function(module, exports, __webpack_require__) {

            // the whatwg-fetch polyfill installs the fetch() function
            // on the global object (window or self)
            //
            // Return that as the export for use in Webpack, Browserify etc.
            __webpack_require__(43);
            module.exports = self.fetch.bind(self);


            /***/
        },
        /* 89 */
        /***/
        function(module, exports, __webpack_require__) {

            'use strict';

            Object.defineProperty(exports, "__esModule", {
                value: true
            });

            var _constants = __webpack_require__(90);

            exports.default = {
                create: function create(name, value, minutes, cookieDomain) {
                    var domain = cookieDomain ? 'domain=' + cookieDomain + ';' : '';
                    var date = void 0;
                    var expires = '';

                    if (minutes) {
                        date = new Date();
                        date.setTime(date.getTime() + minutes * 60 * 1000);
                        expires = 'expires=' + date.toGMTString() + ';';
                    }
                    document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value) + ';' + expires + domain + 'path=/';
                },
                read: function read(name) {
                    var cookies = document.cookie.split(';');
                    var cookieMatch = cookies.filter(function(cookie) {
                        return cookie.indexOf(name) > -1;
                    });
                    cookieMatch = cookieMatch.length > 0 ? cookieMatch[0].split(name + '=')[1] : '';
                    return cookieMatch && cookieMatch.trim() || '';
                },
                delete: function _delete(name, cookieDomain) {
                    var domain = cookieDomain ? 'domain=' + cookieDomain + '; ' : '';
                    document.cookie = name + '=; ' + domain + 'path=/; expires=Thu, 01 Jan 1970 00:00:00 UTC';
                },
                updatePCCookie: function updatePCCookie(data, section) {
                    var doNotTrack = this.handleGDPR();
                    if (doNotTrack) {
                        return;
                    }
                    var sailthruPC = this.read('sailthru_pc');
                    var maxCookieSize = 168 * 10 + 2;
                    var cookieExpiry = 365 * _constants.CONVERT_DAY_TO_MINUTES;
                    var version = '00';
                    var defaultUUID = '00000000-0000-0000-0000-000000000000';
                    var contentHash = data.contentHash;
                    var list = section.list ? section.list : '000000000000000000000000';
                    var groupId = '0000'; // placeholder until section.groupId is implemented in personalize-service
                    var newClickData = '' + contentHash + section.sectionId + list + defaultUUID + defaultUUID + groupId;

                    if (sailthruPC) {
                        var clickDataList = sailthruPC.substr(2).match(/.{168}/g);
                        var clickMatches = clickDataList.filter(function(clickData) {
                            return clickData.indexOf(contentHash) === -1;
                        });
                        sailthruPC = clickMatches.join('');
                    }
                    sailthruPC = '' + version + newClickData + sailthruPC;
                    sailthruPC = sailthruPC.substr(0, maxCookieSize);
                    this.create('sailthru_pc', sailthruPC, cookieExpiry);
                },
                updateSailthruContentCookie: function updateSailthruContentCookie(contentHash) {
                    var doNotTrack = this.handleGDPR();
                    if (doNotTrack) {
                        return;
                    }
                    var maxContentHashes = 16;
                    var sailthruContentCookie = this.read('sailthru_content');
                    if (contentHash) {
                        var hashLength = contentHash.length;
                        var maxHashLength = maxContentHashes * hashLength;
                        var index = sailthruContentCookie.indexOf(contentHash);
                        if (index !== -1) {
                            sailthruContentCookie = sailthruContentCookie.substring(0, index) + sailthruContentCookie.substring(index + hashLength);
                        }

                        // Appends a string to the end of a base string. Limits the string
                        // to 16 times the length of the addition.
                        var newContentCookieValue = sailthruContentCookie + contentHash;
                        newContentCookieValue = newContentCookieValue.length > maxHashLength ? newContentCookieValue.substring(hashLength) : newContentCookieValue;

                        this.delete('sailthru_content');
                        this.create('sailthru_content', newContentCookieValue, 365 * _constants.CONVERT_DAY_TO_MINUTES);
                    }
                },
                updatePageviewsCookie: function updatePageviewsCookie() {
                    var overlayCookie = this.read('sailthru_overlays');
                    var cookie = this.read('sailthru_pageviews');
                    cookie = Number(cookie) + 1;
                    this.create('sailthru_pageviews', cookie, 30);

                    if (overlayCookie.length > 0) {
                        this.create('sailthru_overlays', overlayCookie, 30);
                    }
                },
                setSailthruHid: function setSailthruHid(sailthruHid) {
                    var cookieDomain = this.getCookieDomain(window.location.hostname);
                    if (!sailthruHid) {
                        this.delete('sailthru_hid', cookieDomain);
                        return;
                    }
                    var cookieExpiry = 365 * _constants.CONVERT_DAY_TO_MINUTES;
                    this.create('sailthru_hid', sailthruHid, cookieExpiry, cookieDomain);
                },
                setCookiesDoNotTrack: function setCookiesDoNotTrack() {
                    this.create('sailthru_no_cookies', '1', 365 * _constants.CONVERT_DAY_TO_MINUTES);
                },
                unsetCookiesDoNotTrack: function unsetCookiesDoNotTrack() {
                    this.delete('sailthru_no_cookies');
                    if (this.read('sailthru_hid') === _constants.DO_NOT_TRACK) {
                        this.setSailthruHid(null);
                    }
                },
                isAnonymousUser: function isAnonymousUser() {
                    var horizonId = this.read('sailthru_hid');
                    return !horizonId;
                },
                isDoNotTrackUser: function isDoNotTrackUser() {
                    var horizonId = this.read('sailthru_hid');
                    var cookiesDoNotTrack = this.read('sailthru_no_cookies');
                    return horizonId === _constants.DO_NOT_TRACK || horizonId === 'optout' || !!cookiesDoNotTrack;
                },
                refreshNoCookies: function refreshNoCookies() {
                    if (this.read('sailthru_no_cookies')) {
                        this.setCookiesDoNotTrack();
                    }
                },
                handleGDPR: function handleGDPR() {
                    if (this.isDoNotTrackUser()) {
                        this.delete('sailthru_content');
                        this.delete('sailthru_pc');
                        this.delete('sailthru_bid');
                        this.delete('sailthru_sid');
                        this.delete('sailthru_cid');
                        this.delete('sailthru_rid');
                        this.delete('sailthru_recommendation_hidden');

                        this.delete('sailthru_hid', this.getCookieDomain(window.location.hostname));
                        this.setSailthruHid(_constants.DO_NOT_TRACK);
                        return true;
                    }
                    return false;
                },
                getCookieDomain: function getCookieDomain(hostName) {
                    var domainExp = /(?:[\w-]+\.(?:com|co|gov|edu|org|net)\.[\w-]{1,2}|[\w-]+\.[\w-]{2,})$/;
                    var result = domainExp.exec(hostName);
                    if (result) {
                        return result[0];
                    }
                    return null;
                }
            };

            /***/
        },
        /* 90 */
        /***/
        function(module, exports) {

            'use strict';

            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            var CHECK_CONTENT_LOADED = exports.CHECK_CONTENT_LOADED = 'checkContentLoaded';
            var CONVERT_DAY_TO_MINUTES = exports.CONVERT_DAY_TO_MINUTES = 24 * 60;
            var DO_NOT_TRACK = exports.DO_NOT_TRACK = 'do-not-track';
            var SIGN_UP_VAR_CLASS = exports.SIGN_UP_VAR_CLASS = 'sailthru-var';
            var DATA_VAR_NAME = exports.DATA_VAR_NAME = 'data-var-name';
            var DATA_VAR_VALUE = exports.DATA_VAR_VALUE = 'data-var-attribute';
            var FORM_ELEMENT = exports.FORM_ELEMENT = 'FORM';

            // Cookies
            var SESS_OVERLAY_PARAMS_COOKIE_NAME = exports.SESS_OVERLAY_PARAMS_COOKIE_NAME = 'sailthru_sess_overlay_params';
            var SESSION_OVERLAY_COOKIE = exports.SESSION_OVERLAY_COOKIE = 'sailthru_session_overlay';
            var DISMISSED_OVERLAYS_COOKIE = exports.DISMISSED_OVERLAYS_COOKIE = 'sailthru_dismiss_overlay';

            // Query Params + Fragments
            var OVERLAY_PARAM_STICKY = exports.OVERLAY_PARAM_STICKY = 'SToverlay';
            var OVERLAY_PARAM_DEBUG = exports.OVERLAY_PARAM_DEBUG = 'STdebug';
            var OVERLAY_PARAM_PREVIEW = exports.OVERLAY_PARAM_PREVIEW = 'STpreview';
            var OVERLAY_PARAM_SHOW_OVERLAY = exports.OVERLAY_PARAM_SHOW_OVERLAY = 'STshowOverlay';
            var OVERLAY_PARAM_PAGEVIEWS_OVERRIDE = exports.OVERLAY_PARAM_PAGEVIEWS_OVERRIDE = 'STpageviewsOverride';
            var OVERLAY_PARAM_INLINE_STYLE_DELAY = exports.OVERLAY_PARAM_INLINE_STYLE_DELAY = 'STinlineStyleDelayMs';

            /***/
        },
        /* 91 */
        /***/
        function(module, exports, __webpack_require__) {

            'use strict';

            Object.defineProperty(exports, "__esModule", {
                value: true
            });

            var _extends2 = __webpack_require__(3);

            var _extends3 = _interopRequireDefault(_extends2);

            var _cookies = __webpack_require__(89);

            var _cookies2 = _interopRequireDefault(_cookies);

            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default: obj
                };
            }

            exports.default = {
                defaultPageviewOnError: function defaultPageviewOnError(data) {
                    var error = data.responseText && JSON.parse(data.responseText).error || data.error || 'Check url and configuration.';
                    return 'Pageview was not tracked: ' + error;
                },
                getData: function getData(url, options, config) {
                    var data = (0, _extends3.default)({}, options, {
                        url: url,
                        pageview: true,
                        visitorId: _cookies2.default.read('sailthru_visitor'),
                        apiUrl: config.trackDomain + '/v1/track/event/pageview'
                    });

                    var sailthruTags = document.querySelectorAll && document.querySelectorAll('meta[name="sailthru.tags"]').length > 0 && document.querySelectorAll('meta[name="sailthru.tags"]')[0].getAttribute('content');
                    var sailthruKeywords = document.querySelectorAll && document.querySelectorAll('meta[name="keywords"]').length > 0 && document.querySelectorAll('meta[name="keywords"]')[0].getAttribute('content');
                    var sailthruMetaTags = sailthruTags || sailthruKeywords || '';

                    data.visitorId = _cookies2.default.read('sailthru_visitor');
                    data.messageId = _cookies2.default.read('sailthru_bid');

                    data.excludeContent = config.excludeContent;
                    if (data.excludeContent === 'true') {
                        data.excludeContent = true;
                    } else if (typeof data.excludeContent !== 'boolean') {
                        data.excludeContent = false;
                    }

                    if (data.useStoredTags === undefined) {
                        data.useStoredTags = config.useStoredTags;
                    }
                    if (data.useStoredTags === 'false') {
                        data.useStoredTags = false;
                    } else if (typeof data.useStoredTags !== 'boolean') {
                        data.useStoredTags = true;
                    }

                    data.tags = typeof data.tags !== 'undefined' ? data.tags.toString() : sailthruMetaTags; // handles string and array inputs

                    return data;
                }
            };

            /***/
        },
        /* 92 */
        /***/
        function(module, exports, __webpack_require__) {

            'use strict';

            Object.defineProperty(exports, "__esModule", {
                value: true
            });

            var _track = __webpack_require__(41);

            var _track2 = _interopRequireDefault(_track);

            var _cookies = __webpack_require__(89);

            var _cookies2 = _interopRequireDefault(_cookies);

            var _urlUtil = __webpack_require__(93);

            var _urlUtil2 = _interopRequireDefault(_urlUtil);

            var _constants = __webpack_require__(90);

            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default: obj
                };
            }

            /* Mostly plagarized from https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API#Example */

            var TEN_SECONDS = 10000;
            var THIRTY_SECONDS = 30000;
            var ONE_MINUTE = 60000;
            var TWENTY_NINE_MINUTES = 1740000;

            var config = void 0;

            var SPMTrack = void 0;
            var urlUtility = void 0;
            var lostVisibility = false;
            var firstHeartbeatInterval = void 0;
            var secondHeartbeatInterval = void 0;

            var hidden = void 0;
            var visibilityChange = void 0;

            function stopHeartbeat() {
                lostVisibility = true;
                window.clearInterval(firstHeartbeatInterval);
                window.clearInterval(secondHeartbeatInterval);
                console.log('Heartbeat stopped');
                return {
                    lostVisibility: lostVisibility,
                    firstHeartbeatInterval: firstHeartbeatInterval,
                    secondHeartbeatInterval: secondHeartbeatInterval
                };
            }

            function trackNavigation() {
                SPMTrack.navigation(window.location.href, {
                    onError: stopHeartbeat
                });
            }

            function trackHeartbeat() {
                SPMTrack.heartbeat(window.location.href, {
                    onError: stopHeartbeat
                });
            }

            function setVisibilityProperties() {
                if (typeof document.hidden !== 'undefined') {
                    // Opera 12.10 and Firefox 18 and later support
                    hidden = 'hidden';
                    visibilityChange = 'visibilitychange';
                } else if (typeof document.msHidden !== 'undefined') {
                    hidden = 'msHidden';
                    visibilityChange = 'msvisibilitychange';
                } else if (typeof document.webkitHidden !== 'undefined') {
                    hidden = 'webkitHidden';
                    visibilityChange = 'webkitvisibilitychange';
                }
                return {
                    hidden: hidden,
                    visibilityChange: visibilityChange
                };
            }

            function createInterval(startTime, interval, expireTime) {
                var intervalId = window.setInterval(function() {
                    var now = new Date().getTime();
                    if (now - startTime > expireTime) {
                        window.clearInterval(intervalId);
                        return;
                    }
                    trackHeartbeat();
                }, interval);
                return intervalId;
            }

            function startHeartbeat() {
                if (lostVisibility) {
                    lostVisibility = false;
                    trackNavigation();
                }
                var startTime = new Date().getTime();
                firstHeartbeatInterval = createInterval(startTime, TEN_SECONDS, THIRTY_SECONDS);
                secondHeartbeatInterval = createInterval(startTime, ONE_MINUTE, TWENTY_NINE_MINUTES);
                return {
                    lostVisibility: lostVisibility,
                    firstHeartbeatInterval: firstHeartbeatInterval,
                    secondHeartbeatInterval: secondHeartbeatInterval
                };
            }

            function handleVisibilityChange() {
                if (document[hidden]) {
                    return stopHeartbeat();
                }
                return startHeartbeat();
            }

            function appendHearbeatListener() {
                setVisibilityProperties();

                if (typeof document.addEventListener === 'undefined' || typeof document.hidden === 'undefined') {
                    console.log('Heartbeat requires a browser that supports the Page Visibility API');
                    return false;
                }

                if (_cookies2.default.isAnonymousUser()) {
                    if (urlUtility.urlFragmentParams[_constants.OVERLAY_PARAM_DEBUG]) {
                        console.log('Heartbeat only works for known users');
                    }
                    return false;
                }

                if (!config.enableHeartbeat) {
                    if (urlUtility.urlFragmentParams[_constants.OVERLAY_PARAM_DEBUG]) {
                        console.log('Heartbeat disabled');
                    }
                    return false;
                }

                document.addEventListener(visibilityChange, handleVisibilityChange, false);
                return startHeartbeat();
            }

            var defaultFn = function defaultFn(options) {
                config = options;
                SPMTrack = (0, _track2.default)(options);
                lostVisibility = false;
                urlUtility = (0, _urlUtil2.default)();

                return {
                    appendHearbeatListener: appendHearbeatListener
                };
            };

            exports.default = defaultFn;

            /***/
        },
        /* 93 */
        /***/
        function(module, exports, __webpack_require__) {

            'use strict';

            Object.defineProperty(exports, "__esModule", {
                value: true
            });

            var _cookies = __webpack_require__(89);

            var _cookies2 = _interopRequireDefault(_cookies);

            var _constants = __webpack_require__(90);

            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default: obj
                };
            }

            var urlFragmentParams = void 0;
            var urlQueryParams = {};
            var urlQueryParamsNeedParsing = true;

            function pushUserIdKeyAndUserIdValue(config, params) {
                if (typeof config.userIdKey === 'undefined' || config.userIdKey === 'hid') {
                    var horizonId = _cookies2.default.read('sailthru_hid');
                    if (horizonId) {
                        params.push('userIdKey=hid');
                        params.push('userIdValue=' + horizonId);
                    }
                } else if (config.userIdValue) {
                    params.push('userIdKey=' + config.userIdKey);
                    params.push('userIdValue=' + config.userIdValue);
                }
                return params;
            }

            function urlHashToMap() {
                var hash = window.location.hash.substr(1);
                urlFragmentParams = hash.split('&').map(function(el) {
                    return el.split('=');
                }).reduce(function(keyValue, splittedData) {
                    keyValue[splittedData[0]] = decodeURIComponent(splittedData[1]);
                    return keyValue;
                }, {});
                return urlFragmentParams;
            }

            function isPreview() {
                return urlFragmentParams[_constants.OVERLAY_PARAM_PREVIEW] !== undefined;
            }

            function getPreviewIdFromAnchor() {
                if (isPreview()) {
                    return urlFragmentParams[_constants.OVERLAY_PARAM_PREVIEW];
                }
                return undefined;
            }

            function pushDeviceTypeInfo(isMobile, params) {
                if (isMobile !== undefined) {
                    var isMobileParamVal = isMobile ? '1' : '0';
                    params.push('isMobile=' + isMobileParamVal);
                }
                return params;
            }

            function getSessionOverlayUrlQuery() {
                var sessOverlayParamsCookie = _cookies2.default.read(_constants.SESS_OVERLAY_PARAMS_COOKIE_NAME);
                if (sessOverlayParamsCookie) {
                    return decodeURIComponent(sessOverlayParamsCookie);
                }
                return window.location.search;
            }

            function pushLandingPageParams(params) {
                var urlQuery = getSessionOverlayUrlQuery();
                if (urlQuery && urlQuery.length > 1 && urlQuery[0] === '?') {
                    params.push(urlQuery.slice(1));
                }
                return params;
            }

            function urlVars() {
                var tokens = void 0;
                var query = window.location.search;
                var regex = /[?&]+([^=&]+)=([^&]*)[^&#]*/gi;

                while (tokens = regex.exec(query)) {
                    urlQueryParams[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);
                }
                urlQueryParamsNeedParsing = false;
                return urlQueryParams;
            }

            function getUrlParam(parameter) {
                if (urlQueryParamsNeedParsing) {
                    urlVars();
                }
                var urlparameter = void 0;
                urlparameter = urlQueryParams[parameter];
                return urlparameter;
            }

            var defaultFn = function defaultFn() {
                urlHashToMap();
                urlVars();
                return {
                    pushUserIdKeyAndUserIdValue: pushUserIdKeyAndUserIdValue,
                    urlHashToMap: urlHashToMap,
                    getPreviewIdFromAnchor: getPreviewIdFromAnchor,
                    isPreview: isPreview,
                    urlFragmentParams: urlFragmentParams,
                    pushDeviceTypeInfo: pushDeviceTypeInfo,
                    getUrlParam: getUrlParam,
                    pushLandingPageParams: pushLandingPageParams
                };
            };

            exports.default = defaultFn;

            /***/
        },
        /* 94 */
        /***/
        function(module, exports, __webpack_require__) {

            /* WEBPACK VAR INJECTION */
            (function(fetch) {
                'use strict';

                Object.defineProperty(exports, "__esModule", {
                    value: true
                });

                var _stringify = __webpack_require__(86);

                var _stringify2 = _interopRequireDefault(_stringify);

                var _extends2 = __webpack_require__(3);

                var _extends3 = _interopRequireDefault(_extends2);

                var _typeof2 = __webpack_require__(51);

                var _typeof3 = _interopRequireDefault(_typeof2);

                __webpack_require__(88);

                var _cookies = __webpack_require__(89);

                var _cookies2 = _interopRequireDefault(_cookies);

                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule ? obj : {
                        default: obj
                    };
                }

                exports.default = function(config) {
                    function hasId(id) {
                        if (typeof id === 'string') {
                            return true;
                        }

                        if ((typeof id === 'undefined' ? 'undefined' : (0, _typeof3.default)(id)) === 'object' && typeof id.key === 'string') {
                            if (typeof id.id === 'string' || typeof id.id === 'number') {
                                return true;
                            }
                        }
                        return false;
                    }

                    function addSourceToVars(rawIntegrationData) {
                        var integrationData = (0, _extends3.default)({}, rawIntegrationData);
                        if (typeof integrationData.source !== 'undefined') {
                            integrationData.vars = integrationData.vars || {};
                            integrationData.vars.source = integrationData.source;
                            delete integrationData.source;
                        }

                        return integrationData;
                    }

                    function addOrUpdateData(integrationConfig, method) {
                        var integrationData = (0, _extends3.default)({}, integrationConfig);
                        delete integrationData.apiUrl;

                        var fetchData = {
                            method: method || 'POST',
                            credentials: 'same-origin',
                            headers: {
                                Accept: 'application/json',
                                'Content-Type': 'application/json',
                                'X-Lib-Version': config.VERSION,
                                Authorization: 'Bearer ' + config.customerId
                            }
                        };

                        if (fetchData.method === 'POST') {
                            fetchData.body = (0, _stringify2.default)(integrationData);
                        }

                        return fetch(integrationConfig.apiUrl, fetchData).then(function(response) {
                            return response.json();
                        }).then(function(json) {
                            if (json && (json.message || json.error)) {
                                throw json;
                            } else if (typeof integrationConfig.onSuccess === 'function') {
                                integrationConfig.onSuccess(json);
                            }
                        }).catch(function(response) {
                            if (typeof integrationConfig.onError === 'function') {
                                integrationConfig.onError(response);
                            } else if (response && response.message) {
                                console.error('You have the following error: ' + (response.error || response.message));
                            }
                        });
                    }

                    function hasValidIdAndKey(id) {
                        return (typeof id === 'undefined' ? 'undefined' : (0, _typeof3.default)(id)) === 'object' && typeof id.key === 'string' && (typeof id.id === 'string' || typeof id.id === 'number');
                    }

                    function processId(id) {
                        var sailthruHid = void 0;
                        if (typeof id === 'string') {
                            return {
                                id: id,
                                key: 'email'
                            };
                        } else if ((typeof id === 'undefined' ? 'undefined' : (0, _typeof3.default)(id)) === 'object' && hasValidIdAndKey(id)) {
                            return id;
                        } else if (sailthruHid = _cookies2.default.read('sailthru_hid')) {
                            return {
                                id: sailthruHid,
                                key: 'cookie'
                            };
                        }
                        return {
                            id: undefined,
                            key: undefined
                        };
                    }

                    return {
                        getCurrentUser: function getCurrentUser(integrationOptions) {
                            var domainAndPath = config.trackDomain + '/v1/track/user?';
                            var hid = _cookies2.default.read('sailthru_hid');
                            if (hid) {
                                var params = [];
                                params.push('user_id_key=hid');
                                if (integrationOptions.hash) {
                                    params.push('hash=' + integrationOptions.hash);
                                }
                                params.push('user_id_value=' + hid);

                                var apiUrl = domainAndPath + params.join('&');
                                var integrationData = addSourceToVars((0, _extends3.default)({}, integrationOptions, {
                                    apiUrl: apiUrl
                                }));
                                return addOrUpdateData(integrationData, 'GET');
                            }
                            console.error('Please make sure the sailthru_hid cookie is set.');
                            return false;
                        },
                        userSignUp: function userSignUp(email, integrationOptions) {
                            var apiUrl = config.trackDomain + '/v1/track/user/signup';
                            var hasEmail = typeof email === 'string';
                            var hasListOrVar = typeof integrationOptions.lists !== 'undefined' && integrationOptions.lists || typeof integrationOptions.vars !== 'undefined' && integrationOptions.vars || typeof integrationOptions.source !== 'undefined' && integrationOptions.source;

                            function onUserSignupSuccess(response) {
                                if (response && response.sailthruHid) {
                                    _cookies2.default.setSailthruHid(response.sailthruHid);
                                }
                                if (typeof integrationOptions.onSuccess === 'function') {
                                    return integrationOptions.onSuccess(this, response);
                                }
                            }
                            var integrationData = addSourceToVars((0, _extends3.default)({}, integrationOptions, {
                                email: email,
                                apiUrl: apiUrl,
                                onSuccess: onUserSignupSuccess
                            }));

                            if (!_cookies2.default.read('sailthru_hid')) {
                                integrationData.content = _cookies2.default.read('sailthru_content');
                            }

                            if (hasEmail && hasListOrVar) {
                                return addOrUpdateData(integrationData);
                            }
                            console.error('Please make sure to include an email plus a lists or a vars option.', integrationData);
                            return false;
                        },
                        userSignUpConfirmedOptIn: function userSignUpConfirmedOptIn(idAndKey, integrationOptions) {
                            var apiUrl = config.trackDomain + '/v1/track/user/signup';
                            var hasTemplate = typeof integrationOptions !== 'undefined' && typeof integrationOptions.template !== 'undefined' && typeof integrationOptions.template.name !== 'undefined';

                            if (!hasTemplate || !hasValidIdAndKey(idAndKey)) {
                                console.error('Please make sure that the integration options include a template and id/key pair: ', integrationOptions);
                                return false;
                            }
                            var integrationData = addSourceToVars((0, _extends3.default)({}, integrationOptions, {
                                id: idAndKey.id,
                                key: idAndKey.key || 'email',
                                apiUrl: apiUrl
                            }));
                            if (!_cookies2.default.read('sailthru_hid')) {
                                integrationData.content = _cookies2.default.read('sailthru_content');
                            }
                            return addOrUpdateData(integrationData);
                        },
                        addToCart: function addToCart(id, integrationOptions) {
                            var apiUrl = config.trackDomain + '/v1/track/addToCart';

                            var hasSKUOrURL = integrationOptions && integrationOptions.items && integrationOptions.items.filter(function(item) {
                                return typeof item.sku !== 'undefined' || typeof item.url !== 'undefined';
                            }).length > 0;

                            var isEmptyCart = integrationOptions && integrationOptions.items && integrationOptions.items.length === 0;

                            // id = processId(id);
                            var integrationData = (0, _extends3.default)({}, processId(id), integrationOptions, {
                                apiUrl: apiUrl
                            });

                            if (integrationData.id && (hasSKUOrURL || isEmptyCart)) {
                                return addOrUpdateData(integrationData);
                            }

                            console.error('Please make sure to include an id and key plus an items sku or items url option.', integrationData);
                            return false;
                        },
                        purchase: function purchase(id, integrationOptions) {
                            var apiUrl = config.trackDomain + '/v1/track/purchase';

                            var hasSKUOrURL = integrationOptions && integrationOptions.items && integrationOptions.items.filter(function(item) {
                                return typeof item.sku !== 'undefined' || typeof item.url !== 'undefined';
                            }).length > 0;

                            var isEmptyCart = integrationOptions && integrationOptions.incomplete && integrationOptions.items && integrationOptions.items.length === 0;

                            var messageId = _cookies2.default.read('sailthru_bid');
                            var sailthruPc = _cookies2.default.read('sailthru_pc');

                            id = processId(id);

                            var integrationData = (0, _extends3.default)({}, id, integrationOptions, {
                                apiUrl: apiUrl
                            });

                            if (messageId) {
                                integrationData.message_id = messageId;
                            }

                            if (sailthruPc) {
                                integrationData.cookies = {
                                    sailthru_pc: sailthruPc
                                };
                            }

                            if (integrationData.id && (hasSKUOrURL || isEmptyCart)) {
                                return addOrUpdateData(integrationData);
                            }

                            console.error('Please make sure to include an id and key plus an items sku or items url option.', integrationData);
                            return false;
                        },
                        customEvent: function customEvent(name, id, integrationOptions) {
                            var apiUrl = config.trackDomain + '/v1/track/event/custom';
                            var hasEvent = typeof name === 'string';

                            id = processId(id);

                            var integrationData = (0, _extends3.default)({}, id, integrationOptions, {
                                apiUrl: apiUrl,
                                event: name || undefined,
                                vars: integrationOptions.vars || undefined
                            });

                            if (integrationData.id && hasEvent) {
                                return addOrUpdateData(integrationData);
                            }

                            console.error('Please make sure to include a custom event name and id.', integrationData);
                            return false;
                        }
                    };
                };
                /* WEBPACK VAR INJECTION */
            }.call(exports, __webpack_require__(42)))

            /***/
        },
        /* 95 */
        /***/
        function(module, exports, __webpack_require__) {

            /* WEBPACK VAR INJECTION */
            (function(fetch) {
                'use strict';

                Object.defineProperty(exports, "__esModule", {
                    value: true
                });

                var _getIterator2 = __webpack_require__(96);

                var _getIterator3 = _interopRequireDefault(_getIterator2);

                var _keys = __webpack_require__(47);

                var _keys2 = _interopRequireDefault(_keys);

                __webpack_require__(88);

                var _cookies = __webpack_require__(89);

                var _cookies2 = _interopRequireDefault(_cookies);

                var _constants = __webpack_require__(90);

                var _overlay = __webpack_require__(101);

                var _overlay2 = _interopRequireDefault(_overlay);

                var _track = __webpack_require__(41);

                var _track2 = _interopRequireDefault(_track);

                var _urlUtil = __webpack_require__(93);

                var _urlUtil2 = _interopRequireDefault(_urlUtil);

                var _sessionOverlay = __webpack_require__(121);

                var _sessionOverlay2 = _interopRequireDefault(_sessionOverlay);

                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule ? obj : {
                        default: obj
                    };
                }

                // NOTE: This adds closest support for IE and Edge browsers
                if (window.Element && !Element.prototype.closest) {
                    Element.prototype.closest = function(s) {
                        var matches = (this.document || this.ownerDocument).querySelectorAll(s),
                            i = void 0,
                            el = this;
                        do {
                            i = matches.length;
                            while (--i >= 0 && matches.item(i) !== el) {}
                        } while (i < 0 && (el = el.parentElement));
                        return el;
                    };
                }

                var config = void 0;
                var track = void 0;
                var overlay = void 0;
                var urlUtility = void 0;
                var sessionOverlay = void 0;

                function appendClickListener(section) {
                    var selector = section.selector,
                        sectionId = section.sectionId;

                    var element = document.querySelectorAll('' + selector)[0];

                    if (element) {
                        element.addEventListener('click', function(event) {
                            event.preventDefault();

                            var target = event.target;
                            var anchor = target.closest('a');
                            if (target.tagName === 'A' || anchor) {
                                (function() {
                                    var url = target.getAttribute('href') || anchor.getAttribute('href');
                                    track.click(sectionId, url, {
                                        onSuccess: function onSuccess(response) {
                                            _cookies2.default.updatePCCookie(response, section);
                                            window.location.href = url;
                                        },
                                        onError: function onError(response) {
                                            console.error('Click error: ' + response.error);
                                            window.location.href = url;
                                        }
                                    }).catch(function(response) {
                                        console.error('Error: ' + response);
                                        window.location.href = url;
                                    });
                                })();
                            }
                        });
                    }
                }

                function stopImpressionCheck(key) {
                    if (config.impressions[key]) {
                        delete config.impressions[key];
                    }
                }

                function onTrackImpressionSuccess(section) {
                    var key = section.elementId;
                    stopImpressionCheck(key);
                }

                function onTrackImpressionFailure(section) {
                    var maxTrackFailures = 5;
                    var elementId = section.elementId;

                    var impression = config.impressions[elementId];

                    if (impression) {
                        impression.failures += 1;

                        if (impression.failures >= maxTrackFailures) {
                            // if impression has too many failures, then stop trying to get impression
                            stopImpressionCheck(elementId);
                        } else {
                            // otherwise, try to get impression again
                            var sectionId = impression.section.sectionId,
                                urls = impression.urls;


                            track.impression(sectionId, urls, {
                                sectionId: sectionId,
                                elementId: elementId,
                                userIdKey: config.userIdKey,
                                userIdValue: config.userIdValue,
                                onSuccess: onTrackImpressionSuccess,
                                onError: onTrackImpressionFailure
                            });
                        }
                        return impression;
                    }
                }

                function isElementVisible(el) {
                    var element = document.querySelector(el);

                    if (!element) {
                        return false;
                    }

                    var rect = element.getBoundingClientRect();
                    var vWidth = window.innerWidth || document.documentElement.clientWidth;
                    var vHeight = window.innerHeight || document.documentElement.clientHeight;

                    // Return false if it's not in the viewport
                    return !(rect.right < 0 || rect.bottom < 0 || rect.left > vWidth || rect.top > vHeight);
                }

                function trackImpression() {
                    var _config = config,
                        impressions = _config.impressions;

                    // loop through all elementIds and check if seen in viewport
                    // pop the item if it is seen and call success.

                    (0, _keys2.default)(impressions).forEach(function(selector) {
                        var impression = impressions[selector];

                        if (isElementVisible(selector) && impression.status === 'unseen') {
                            var sectionId = impression.section.sectionId,
                                urls = impression.urls;


                            impression.status = 'seen';
                            track.impression(sectionId, urls, {
                                elementId: selector,
                                userIdKey: config.userIdKey,
                                userIdValue: config.userIdValue,
                                onSuccess: onTrackImpressionSuccess,
                                onError: onTrackImpressionFailure
                            });
                            return impression;
                        }
                    });
                }

                function addImpression(section) {
                    var selector = section.selector;

                    var urls = [];
                    var links = document.querySelectorAll(selector + ' a[href]');

                    var _iteratorNormalCompletion = true;
                    var _didIteratorError = false;
                    var _iteratorError = undefined;

                    try {
                        for (var _iterator = (0, _getIterator3.default)(links), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                            var link = _step.value;

                            urls.push(link.href);
                        }
                    } catch (err) {
                        _didIteratorError = true;
                        _iteratorError = err;
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion && _iterator.return) {
                                _iterator.return();
                            }
                        } finally {
                            if (_didIteratorError) {
                                throw _iteratorError;
                            }
                        }
                    }

                    config.impressions[selector] = {
                        section: section,
                        urls: urls,
                        failures: 0,
                        status: 'unseen'
                    };

                    window.addEventListener('scroll', trackImpression);
                    return trackImpression();
                }

                function clean(section) {
                    var sectionId = section.sectionId,
                        selector = section.selector,
                        list = section.list,
                        json = section.json,
                        html = section.html,
                        error = section.error,
                        errorMessage = section.errorMessage;


                    if (error) {
                        return {
                            error: error
                        };
                    }

                    if (errorMessage) {
                        return {
                            errorMessage: errorMessage
                        };
                    }

                    var cleanSection = {
                        sectionId: sectionId,
                        selector: selector,
                        list: list
                    };
                    if (json) {
                        cleanSection.json = json;
                    } else if (html) {
                        cleanSection.html = html;
                    }
                    return cleanSection;
                }

                function displaySectionHTML(section) {
                    var selector = section.selector,
                        html = section.html;

                    var element = document.querySelectorAll(selector);
                    var hasElement = element.length > 0;

                    if (hasElement) {
                        var _iteratorNormalCompletion2 = true;
                        var _didIteratorError2 = false;
                        var _iteratorError2 = undefined;

                        try {
                            for (var _iterator2 = (0, _getIterator3.default)(element), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                                var node = _step2.value;

                                var newElement = node.cloneNode(false);
                                newElement.innerHTML = html;
                                node.parentNode.replaceChild(newElement, node);
                            }
                        } catch (err) {
                            _didIteratorError2 = true;
                            _iteratorError2 = err;
                        } finally {
                            try {
                                if (!_iteratorNormalCompletion2 && _iterator2.return) {
                                    _iterator2.return();
                                }
                            } finally {
                                if (_didIteratorError2) {
                                    throw _iteratorError2;
                                }
                            }
                        }
                    } else {
                        console.error('Unknown selector \'' + selector + '\' for section ' + section.sectionId);
                    }
                }

                function renderSections(sections) {
                    var _config2 = config,
                        requestedSections = _config2.requestedSections;


                    for (var section in sections) {
                        var currentSection = sections[section];
                        var requestedSection = requestedSections[currentSection.requestedSectionId];
                        var hasRequestedSection = typeof requestedSection !== 'undefined';

                        currentSection.sectionId = section;

                        if (config.isCustom) {
                            currentSection.selector = requestedSection.selector || '';
                        }

                        if (currentSection.html && !currentSection.control) {
                            displaySectionHTML(currentSection);
                        }

                        if (currentSection.selector) {
                            addImpression(currentSection);
                            appendClickListener(currentSection);
                        }

                        sections[section] = clean(currentSection);

                        if (currentSection.error || currentSection.errorMessage) {
                            if (hasRequestedSection && typeof requestedSection.onError === 'function') {
                                requestedSection.onError(sections[section]);
                            }
                        } else if (hasRequestedSection && typeof requestedSection.onSuccess === 'function') {
                            requestedSection.onSuccess(sections[section]);
                        }
                    }
                    return sections;
                }

                function fetchPersonalizeError(response, onError) {
                    if (typeof onError === 'function') {
                        return onError(response);
                    } else if (config && typeof config.onError === 'function') {
                        return config.onError(response);
                    }
                    return console.error('Personalize call failed. ' + response);
                }

                function fetchPersonalizeSuccess(response, onSuccess) {
                    var testId = response.testId,
                        customerId = response.customerId,
                        _response$sections = response.sections,
                        sections = _response$sections === undefined ? {} : _response$sections,
                        _response$overlays = response.overlays,
                        overlays = _response$overlays === undefined ? {} : _response$overlays;

                    var doNotTrack = response.doNotTrack;

                    if (typeof testId !== 'undefined') {
                        _cookies2.default.delete('sailthru_test_id');
                        _cookies2.default.create('sailthru_test_id', testId, 365 * _constants.CONVERT_DAY_TO_MINUTES);
                    }

                    if (typeof response.pageview !== 'undefined') {
                        var pageviewError = response.pageview.error || response.pageview.message;
                        var sailthruContent = response.pageview.contentHash;
                        var sailthruVisitor = response.pageview.visitorId;

                        if (typeof pageviewError !== 'undefined') {
                            console.error('Pageview error ' + pageviewError);
                        } else {
                            _cookies2.default.updateSailthruContentCookie(sailthruContent);
                            if (sailthruVisitor) {
                                _cookies2.default.delete('sailthru_visitor');
                                _cookies2.default.create('sailthru_visitor', sailthruVisitor, 365 * _constants.CONVERT_DAY_TO_MINUTES);
                            }
                        }
                    }

                    config.customerId = customerId || config.customerId;

                    config.sections = renderSections(sections);
                    if (overlay.setPreview()) {
                        var overlayId = (0, _keys2.default)(overlays)[0];
                        if (overlayId !== undefined) {
                            config.overlay = overlay.renderOverlay(overlays[overlayId]);
                        } else {
                            console.warn("No overlay to preview. put a valid overlay id!");
                        }
                    } else {
                        config.overlay = overlay.renderOverlays(overlays);
                    }

                    if (doNotTrack) {
                        _cookies2.default.setSailthruHid(_constants.DO_NOT_TRACK);
                        _cookies2.default.handleGDPR();
                    }

                    if (typeof onSuccess === 'function') {
                        onSuccess(config.sections);
                    }

                    if (typeof config.onSuccess === 'function') {
                        config.onSuccess(config.sections);
                    }
                }

                function checkPersonalizeResponse(response, referrerUrl) {
                    if (window.location != referrerUrl) {
                        if (urlUtility.urlFragmentParams[_constants.OVERLAY_PARAM_DEBUG]) {
                            console.log('window.location', window.location);
                            console.log('referrerUrl', referrerUrl);
                        }
                        throw Error('Response for different page.');
                    }
                    if (!response) {
                        throw Error('No personalize response.');
                    }
                    return response.json();
                }

                function getPageUrl() {
                    var url = window.location.toString();
                    if (!!url) {
                        var fragmentIx = url.indexOf('#');
                        if (fragmentIx >= 0) {
                            url = url.slice(0, fragmentIx);
                        }
                    }
                    return url;
                }

                var defaultFn = function defaultFn(options) {
                    config = options;
                    overlay = (0, _overlay2.default)(config);
                    track = (0, _track2.default)(config);
                    urlUtility = (0, _urlUtil2.default)();
                    sessionOverlay = (0, _sessionOverlay2.default)();

                    return {
                        fetchPersonalize: function fetchPersonalize(url, referrerUrl) {
                            var callbacks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

                            if (!referrerUrl) {
                                throw Error('Missing referrerUrl from personalize call');
                            }

                            var headers = new Headers({
                                Accept: 'application/json',
                                'Content-Type': 'application/json',
                                'X-Lib-Version': config.VERSION,
                                Authorization: 'Bearer ' + config.customerId,
                                'X-Referring-URL': getPageUrl()
                            });

                            return fetch(url, {
                                credentials: 'same-origin',
                                headers: headers
                            }).then(function(response) {
                                return checkPersonalizeResponse(response, referrerUrl);
                            }).then(function(json) {
                                if (json && (json.error || json.message)) {
                                    return fetchPersonalizeError(json, callbacks.onError);
                                }
                                return fetchPersonalizeSuccess(json, callbacks.onSuccess);
                            }).catch(function(response) {
                                return fetchPersonalizeError(response, callbacks.onError);
                            });
                        }
                    };
                };

                exports.default = defaultFn;
                /* WEBPACK VAR INJECTION */
            }.call(exports, __webpack_require__(42)))

            /***/
        },
        /* 96 */
        /***/
        function(module, exports, __webpack_require__) {

            module.exports = {
                "default": __webpack_require__(97),
                __esModule: true
            };

            /***/
        },
        /* 97 */
        /***/
        function(module, exports, __webpack_require__) {

            __webpack_require__(67);
            __webpack_require__(54);
            module.exports = __webpack_require__(98);

            /***/
        },
        /* 98 */
        /***/
        function(module, exports, __webpack_require__) {

            var anObject = __webpack_require__(14),
                get = __webpack_require__(99);
            module.exports = __webpack_require__(9).getIterator = function(it) {
                var iterFn = get(it);
                if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
                return anObject(iterFn.call(it));
            };

            /***/
        },
        /* 99 */
        /***/
        function(module, exports, __webpack_require__) {

            var classof = __webpack_require__(100),
                ITERATOR = __webpack_require__(65)('iterator'),
                Iterators = __webpack_require__(59);
            module.exports = __webpack_require__(9).getIteratorMethod = function(it) {
                if (it != undefined) return it[ITERATOR] ||
                    it['@@iterator'] ||
                    Iterators[classof(it)];
            };

            /***/
        },
        /* 100 */
        /***/
        function(module, exports, __webpack_require__) {

            // getting tag from 19.1.3.6 Object.prototype.toString()
            var cof = __webpack_require__(28),
                TAG = __webpack_require__(65)('toStringTag')
                // ES3 wrong here
                ,
                ARG = cof(function() {
                    return arguments;
                }()) == 'Arguments';

            // fallback for IE11 Script Access Denied error
            var tryGet = function(it, key) {
                try {
                    return it[key];
                } catch (e) { /* empty */ }
            };

            module.exports = function(it) {
                var O, T, B;
                return it === undefined ? 'Undefined' : it === null ? 'Null'
                    // @@toStringTag case
                    :
                    typeof(T = tryGet(O = Object(it), TAG)) == 'string' ? T
                    // builtinTag case
                    :
                    ARG ? cof(O)
                    // ES3 arguments fallback
                    :
                    (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
            };

            /***/
        },
        /* 101 */
        /***/
        function(module, exports, __webpack_require__) {

            'use strict';

            Object.defineProperty(exports, "__esModule", {
                value: true
            });

            var _getIterator2 = __webpack_require__(96);

            var _getIterator3 = _interopRequireDefault(_getIterator2);

            var _keys = __webpack_require__(47);

            var _keys2 = _interopRequireDefault(_keys);

            var _typeof2 = __webpack_require__(51);

            var _typeof3 = _interopRequireDefault(_typeof2);

            var _extends2 = __webpack_require__(3);

            var _extends3 = _interopRequireDefault(_extends2);

            var _promise = __webpack_require__(102);

            var _promise2 = _interopRequireDefault(_promise);

            var _mobileDetect = __webpack_require__(116);

            var _mobileDetect2 = _interopRequireDefault(_mobileDetect);

            var _cookies = __webpack_require__(89);

            var _cookies2 = _interopRequireDefault(_cookies);

            var _overlayFormElements = __webpack_require__(118);

            var _overlayFormElements2 = _interopRequireDefault(_overlayFormElements);

            var _urlUtil = __webpack_require__(93);

            var _urlUtil2 = _interopRequireDefault(_urlUtil);

            var _trackOverlay = __webpack_require__(119);

            var _trackOverlay2 = _interopRequireDefault(_trackOverlay);

            var _integration = __webpack_require__(94);

            var _integration2 = _interopRequireDefault(_integration);

            var _sessionOverlay = __webpack_require__(121);

            var _sessionOverlay2 = _interopRequireDefault(_sessionOverlay);

            var _timeOverlay = __webpack_require__(122);

            var _timeOverlay2 = _interopRequireDefault(_timeOverlay);

            var _uuidUtil = __webpack_require__(120);

            var _uuidUtil2 = _interopRequireDefault(_uuidUtil);

            var _constants = __webpack_require__(90);

            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default: obj
                };
            }

            var _Promise = typeof _promise2.default === 'undefined' ? __webpack_require__(44).Promise : _promise2.default;

            var config = void 0;
            var trackOverlay = void 0;
            var integration = void 0;
            var urlUtility = void 0;
            var isPreview = false;
            var redirectUrl = void 0;
            var currentOverlay = null;
            var currentExitIntent = null;
            var sessionOverlay = void 0;
            var timeOverlay = void 0;

            var ENTER_KEY = 13;
            var ESC_KEY = 27;
            var OVERLAY_TIMEOUT = 5000;

            function disableBackground() {
                if (document.body && document.body.classList) {
                    document.body.classList.add('sailthru-overlay-no-scroll');
                }
            }

            function enableBackground() {
                if (document.body && document.body.classList) {
                    document.body.classList.remove('sailthru-overlay-no-scroll');
                }
            }

            function hideOverlay() {
                enableBackground();
                var overlayContainerElems = document.getElementsByClassName('sailthru-overlay-container');
                for (var ix = 0; ix < overlayContainerElems.length; ++ix) {
                    var overlayContainerElem = overlayContainerElems[ix];
                    overlayContainerElem.parentElement.removeChild(overlayContainerElem);
                }
                if (document.getElementsByTagName('body') && document.getElementsByTagName('body')[0] && document.getElementsByTagName('body')[0].classList) {
                    document.getElementsByTagName('body')[0].classList.remove('sailthru-pushdown');
                    document.getElementsByTagName('body')[0].classList.remove('sailthru-pushdown-animation');
                }

                if (currentOverlay && currentOverlay.overlay_id && sessionOverlay.getStickyOverlayId() === currentOverlay.overlay_id) {
                    sessionOverlay.dismiss(currentOverlay.overlay_id);
                }

                currentOverlay = null;
            }

            function hideOverlayWithDelay(milliseconds) {
                setTimeout(function() {
                    hideOverlay();
                }, milliseconds);
            }

            function removeScriptTags(inputString) {
                return inputString.replace(/<\/*\s*script.*?>/ig, '');
            }

            function validateEmail(email) {
                // https://github.com/php/php-src/blob/250938e2d35fc54161a18167b7901c5e3b574371/ext/filter/logical_filters.c#L575-L627
                // Same regex used in the backend. See /dev/jvm/commons/src/main/java/com/sailthru/commons/util/Validate.java
                var emailRegex = /^(?!(?:(?:\x22?\x5C[\x00-\x7E]\x22?)|(?:\x22?[^\x5C\x22]\x22?)){255,})(?!(?:(?:\x22?\x5C[\x00-\x7E]\x22?)|(?:\x22?[^\x5C\x22]\x22?)){65,}@)(?:(?:[\x21\x23-\x27\x2A\x2B\x2D\x2F-\x39\x3D\x3F\x5E-\x7E]+)|(?:\x22(?:[\x01-\x08\x0B\x0C\x0E-\x1F\x21\x23-\x5B\x5D-\x7F]|(?:\x5C[\x00-\x7F]))*\x22))(?:\.(?:(?:[\x21\x23-\x27\x2A\x2B\x2D\x2F-\x39\x3D\x3F\x5E-\x7E]+)|(?:\x22(?:[\x01-\x08\x0B\x0C\x0E-\x1F\x21\x23-\x5B\x5D-\x7F]|(?:\x5C[\x00-\x7F]))*\x22)))*@(?:(?:(?!.*[^.]{64,})(?:(?:(?:xn--)?[a-z0-9]+(?:-[a-z0-9]+)*\.){1,126}){1,}(?:(?:[a-z][a-z0-9]*)|(?:(?:xn--)[a-z0-9]+))(?:-[a-z0-9]+)*)|(?:\[(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){7})|(?:(?!(?:.*[a-f0-9][:\]]){7,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?)))|(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){5}:)|(?:(?!(?:.*[a-f0-9]:){5,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3}:)?)))?(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))(?:\.(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))){3}))\]))$/i;
                return emailRegex.test(email);
            }

            function showEmailValidationError() {
                document.getElementsByClassName('sailthru-overlay-validation-error')[0].style.display = 'block';
                var emailInput = document.querySelector('#sailthru-user-acquisition-email');
                var emailInputClasses = emailInput.className;
                if (emailInputClasses.indexOf('has-error') < 0) {
                    if (!emailInputClasses.endsWith(' ')) {
                        emailInputClasses += ' ';
                    }
                    emailInputClasses += 'has-error';
                }
                emailInput.className = emailInputClasses;
            }

            function hideEmailValidationError() {
                document.getElementsByClassName('sailthru-overlay-validation-error')[0].style.display = 'none';
                var emailInput = document.querySelector('#sailthru-user-acquisition-email');
                var emailInputClasses = emailInput.className;
                emailInputClasses = emailInputClasses.replace(/[^\s]has-error/g, '');
                emailInput.className = emailInputClasses;
            }

            function showPostClickMessage() {
                document.getElementsByClassName('sailthru-overlay')[0].style.display = 'none';
                document.getElementsByClassName('sailthru-overlay-post-click')[0].style.display = 'inherit';
            }

            function getSafeEmail() {
                var email = document.getElementById('sailthru-user-acquisition-email').value;
                return removeScriptTags(email);
            }

            function generateRedirectUrl(postClickUrl, email, vars) {
                var url = postClickUrl;
                var hasQuery = url.indexOf('?') !== -1;
                var hasHash = url.indexOf('#') !== -1;
                var encodedEmail = encodeURIComponent(email);

                var encodedVars = '';
                for (var key in vars) {
                    encodedVars += '&' + key + '=' + encodeURIComponent(vars[key]);
                }

                if (hasQuery && hasHash) {
                    url = url.replace('#', '&em=' + encodedEmail + encodedVars + '#');
                } else if (hasQuery && !hasHash) {
                    url = url + '&em=' + encodedEmail + encodedVars;
                } else if (!hasQuery && hasHash) {
                    url = url.replace('#', '?em=' + encodedEmail + encodedVars + '#');
                } else if (!hasQuery && !hasHash) {
                    url = url + '?em=' + encodedEmail + encodedVars;
                }
                return url;
            }

            function handlePostClick(postClick, email, vars) {
                if (postClick && postClick.redirect && postClick.redirect.active && postClick.redirect.url) {
                    var url = generateRedirectUrl(postClick.redirect.url, email, vars);
                    if (!postClick.redirect.new_tab) {
                        window.location = url;
                    }
                    hideOverlay();
                    return 'Redirecting to ' + url;
                } else if (postClick && postClick.message && postClick.message.active && postClick.message.text) {
                    showPostClickMessage();
                    hideOverlayWithDelay(OVERLAY_TIMEOUT);
                    return 'Display Message: ' + postClick.message.text;
                }

                hideOverlay();
                return 'No Post-click Action';
            }

            function getOnSuccess(overlay, email, vars) {
                return function onSuccess(response) {
                    if (urlUtility.urlFragmentParams[_constants.OVERLAY_PARAM_DEBUG]) {
                        console.log('userSignUp SUCCESS', response);
                    }

                    trackOverlay.conversion(overlay, email);

                    var onSignupResult = -1;
                    if (typeof config.onSignupSuccess === 'function') {
                        try {
                            onSignupResult = config.onSignupSuccess({
                                email: email,
                                vars: (0, _extends3.default)({}, vars),
                                response: response
                            });

                            if (onSignupResult == 0) {
                                hideOverlay();
                                return 0;
                            }
                        } catch (callbackErr) {
                            console.log('onSignupSuccess encountered an error:', callbackErr);
                            onSignupResult = 0;
                        }
                    }

                    var result = handlePostClick(overlay.post_click, email, vars);
                    if (urlUtility.urlFragmentParams[_constants.OVERLAY_PARAM_DEBUG]) {
                        console.log('onSignupSuccess returned ' + onSignupResult + ' with post-click: ' + result);
                    }
                    return onSignupResult;
                };
            }

            function getOnError(email) {
                return function onError(response) {
                    console.log('userSignUp ERROR', response);

                    var onSignupResult = -1;
                    if (typeof config.onSignupError === 'function') {
                        try {
                            onSignupResult = config.onSignupError({
                                email: email,
                                error: response.error || 'There was an error with your request'
                            });
                        } catch (callbackErr) {
                            console.log('onSignupError encountered an error:', callbackErr);
                            onSignupResult = 0;
                        }
                    }
                    hideOverlay();
                    console.log('onSignupError returned ' + onSignupResult);
                    return onSignupResult;
                };
            }

            function getVars(overlay) {
                var userVars = _overlayFormElements2.default.getVars();
                return (0, _extends3.default)({}, userVars, {
                    source: overlay.acquisition_source || 'overlay'
                });
            }

            function onOverlayButtonClick(overlay) {
                var safeEmail = getSafeEmail();
                var destinationLists = overlay.destination_lists;

                if (safeEmail && validateEmail(safeEmail)) {
                    var _ret = function() {
                        hideEmailValidationError();

                        var isConfirmOptIn = overlay.template !== '';
                        var idAndKey = {
                            id: safeEmail,
                            key: 'email'
                        };

                        var vars = getVars(overlay);
                        var onSuccess = getOnSuccess(overlay, safeEmail, vars);
                        var onError = getOnError(safeEmail);

                        if (isConfirmOptIn) {
                            var template = {
                                name: overlay.template,
                                vars: {
                                    signup_lists: destinationLists
                                }
                            };

                            return {
                                v: integration.userSignUpConfirmedOptIn(idAndKey, {
                                    vars: vars,
                                    template: template,
                                    onSuccess: onSuccess,
                                    onError: onError
                                })
                            };
                        }
                        var lists = {};
                        if (destinationLists) {
                            destinationLists.forEach(function(list) {
                                lists[list] = 1;
                            });
                        }
                        return {
                            v: integration.userSignUp(idAndKey.id, {
                                lists: lists,
                                vars: vars,
                                onSuccess: onSuccess,
                                onError: onError
                            })
                        };
                    }();

                    if ((typeof _ret === 'undefined' ? 'undefined' : (0, _typeof3.default)(_ret)) === "object") return _ret.v;
                }
                showEmailValidationError();
                document.querySelector('#sailthru-user-acquisition-email').focus();
                console.error('Invalid Email');

                return false;
            }

            function isShowOverlaySet() {
                return urlUtility.urlFragmentParams[_constants.OVERLAY_PARAM_SHOW_OVERLAY] === '1';
            }

            function matchFrequency(frequency, overlayId, mockStorage) {
                var localStorage = mockStorage || window.localStorage;
                var overlayCookie = _cookies2.default.read('sailthru_overlays');

                if (isShowOverlaySet()) {
                    return true;
                }

                switch (frequency) {
                    case 'every-pageview':
                        return true;
                    case 'once-visit':
                        if (overlayCookie.indexOf(overlayId) === -1) {
                            _cookies2.default.create('sailthru_overlays', '' + overlayId + overlayCookie, 30);
                            return true;
                        }
                        return false;
                    case 'once-ever':
                        if (localStorage.getItem('sailthruOverlay')) {
                            if (localStorage.getItem('sailthruOverlay').indexOf(overlayId) === -1) {
                                try {
                                    localStorage.setItem('sailthruOverlay', '' + overlayId + localStorage.getItem('sailthruOverlay'));
                                } catch (e) {
                                    localStorage.setItem('sailthruOverlay', '' + overlayId + localStorage.getItem('sailthruOverlay').slice(0, -36));
                                }
                                return true;
                            }
                            return false;
                        }
                        localStorage.setItem('sailthruOverlay', overlayId);
                        return true;
                    default:
                        return false;
                }
            }

            function isDeviceMobile() {
                var md = new _mobileDetect2.default(window.navigator.userAgent);
                var isMobile = md.mobile() || md.phone() || md.tablet();
                return isMobile;
            }

            function matchTargetDevice(targetDevice) {
                var isMobile = isDeviceMobile();
                if (targetDevice === 'mobile-only' && !isMobile) {
                    return false;
                }
                if (targetDevice === 'desktop-only' && isMobile) {
                    return false;
                }
                return true;
            }

            function parseHtmlStringAndAddToDomBody(html) {
                var DOMParser = new window.DOMParser();
                document.body.appendChild(DOMParser.parseFromString(html, 'text/html').body.firstChild);
            }

            function onEmailInputFocus() {
                hideEmailValidationError();
            }

            function addCallToActionListeners(overlay) {
                var overlayButton = document.querySelector('#sailthru-overlay-call-to-action');
                var overlayEmailInput = document.querySelector('#sailthru-user-acquisition-email');

                if (overlayButton) {
                    overlayButton.addEventListener('click', function() {
                        onOverlayButtonClick(overlay);
                    });
                    // This listener is needed to prevent pop-up blockers for post_click open in new_tab option
                    overlayEmailInput.addEventListener('input', function() {
                        var postClick = overlay.post_click;
                        if (postClick && postClick.redirect && postClick.redirect.active && postClick.redirect.new_tab && validateEmail(this.value)) {
                            var vars = getVars(overlay);
                            var safeEmail = getSafeEmail();
                            redirectUrl = generateRedirectUrl(postClick.redirect.url, safeEmail, vars);
                            overlayButton.href = redirectUrl;
                            overlayButton.target = '_blank';
                        } else {
                            overlayButton.removeAttribute('href');
                            overlayButton.removeAttribute('target');
                        }
                    });
                }

                if (overlayEmailInput) {
                    overlayEmailInput.addEventListener('keydown', function(event) {
                        onEmailInputFocus();
                        var key = event.which || event.keyCode;
                        if (key === ENTER_KEY) {
                            document.querySelector('#sailthru-overlay-call-to-action').click();
                        }
                    });
                }
            }

            function addPostClickCloseListeners() {
                var postClickContainer = document.querySelector('.sailthru-overlay-post-click');
                if (!postClickContainer) {
                    return;
                }
                var postClickCloseButtons = postClickContainer.querySelectorAll('.sailthru-overlay-close');

                if (postClickCloseButtons) {
                    for (var i = 0; i < postClickCloseButtons.length; i += 1) {
                        postClickCloseButtons[i].addEventListener('click', function() {
                            hideOverlay();
                        });
                    }
                }

                document.addEventListener('keydown', function(event) {
                    var key = event.which || event.keyCode;
                    var isVisible = window.getComputedStyle(postClickContainer).getPropertyValue('display') !== 'none';
                    if (key === ESC_KEY && isVisible) {
                        hideOverlay();
                    }
                });
            }

            function addAllCloseListeners() {
                var overlayCloseButtons = document.querySelectorAll('.sailthru-overlay-close');
                if (overlayCloseButtons) {
                    for (var i = 0; i < overlayCloseButtons.length; i += 1) {
                        overlayCloseButtons[i].addEventListener('click', function() {
                            hideOverlay();
                        });
                    }
                }

                document.addEventListener('keydown', function(event) {
                    var key = event.which || event.keyCode;
                    if (key === ESC_KEY) {
                        hideOverlay();
                    }
                });
            }

            function addLinkListeners(overlay) {
                var elements = document.getElementById('sailthru-overlay-container').getElementsByTagName('a');
                for (var i = 0, len = elements.length; i < len; i += 1) {
                    if (!elements[i].id || elements[i].id !== 'sailthru-overlay-call-to-action') {
                        elements[i].onclick = function() {
                            trackOverlay.click(overlay);
                            hideOverlay();
                        };
                    }
                }
            }

            function displayOverlayHTML(overlay, mouseLeaveHandler) {
                if (currentOverlay) {
                    return;
                }
                currentOverlay = overlay;

                var prevOverlayElems = document.getElementsByClassName('sailthru-overlay');
                for (var ix = prevOverlayElems.length - 1; ix >= 0; --ix) {
                    try {
                        document.body.removeChild(prevOverlayElems[ix]);
                    } catch (ex) {
                        // Swallow this exception.
                    }
                }

                parseHtmlStringAndAddToDomBody(overlay.html);
                disableBackground();

                if (overlay.allow_close === false) {
                    addPostClickCloseListeners();
                } else {
                    addAllCloseListeners();
                }
                addLinkListeners(overlay);
                addCallToActionListeners(overlay);

                if (!isPreview) {
                    trackOverlay.view(overlay);
                }
                if (overlay.exit_intent) {
                    document.getElementsByClassName('sailthru-overlay')[0].classList.add('sailthru-overlay-animation');
                    document.documentElement.removeEventListener('mouseleave', mouseLeaveHandler);
                }

                var defaultTransition = overlay.bar_transition === 'Default';
                var noTransition = overlay.bar_transition === 'None';
                var inlineFlow = overlay.bar_flow === 'Inline';
                var fixedFlow = overlay.bar_flow === 'Fixed';
                var positionTop = overlay.position === 'top';

                if (defaultTransition && inlineFlow && positionTop) {
                    document.getElementsByClassName('sailthru-overlay')[0].classList.add('sailthru-slidedown');
                    document.getElementsByTagName('body')[0].classList.add('sailthru-pushdown-animation');
                } else if (defaultTransition && fixedFlow && positionTop) {
                    document.getElementsByClassName('sailthru-overlay')[0].classList.add('sailthru-slidedown');
                } else if (defaultTransition && fixedFlow) {
                    document.getElementsByClassName('sailthru-overlay')[0].classList.add('sailthru-slideup');
                } else if (noTransition && inlineFlow) {
                    document.getElementsByTagName('body')[0].classList.add('sailthru-pushdown');
                }

                /*
                The following is a work-around to IE11 failing to display div background image
                that's specified via computed CSS.  Setting it explicitly as an inline style
                fixes the issue on Windows 8.1 and 10.  For extra safety, it's being done here
                both synchronously and asynchronously with a timeout.
                */
                var debug = urlUtility.urlFragmentParams[_constants.OVERLAY_PARAM_DEBUG];
                var inlineStyleDelayMsStr = urlUtility.urlFragmentParams[_constants.OVERLAY_PARAM_INLINE_STYLE_DELAY];
                var inlineStyleDelayMs = inlineStyleDelayMsStr && parseInt(inlineStyleDelayMsStr) || 50;
                var inlineStyleWorker = function inlineStyleWorker() {
                    // This will ensure we only apply this to IE 11.
                    if (window.navigator.userAgent.indexOf('Trident') < 0) {
                        return;
                    }
                    var overlayElem = document.getElementsByClassName('sailthru-overlay')[0];
                    var computedBgImage = window.getComputedStyle(overlayElem, null)['background-image'];
                    if (computedBgImage) {
                        overlayElem.style['background-image'] = computedBgImage;
                        if (debug) {
                            console.log('Setting background-image to ' + computedBgImage + '.');
                        }
                    }

                    var computedHeight = window.getComputedStyle(overlayElem, null)['height'];
                    if (debug) {
                        console.log('Setting height to ' + computedHeight + '.');
                    }
                    overlayElem.style['height'] = computedHeight;
                };
                inlineStyleWorker();
                if (debug) {
                    console.log('Scheduling inline CSS resets after ' + inlineStyleDelayMs + ' ms.');
                }
                setTimeout(inlineStyleWorker, inlineStyleDelayMs);
            }

            function isTargetMatch(overlay) {
                return matchTargetDevice(overlay.target_device) && matchFrequency(overlay.frequency, overlay.overlay_id);
            }

            function displayPersonalizedOverlayHTML(overlay, mouseLeaveHandler) {
                if (isPreview || isTargetMatch(overlay)) {
                    displayOverlayHTML(overlay, mouseLeaveHandler);
                }
            }

            var addExitIntentListener = function addExitIntentListener(overlay) {
                currentExitIntent = overlay;
                var mouseLeaveHandler = function mouseLeaveHandler(event) {
                    var sensitivity = 20;
                    if (event.clientY > sensitivity || currentExitIntent != overlay) {
                        return;
                    }
                    displayPersonalizedOverlayHTML(overlay, mouseLeaveHandler);
                };
                return mouseLeaveHandler;
            };

            function renderOverlay(overlay) {
                if (overlay.exit_intent) {
                    var exitIntentHandler = addExitIntentListener(overlay);
                    document.documentElement.addEventListener('mouseleave', exitIntentHandler);
                } else if (overlay.timer) {
                    timeOverlay.renderTimeDelayedOverlay(overlay);
                } else {
                    displayPersonalizedOverlayHTML(overlay);
                }
                return overlay;
            }

            function renderOverlays(overlays) {
                var newOverlays = {};
                (0, _keys2.default)(overlays).forEach(function(key) {
                    var overlay = overlays[key];
                    renderOverlay(overlay);
                    newOverlays[key] = overlay;
                });
                return newOverlays;
            }

            function isPageviewsOverrideSet() {
                var anchor = _constants.OVERLAY_PARAM_PAGEVIEWS_OVERRIDE + '=1';
                var result = window.location.hash.indexOf(anchor) != -1;
                if (result) {
                    console.log('Overriding pageviews count with anchor "' + anchor + '".');
                }
                return result;
            }

            function getOncePerVisitOverlayList() {
                var overlayCookie = _cookies2.default.read('sailthru_overlays');
                return _uuidUtil2.default.parseUuidsList(overlayCookie);
            }

            function getOnceEverOverlayList(mockStorage) {
                var localStorage = mockStorage || window.localStorage;
                var localStorageOverlays = localStorage.getItem('sailthruOverlay');
                return _uuidUtil2.default.parseUuidsList(localStorageOverlays);
            }

            function getUrlParameters() {
                var params = [];

                var previewId = urlUtility.getPreviewIdFromAnchor();
                if (previewId) {
                    console.log('previewing overlay ' + previewId);
                    params.push('preview=' + previewId);
                }

                var pageviewsCount = isPageviewsOverrideSet() ? '10000' : _cookies2.default.read('sailthru_pageviews');
                if (pageviewsCount) {
                    params.push('pageviews=' + pageviewsCount);
                }

                var isMobile = isDeviceMobile() ? '1' : '0';
                params.push('isMobile=' + isMobile);

                var sessionOverlayId = sessionOverlay.triggerStickyOverlay();
                if (sessionOverlayId) {
                    params.push('echo=' + sessionOverlayId);
                }

                params = urlUtility.pushLandingPageParams(params);

                var _iteratorNormalCompletion = true;
                var _didIteratorError = false;
                var _iteratorError = undefined;

                try {
                    for (var _iterator = (0, _getIterator3.default)(getOncePerVisitOverlayList()), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                        var overlayId = _step.value;

                        params.push('so=' + overlayId);
                    }
                } catch (err) {
                    _didIteratorError = true;
                    _iteratorError = err;
                } finally {
                    try {
                        if (!_iteratorNormalCompletion && _iterator.return) {
                            _iterator.return();
                        }
                    } finally {
                        if (_didIteratorError) {
                            throw _iteratorError;
                        }
                    }
                }

                var _iteratorNormalCompletion2 = true;
                var _didIteratorError2 = false;
                var _iteratorError2 = undefined;

                try {
                    for (var _iterator2 = (0, _getIterator3.default)(getOnceEverOverlayList()), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                        var _overlayId = _step2.value;

                        params.push('oo=' + _overlayId);
                    }
                } catch (err) {
                    _didIteratorError2 = true;
                    _iteratorError2 = err;
                } finally {
                    try {
                        if (!_iteratorNormalCompletion2 && _iterator2.return) {
                            _iterator2.return();
                        }
                    } finally {
                        if (_didIteratorError2) {
                            throw _iteratorError2;
                        }
                    }
                }

                return params;
            }

            function buildOverlayUrl() {
                var domainAndPath = config.personalizeDomain + '/v1/personalize/initialize?';

                var params = getUrlParameters();

                params = urlUtility.pushUserIdKeyAndUserIdValue(config, params);

                return _Promise.resolve(domainAndPath + params.join('&'));
            }

            function setPreview() {
                if (urlUtility.isPreview()) {
                    isPreview = true;
                }
                return isPreview;
            }

            var defaultFn = function defaultFn(options) {
                config = options;
                trackOverlay = (0, _trackOverlay2.default)(config);
                integration = (0, _integration2.default)(config);
                urlUtility = (0, _urlUtil2.default)();
                sessionOverlay = (0, _sessionOverlay2.default)();
                timeOverlay = (0, _timeOverlay2.default)(displayPersonalizedOverlayHTML);

                return {
                    hideOverlay: hideOverlay,
                    buildOverlayUrl: buildOverlayUrl,
                    renderOverlays: renderOverlays,
                    renderOverlay: renderOverlay,
                    isShowOverlaySet: isShowOverlaySet,
                    setPreview: setPreview,
                    getUrlParameters: getUrlParameters
                };
            };

            exports.default = defaultFn;

            /***/
        },
        /* 102 */
        /***/
        function(module, exports, __webpack_require__) {

            module.exports = {
                "default": __webpack_require__(103),
                __esModule: true
            };

            /***/
        },
        /* 103 */
        /***/
        function(module, exports, __webpack_require__) {

            __webpack_require__(83);
            __webpack_require__(54);
            __webpack_require__(67);
            __webpack_require__(104);
            module.exports = __webpack_require__(9).Promise;

            /***/
        },
        /* 104 */
        /***/
        function(module, exports, __webpack_require__) {

            'use strict';
            var LIBRARY = __webpack_require__(57),
                global = __webpack_require__(8),
                ctx = __webpack_require__(10),
                classof = __webpack_require__(100),
                $export = __webpack_require__(7),
                isObject = __webpack_require__(15),
                aFunction = __webpack_require__(11),
                anInstance = __webpack_require__(105),
                forOf = __webpack_require__(106),
                speciesConstructor = __webpack_require__(109),
                task = __webpack_require__(110).set,
                microtask = __webpack_require__(112)(),
                PROMISE = 'Promise',
                TypeError = global.TypeError,
                process = global.process,
                $Promise = global[PROMISE],
                process = global.process,
                isNode = classof(process) == 'process',
                empty = function() { /* empty */ },
                Internal, GenericPromiseCapability, Wrapper;

            var USE_NATIVE = !! function() {
                try {
                    // correct subclassing with @@species support
                    var promise = $Promise.resolve(1),
                        FakePromise = (promise.constructor = {})[__webpack_require__(65)('species')] = function(exec) {
                            exec(empty, empty);
                        };
                    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
                    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
                } catch (e) { /* empty */ }
            }();

            // helpers
            var sameConstructor = function(a, b) {
                // with library wrapper special case
                return a === b || a === $Promise && b === Wrapper;
            };
            var isThenable = function(it) {
                var then;
                return isObject(it) && typeof(then = it.then) == 'function' ? then : false;
            };
            var newPromiseCapability = function(C) {
                return sameConstructor($Promise, C) ?
                    new PromiseCapability(C) :
                    new GenericPromiseCapability(C);
            };
            var PromiseCapability = GenericPromiseCapability = function(C) {
                var resolve, reject;
                this.promise = new C(function($$resolve, $$reject) {
                    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
                    resolve = $$resolve;
                    reject = $$reject;
                });
                this.resolve = aFunction(resolve);
                this.reject = aFunction(reject);
            };
            var perform = function(exec) {
                try {
                    exec();
                } catch (e) {
                    return {
                        error: e
                    };
                }
            };
            var notify = function(promise, isReject) {
                if (promise._n) return;
                promise._n = true;
                var chain = promise._c;
                microtask(function() {
                    var value = promise._v,
                        ok = promise._s == 1,
                        i = 0;
                    var run = function(reaction) {
                        var handler = ok ? reaction.ok : reaction.fail,
                            resolve = reaction.resolve,
                            reject = reaction.reject,
                            domain = reaction.domain,
                            result, then;
                        try {
                            if (handler) {
                                if (!ok) {
                                    if (promise._h == 2) onHandleUnhandled(promise);
                                    promise._h = 1;
                                }
                                if (handler === true) result = value;
                                else {
                                    if (domain) domain.enter();
                                    result = handler(value);
                                    if (domain) domain.exit();
                                }
                                if (result === reaction.promise) {
                                    reject(TypeError('Promise-chain cycle'));
                                } else if (then = isThenable(result)) {
                                    then.call(result, resolve, reject);
                                } else resolve(result);
                            } else reject(value);
                        } catch (e) {
                            reject(e);
                        }
                    };
                    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
                    promise._c = [];
                    promise._n = false;
                    if (isReject && !promise._h) onUnhandled(promise);
                });
            };
            var onUnhandled = function(promise) {
                task.call(global, function() {
                    var value = promise._v,
                        abrupt, handler, console;
                    if (isUnhandled(promise)) {
                        abrupt = perform(function() {
                            if (isNode) {
                                process.emit('unhandledRejection', value, promise);
                            } else if (handler = global.onunhandledrejection) {
                                handler({
                                    promise: promise,
                                    reason: value
                                });
                            } else if ((console = global.console) && console.error) {
                                console.error('Unhandled promise rejection', value);
                            }
                        });
                        // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
                        promise._h = isNode || isUnhandled(promise) ? 2 : 1;
                    }
                    promise._a = undefined;
                    if (abrupt) throw abrupt.error;
                });
            };
            var isUnhandled = function(promise) {
                if (promise._h == 1) return false;
                var chain = promise._a || promise._c,
                    i = 0,
                    reaction;
                while (chain.length > i) {
                    reaction = chain[i++];
                    if (reaction.fail || !isUnhandled(reaction.promise)) return false;
                }
                return true;
            };
            var onHandleUnhandled = function(promise) {
                task.call(global, function() {
                    var handler;
                    if (isNode) {
                        process.emit('rejectionHandled', promise);
                    } else if (handler = global.onrejectionhandled) {
                        handler({
                            promise: promise,
                            reason: promise._v
                        });
                    }
                });
            };
            var $reject = function(value) {
                var promise = this;
                if (promise._d) return;
                promise._d = true;
                promise = promise._w || promise; // unwrap
                promise._v = value;
                promise._s = 2;
                if (!promise._a) promise._a = promise._c.slice();
                notify(promise, true);
            };
            var $resolve = function(value) {
                var promise = this,
                    then;
                if (promise._d) return;
                promise._d = true;
                promise = promise._w || promise; // unwrap
                try {
                    if (promise === value) throw TypeError("Promise can't be resolved itself");
                    if (then = isThenable(value)) {
                        microtask(function() {
                            var wrapper = {
                                _w: promise,
                                _d: false
                            }; // wrap
                            try {
                                then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
                            } catch (e) {
                                $reject.call(wrapper, e);
                            }
                        });
                    } else {
                        promise._v = value;
                        promise._s = 1;
                        notify(promise, false);
                    }
                } catch (e) {
                    $reject.call({
                        _w: promise,
                        _d: false
                    }, e); // wrap
                }
            };

            // constructor polyfill
            if (!USE_NATIVE) {
                // 25.4.3.1 Promise(executor)
                $Promise = function Promise(executor) {
                    anInstance(this, $Promise, PROMISE, '_h');
                    aFunction(executor);
                    Internal.call(this);
                    try {
                        executor(ctx($resolve, this, 1), ctx($reject, this, 1));
                    } catch (err) {
                        $reject.call(this, err);
                    }
                };
                Internal = function Promise(executor) {
                    this._c = []; // <- awaiting reactions
                    this._a = undefined; // <- checked in isUnhandled reactions
                    this._s = 0; // <- state
                    this._d = false; // <- done
                    this._v = undefined; // <- value
                    this._h = 0; // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
                    this._n = false; // <- notify
                };
                Internal.prototype = __webpack_require__(113)($Promise.prototype, {
                    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
                    then: function then(onFulfilled, onRejected) {
                        var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
                        reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
                        reaction.fail = typeof onRejected == 'function' && onRejected;
                        reaction.domain = isNode ? process.domain : undefined;
                        this._c.push(reaction);
                        if (this._a) this._a.push(reaction);
                        if (this._s) notify(this, false);
                        return reaction.promise;
                    },
                    // 25.4.5.1 Promise.prototype.catch(onRejected)
                    'catch': function(onRejected) {
                        return this.then(undefined, onRejected);
                    }
                });
                PromiseCapability = function() {
                    var promise = new Internal;
                    this.promise = promise;
                    this.resolve = ctx($resolve, promise, 1);
                    this.reject = ctx($reject, promise, 1);
                };
            }

            $export($export.G + $export.W + $export.F * !USE_NATIVE, {
                Promise: $Promise
            });
            __webpack_require__(64)($Promise, PROMISE);
            __webpack_require__(114)(PROMISE);
            Wrapper = __webpack_require__(9)[PROMISE];

            // statics
            $export($export.S + $export.F * !USE_NATIVE, PROMISE, {
                // 25.4.4.5 Promise.reject(r)
                reject: function reject(r) {
                    var capability = newPromiseCapability(this),
                        $$reject = capability.reject;
                    $$reject(r);
                    return capability.promise;
                }
            });
            $export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
                // 25.4.4.6 Promise.resolve(x)
                resolve: function resolve(x) {
                    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
                    if (x instanceof $Promise && sameConstructor(x.constructor, this)) return x;
                    var capability = newPromiseCapability(this),
                        $$resolve = capability.resolve;
                    $$resolve(x);
                    return capability.promise;
                }
            });
            $export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(115)(function(iter) {
                $Promise.all(iter)['catch'](empty);
            })), PROMISE, {
                // 25.4.4.1 Promise.all(iterable)
                all: function all(iterable) {
                    var C = this,
                        capability = newPromiseCapability(C),
                        resolve = capability.resolve,
                        reject = capability.reject;
                    var abrupt = perform(function() {
                        var values = [],
                            index = 0,
                            remaining = 1;
                        forOf(iterable, false, function(promise) {
                            var $index = index++,
                                alreadyCalled = false;
                            values.push(undefined);
                            remaining++;
                            C.resolve(promise).then(function(value) {
                                if (alreadyCalled) return;
                                alreadyCalled = true;
                                values[$index] = value;
                                --remaining || resolve(values);
                            }, reject);
                        });
                        --remaining || resolve(values);
                    });
                    if (abrupt) reject(abrupt.error);
                    return capability.promise;
                },
                // 25.4.4.4 Promise.race(iterable)
                race: function race(iterable) {
                    var C = this,
                        capability = newPromiseCapability(C),
                        reject = capability.reject;
                    var abrupt = perform(function() {
                        forOf(iterable, false, function(promise) {
                            C.resolve(promise).then(capability.resolve, reject);
                        });
                    });
                    if (abrupt) reject(abrupt.error);
                    return capability.promise;
                }
            });

            /***/
        },
        /* 105 */
        /***/
        function(module, exports) {

            module.exports = function(it, Constructor, name, forbiddenField) {
                if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
                    throw TypeError(name + ': incorrect invocation!');
                }
                return it;
            };

            /***/
        },
        /* 106 */
        /***/
        function(module, exports, __webpack_require__) {

            var ctx = __webpack_require__(10),
                call = __webpack_require__(107),
                isArrayIter = __webpack_require__(108),
                anObject = __webpack_require__(14),
                toLength = __webpack_require__(31),
                getIterFn = __webpack_require__(99),
                BREAK = {},
                RETURN = {};
            var exports = module.exports = function(iterable, entries, fn, that, ITERATOR) {
                var iterFn = ITERATOR ? function() {
                        return iterable;
                    } : getIterFn(iterable),
                    f = ctx(fn, that, entries ? 2 : 1),
                    index = 0,
                    length, step, iterator, result;
                if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
                // fast case for arrays with default iterator
                if (isArrayIter(iterFn))
                    for (length = toLength(iterable.length); length > index; index++) {
                        result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
                        if (result === BREAK || result === RETURN) return result;
                    } else
                        for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
                            result = call(iterator, f, step.value, entries);
                            if (result === BREAK || result === RETURN) return result;
                        }
            };
            exports.BREAK = BREAK;
            exports.RETURN = RETURN;

            /***/
        },
        /* 107 */
        /***/
        function(module, exports, __webpack_require__) {

            // call something on iterator step with safe closing on error
            var anObject = __webpack_require__(14);
            module.exports = function(iterator, fn, value, entries) {
                try {
                    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
                    // 7.4.6 IteratorClose(iterator, completion)
                } catch (e) {
                    var ret = iterator['return'];
                    if (ret !== undefined) anObject(ret.call(iterator));
                    throw e;
                }
            };

            /***/
        },
        /* 108 */
        /***/
        function(module, exports, __webpack_require__) {

            // check on default Array iterator
            var Iterators = __webpack_require__(59),
                ITERATOR = __webpack_require__(65)('iterator'),
                ArrayProto = Array.prototype;

            module.exports = function(it) {
                return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
            };

            /***/
        },
        /* 109 */
        /***/
        function(module, exports, __webpack_require__) {

            // 7.3.20 SpeciesConstructor(O, defaultConstructor)
            var anObject = __webpack_require__(14),
                aFunction = __webpack_require__(11),
                SPECIES = __webpack_require__(65)('species');
            module.exports = function(O, D) {
                var C = anObject(O).constructor,
                    S;
                return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
            };

            /***/
        },
        /* 110 */
        /***/
        function(module, exports, __webpack_require__) {

            var ctx = __webpack_require__(10),
                invoke = __webpack_require__(111),
                html = __webpack_require__(63),
                cel = __webpack_require__(19),
                global = __webpack_require__(8),
                process = global.process,
                setTask = global.setImmediate,
                clearTask = global.clearImmediate,
                MessageChannel = global.MessageChannel,
                counter = 0,
                queue = {},
                ONREADYSTATECHANGE = 'onreadystatechange',
                defer, channel, port;
            var run = function() {
                var id = +this;
                if (queue.hasOwnProperty(id)) {
                    var fn = queue[id];
                    delete queue[id];
                    fn();
                }
            };
            var listener = function(event) {
                run.call(event.data);
            };
            // Node.js 0.9+ & IE10+ has setImmediate, otherwise:
            if (!setTask || !clearTask) {
                setTask = function setImmediate(fn) {
                    var args = [],
                        i = 1;
                    while (arguments.length > i) args.push(arguments[i++]);
                    queue[++counter] = function() {
                        invoke(typeof fn == 'function' ? fn : Function(fn), args);
                    };
                    defer(counter);
                    return counter;
                };
                clearTask = function clearImmediate(id) {
                    delete queue[id];
                };
                // Node.js 0.8-
                if (__webpack_require__(28)(process) == 'process') {
                    defer = function(id) {
                        process.nextTick(ctx(run, id, 1));
                    };
                    // Browsers with MessageChannel, includes WebWorkers
                } else if (MessageChannel) {
                    channel = new MessageChannel;
                    port = channel.port2;
                    channel.port1.onmessage = listener;
                    defer = ctx(port.postMessage, port, 1);
                    // Browsers with postMessage, skip WebWorkers
                    // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
                } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
                    defer = function(id) {
                        global.postMessage(id + '', '*');
                    };
                    global.addEventListener('message', listener, false);
                    // IE8-
                } else if (ONREADYSTATECHANGE in cel('script')) {
                    defer = function(id) {
                        html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function() {
                            html.removeChild(this);
                            run.call(id);
                        };
                    };
                    // Rest old browsers
                } else {
                    defer = function(id) {
                        setTimeout(ctx(run, id, 1), 0);
                    };
                }
            }
            module.exports = {
                set: setTask,
                clear: clearTask
            };

            /***/
        },
        /* 111 */
        /***/
        function(module, exports) {

            // fast apply, http://jsperf.lnkit.com/fast-apply/5
            module.exports = function(fn, args, that) {
                var un = that === undefined;
                switch (args.length) {
                    case 0:
                        return un ? fn() :
                            fn.call(that);
                    case 1:
                        return un ? fn(args[0]) :
                            fn.call(that, args[0]);
                    case 2:
                        return un ? fn(args[0], args[1]) :
                            fn.call(that, args[0], args[1]);
                    case 3:
                        return un ? fn(args[0], args[1], args[2]) :
                            fn.call(that, args[0], args[1], args[2]);
                    case 4:
                        return un ? fn(args[0], args[1], args[2], args[3]) :
                            fn.call(that, args[0], args[1], args[2], args[3]);
                }
                return fn.apply(that, args);
            };

            /***/
        },
        /* 112 */
        /***/
        function(module, exports, __webpack_require__) {

            var global = __webpack_require__(8),
                macrotask = __webpack_require__(110).set,
                Observer = global.MutationObserver || global.WebKitMutationObserver,
                process = global.process,
                Promise = global.Promise,
                isNode = __webpack_require__(28)(process) == 'process';

            module.exports = function() {
                var head, last, notify;

                var flush = function() {
                    var parent, fn;
                    if (isNode && (parent = process.domain)) parent.exit();
                    while (head) {
                        fn = head.fn;
                        head = head.next;
                        try {
                            fn();
                        } catch (e) {
                            if (head) notify();
                            else last = undefined;
                            throw e;
                        }
                    }
                    last = undefined;
                    if (parent) parent.enter();
                };

                // Node.js
                if (isNode) {
                    notify = function() {
                        process.nextTick(flush);
                    };
                    // browsers with MutationObserver
                } else if (Observer) {
                    var toggle = true,
                        node = document.createTextNode('');
                    new Observer(flush).observe(node, {
                        characterData: true
                    }); // eslint-disable-line no-new
                    notify = function() {
                        node.data = toggle = !toggle;
                    };
                    // environments with maybe non-completely correct, but existent Promise
                } else if (Promise && Promise.resolve) {
                    var promise = Promise.resolve();
                    notify = function() {
                        promise.then(flush);
                    };
                    // for other environments - macrotask based on:
                    // - setImmediate
                    // - MessageChannel
                    // - window.postMessag
                    // - onreadystatechange
                    // - setTimeout
                } else {
                    notify = function() {
                        // strange IE + webpack dev server bug - use .call(global)
                        macrotask.call(global, flush);
                    };
                }

                return function(fn) {
                    var task = {
                        fn: fn,
                        next: undefined
                    };
                    if (last) last.next = task;
                    if (!head) {
                        head = task;
                        notify();
                    }
                    last = task;
                };
            };

            /***/
        },
        /* 113 */
        /***/
        function(module, exports, __webpack_require__) {

            var hide = __webpack_require__(12);
            module.exports = function(target, src, safe) {
                for (var key in src) {
                    if (safe && target[key]) target[key] = src[key];
                    else hide(target, key, src[key]);
                }
                return target;
            };

            /***/
        },
        /* 114 */
        /***/
        function(module, exports, __webpack_require__) {

            'use strict';
            var global = __webpack_require__(8),
                core = __webpack_require__(9),
                dP = __webpack_require__(13),
                DESCRIPTORS = __webpack_require__(17),
                SPECIES = __webpack_require__(65)('species');

            module.exports = function(KEY) {
                var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
                if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
                    configurable: true,
                    get: function() {
                        return this;
                    }
                });
            };

            /***/
        },
        /* 115 */
        /***/
        function(module, exports, __webpack_require__) {

            var ITERATOR = __webpack_require__(65)('iterator'),
                SAFE_CLOSING = false;

            try {
                var riter = [7][ITERATOR]();
                riter['return'] = function() {
                    SAFE_CLOSING = true;
                };
                Array.from(riter, function() {
                    throw 2;
                });
            } catch (e) { /* empty */ }

            module.exports = function(exec, skipClosing) {
                if (!skipClosing && !SAFE_CLOSING) return false;
                var safe = false;
                try {
                    var arr = [7],
                        iter = arr[ITERATOR]();
                    iter.next = function() {
                        return {
                            done: safe = true
                        };
                    };
                    arr[ITERATOR] = function() {
                        return iter;
                    };
                    exec(arr);
                } catch (e) { /* empty */ }
                return safe;
            };

            /***/
        },
        /* 116 */
        /***/
        function(module, exports, __webpack_require__) {

            // THIS FILE IS GENERATED - DO NOT EDIT!
            /*!mobile-detect v1.4.0 2017-12-09*/
            /*global module:false, define:false*/
            /*jshint latedef:false*/
            /*!@license Copyright 2013, Heinrich Goebl, License: MIT, see https://github.com/hgoebl/mobile-detect.js*/
            (function(define, undefined) {
                define(function() {
                    'use strict';

                    var impl = {};

                    impl.mobileDetectRules = {
                        "phones": {
                            "iPhone": "\\biPhone\\b|\\biPod\\b",
                            "BlackBerry": "BlackBerry|\\bBB10\\b|rim[0-9]+",
                            "HTC": "HTC|HTC.*(Sensation|Evo|Vision|Explorer|6800|8100|8900|A7272|S510e|C110e|Legend|Desire|T8282)|APX515CKT|Qtek9090|APA9292KT|HD_mini|Sensation.*Z710e|PG86100|Z715e|Desire.*(A8181|HD)|ADR6200|ADR6400L|ADR6425|001HT|Inspire 4G|Android.*\\bEVO\\b|T-Mobile G1|Z520m|Android [0-9.]+; Pixel",
                            "Nexus": "Nexus One|Nexus S|Galaxy.*Nexus|Android.*Nexus.*Mobile|Nexus 4|Nexus 5|Nexus 6",
                            "Dell": "Dell[;]? (Streak|Aero|Venue|Venue Pro|Flash|Smoke|Mini 3iX)|XCD28|XCD35|\\b001DL\\b|\\b101DL\\b|\\bGS01\\b",
                            "Motorola": "Motorola|DROIDX|DROID BIONIC|\\bDroid\\b.*Build|Android.*Xoom|HRI39|MOT-|A1260|A1680|A555|A853|A855|A953|A955|A956|Motorola.*ELECTRIFY|Motorola.*i1|i867|i940|MB200|MB300|MB501|MB502|MB508|MB511|MB520|MB525|MB526|MB611|MB612|MB632|MB810|MB855|MB860|MB861|MB865|MB870|ME501|ME502|ME511|ME525|ME600|ME632|ME722|ME811|ME860|ME863|ME865|MT620|MT710|MT716|MT720|MT810|MT870|MT917|Motorola.*TITANIUM|WX435|WX445|XT300|XT301|XT311|XT316|XT317|XT319|XT320|XT390|XT502|XT530|XT531|XT532|XT535|XT603|XT610|XT611|XT615|XT681|XT701|XT702|XT711|XT720|XT800|XT806|XT860|XT862|XT875|XT882|XT883|XT894|XT901|XT907|XT909|XT910|XT912|XT928|XT926|XT915|XT919|XT925|XT1021|\\bMoto E\\b",
                            "Samsung": "\\bSamsung\\b|SM-G950F|SM-G955F|SM-G9250|GT-19300|SGH-I337|BGT-S5230|GT-B2100|GT-B2700|GT-B2710|GT-B3210|GT-B3310|GT-B3410|GT-B3730|GT-B3740|GT-B5510|GT-B5512|GT-B5722|GT-B6520|GT-B7300|GT-B7320|GT-B7330|GT-B7350|GT-B7510|GT-B7722|GT-B7800|GT-C3010|GT-C3011|GT-C3060|GT-C3200|GT-C3212|GT-C3212I|GT-C3262|GT-C3222|GT-C3300|GT-C3300K|GT-C3303|GT-C3303K|GT-C3310|GT-C3322|GT-C3330|GT-C3350|GT-C3500|GT-C3510|GT-C3530|GT-C3630|GT-C3780|GT-C5010|GT-C5212|GT-C6620|GT-C6625|GT-C6712|GT-E1050|GT-E1070|GT-E1075|GT-E1080|GT-E1081|GT-E1085|GT-E1087|GT-E1100|GT-E1107|GT-E1110|GT-E1120|GT-E1125|GT-E1130|GT-E1160|GT-E1170|GT-E1175|GT-E1180|GT-E1182|GT-E1200|GT-E1210|GT-E1225|GT-E1230|GT-E1390|GT-E2100|GT-E2120|GT-E2121|GT-E2152|GT-E2220|GT-E2222|GT-E2230|GT-E2232|GT-E2250|GT-E2370|GT-E2550|GT-E2652|GT-E3210|GT-E3213|GT-I5500|GT-I5503|GT-I5700|GT-I5800|GT-I5801|GT-I6410|GT-I6420|GT-I7110|GT-I7410|GT-I7500|GT-I8000|GT-I8150|GT-I8160|GT-I8190|GT-I8320|GT-I8330|GT-I8350|GT-I8530|GT-I8700|GT-I8703|GT-I8910|GT-I9000|GT-I9001|GT-I9003|GT-I9010|GT-I9020|GT-I9023|GT-I9070|GT-I9082|GT-I9100|GT-I9103|GT-I9220|GT-I9250|GT-I9300|GT-I9305|GT-I9500|GT-I9505|GT-M3510|GT-M5650|GT-M7500|GT-M7600|GT-M7603|GT-M8800|GT-M8910|GT-N7000|GT-S3110|GT-S3310|GT-S3350|GT-S3353|GT-S3370|GT-S3650|GT-S3653|GT-S3770|GT-S3850|GT-S5210|GT-S5220|GT-S5229|GT-S5230|GT-S5233|GT-S5250|GT-S5253|GT-S5260|GT-S5263|GT-S5270|GT-S5300|GT-S5330|GT-S5350|GT-S5360|GT-S5363|GT-S5369|GT-S5380|GT-S5380D|GT-S5560|GT-S5570|GT-S5600|GT-S5603|GT-S5610|GT-S5620|GT-S5660|GT-S5670|GT-S5690|GT-S5750|GT-S5780|GT-S5830|GT-S5839|GT-S6102|GT-S6500|GT-S7070|GT-S7200|GT-S7220|GT-S7230|GT-S7233|GT-S7250|GT-S7500|GT-S7530|GT-S7550|GT-S7562|GT-S7710|GT-S8000|GT-S8003|GT-S8500|GT-S8530|GT-S8600|SCH-A310|SCH-A530|SCH-A570|SCH-A610|SCH-A630|SCH-A650|SCH-A790|SCH-A795|SCH-A850|SCH-A870|SCH-A890|SCH-A930|SCH-A950|SCH-A970|SCH-A990|SCH-I100|SCH-I110|SCH-I400|SCH-I405|SCH-I500|SCH-I510|SCH-I515|SCH-I600|SCH-I730|SCH-I760|SCH-I770|SCH-I830|SCH-I910|SCH-I920|SCH-I959|SCH-LC11|SCH-N150|SCH-N300|SCH-R100|SCH-R300|SCH-R351|SCH-R400|SCH-R410|SCH-T300|SCH-U310|SCH-U320|SCH-U350|SCH-U360|SCH-U365|SCH-U370|SCH-U380|SCH-U410|SCH-U430|SCH-U450|SCH-U460|SCH-U470|SCH-U490|SCH-U540|SCH-U550|SCH-U620|SCH-U640|SCH-U650|SCH-U660|SCH-U700|SCH-U740|SCH-U750|SCH-U810|SCH-U820|SCH-U900|SCH-U940|SCH-U960|SCS-26UC|SGH-A107|SGH-A117|SGH-A127|SGH-A137|SGH-A157|SGH-A167|SGH-A177|SGH-A187|SGH-A197|SGH-A227|SGH-A237|SGH-A257|SGH-A437|SGH-A517|SGH-A597|SGH-A637|SGH-A657|SGH-A667|SGH-A687|SGH-A697|SGH-A707|SGH-A717|SGH-A727|SGH-A737|SGH-A747|SGH-A767|SGH-A777|SGH-A797|SGH-A817|SGH-A827|SGH-A837|SGH-A847|SGH-A867|SGH-A877|SGH-A887|SGH-A897|SGH-A927|SGH-B100|SGH-B130|SGH-B200|SGH-B220|SGH-C100|SGH-C110|SGH-C120|SGH-C130|SGH-C140|SGH-C160|SGH-C170|SGH-C180|SGH-C200|SGH-C207|SGH-C210|SGH-C225|SGH-C230|SGH-C417|SGH-C450|SGH-D307|SGH-D347|SGH-D357|SGH-D407|SGH-D415|SGH-D780|SGH-D807|SGH-D980|SGH-E105|SGH-E200|SGH-E315|SGH-E316|SGH-E317|SGH-E335|SGH-E590|SGH-E635|SGH-E715|SGH-E890|SGH-F300|SGH-F480|SGH-I200|SGH-I300|SGH-I320|SGH-I550|SGH-I577|SGH-I600|SGH-I607|SGH-I617|SGH-I627|SGH-I637|SGH-I677|SGH-I700|SGH-I717|SGH-I727|SGH-i747M|SGH-I777|SGH-I780|SGH-I827|SGH-I847|SGH-I857|SGH-I896|SGH-I897|SGH-I900|SGH-I907|SGH-I917|SGH-I927|SGH-I937|SGH-I997|SGH-J150|SGH-J200|SGH-L170|SGH-L700|SGH-M110|SGH-M150|SGH-M200|SGH-N105|SGH-N500|SGH-N600|SGH-N620|SGH-N625|SGH-N700|SGH-N710|SGH-P107|SGH-P207|SGH-P300|SGH-P310|SGH-P520|SGH-P735|SGH-P777|SGH-Q105|SGH-R210|SGH-R220|SGH-R225|SGH-S105|SGH-S307|SGH-T109|SGH-T119|SGH-T139|SGH-T209|SGH-T219|SGH-T229|SGH-T239|SGH-T249|SGH-T259|SGH-T309|SGH-T319|SGH-T329|SGH-T339|SGH-T349|SGH-T359|SGH-T369|SGH-T379|SGH-T409|SGH-T429|SGH-T439|SGH-T459|SGH-T469|SGH-T479|SGH-T499|SGH-T509|SGH-T519|SGH-T539|SGH-T559|SGH-T589|SGH-T609|SGH-T619|SGH-T629|SGH-T639|SGH-T659|SGH-T669|SGH-T679|SGH-T709|SGH-T719|SGH-T729|SGH-T739|SGH-T746|SGH-T749|SGH-T759|SGH-T769|SGH-T809|SGH-T819|SGH-T839|SGH-T919|SGH-T929|SGH-T939|SGH-T959|SGH-T989|SGH-U100|SGH-U200|SGH-U800|SGH-V205|SGH-V206|SGH-X100|SGH-X105|SGH-X120|SGH-X140|SGH-X426|SGH-X427|SGH-X475|SGH-X495|SGH-X497|SGH-X507|SGH-X600|SGH-X610|SGH-X620|SGH-X630|SGH-X700|SGH-X820|SGH-X890|SGH-Z130|SGH-Z150|SGH-Z170|SGH-ZX10|SGH-ZX20|SHW-M110|SPH-A120|SPH-A400|SPH-A420|SPH-A460|SPH-A500|SPH-A560|SPH-A600|SPH-A620|SPH-A660|SPH-A700|SPH-A740|SPH-A760|SPH-A790|SPH-A800|SPH-A820|SPH-A840|SPH-A880|SPH-A900|SPH-A940|SPH-A960|SPH-D600|SPH-D700|SPH-D710|SPH-D720|SPH-I300|SPH-I325|SPH-I330|SPH-I350|SPH-I500|SPH-I600|SPH-I700|SPH-L700|SPH-M100|SPH-M220|SPH-M240|SPH-M300|SPH-M305|SPH-M320|SPH-M330|SPH-M350|SPH-M360|SPH-M370|SPH-M380|SPH-M510|SPH-M540|SPH-M550|SPH-M560|SPH-M570|SPH-M580|SPH-M610|SPH-M620|SPH-M630|SPH-M800|SPH-M810|SPH-M850|SPH-M900|SPH-M910|SPH-M920|SPH-M930|SPH-N100|SPH-N200|SPH-N240|SPH-N300|SPH-N400|SPH-Z400|SWC-E100|SCH-i909|GT-N7100|GT-N7105|SCH-I535|SM-N900A|SGH-I317|SGH-T999L|GT-S5360B|GT-I8262|GT-S6802|GT-S6312|GT-S6310|GT-S5312|GT-S5310|GT-I9105|GT-I8510|GT-S6790N|SM-G7105|SM-N9005|GT-S5301|GT-I9295|GT-I9195|SM-C101|GT-S7392|GT-S7560|GT-B7610|GT-I5510|GT-S7582|GT-S7530E|GT-I8750|SM-G9006V|SM-G9008V|SM-G9009D|SM-G900A|SM-G900D|SM-G900F|SM-G900H|SM-G900I|SM-G900J|SM-G900K|SM-G900L|SM-G900M|SM-G900P|SM-G900R4|SM-G900S|SM-G900T|SM-G900V|SM-G900W8|SHV-E160K|SCH-P709|SCH-P729|SM-T2558|GT-I9205|SM-G9350|SM-J120F|SM-G920F|SM-G920V|SM-G930F|SM-N910C|SM-A310F|GT-I9190",
                            "LG": "\\bLG\\b;|LG[- ]?(C800|C900|E400|E610|E900|E-900|F160|F180K|F180L|F180S|730|855|L160|LS740|LS840|LS970|LU6200|MS690|MS695|MS770|MS840|MS870|MS910|P500|P700|P705|VM696|AS680|AS695|AX840|C729|E970|GS505|272|C395|E739BK|E960|L55C|L75C|LS696|LS860|P769BK|P350|P500|P509|P870|UN272|US730|VS840|VS950|LN272|LN510|LS670|LS855|LW690|MN270|MN510|P509|P769|P930|UN200|UN270|UN510|UN610|US670|US740|US760|UX265|UX840|VN271|VN530|VS660|VS700|VS740|VS750|VS910|VS920|VS930|VX9200|VX11000|AX840A|LW770|P506|P925|P999|E612|D955|D802|MS323)",
                            "Sony": "SonyST|SonyLT|SonyEricsson|SonyEricssonLT15iv|LT18i|E10i|LT28h|LT26w|SonyEricssonMT27i|C5303|C6902|C6903|C6906|C6943|D2533",
                            "Asus": "Asus.*Galaxy|PadFone.*Mobile",
                            "NokiaLumia": "Lumia [0-9]{3,4}",
                            "Micromax": "Micromax.*\\b(A210|A92|A88|A72|A111|A110Q|A115|A116|A110|A90S|A26|A51|A35|A54|A25|A27|A89|A68|A65|A57|A90)\\b",
                            "Palm": "PalmSource|Palm",
                            "Vertu": "Vertu|Vertu.*Ltd|Vertu.*Ascent|Vertu.*Ayxta|Vertu.*Constellation(F|Quest)?|Vertu.*Monika|Vertu.*Signature",
                            "Pantech": "PANTECH|IM-A850S|IM-A840S|IM-A830L|IM-A830K|IM-A830S|IM-A820L|IM-A810K|IM-A810S|IM-A800S|IM-T100K|IM-A725L|IM-A780L|IM-A775C|IM-A770K|IM-A760S|IM-A750K|IM-A740S|IM-A730S|IM-A720L|IM-A710K|IM-A690L|IM-A690S|IM-A650S|IM-A630K|IM-A600S|VEGA PTL21|PT003|P8010|ADR910L|P6030|P6020|P9070|P4100|P9060|P5000|CDM8992|TXT8045|ADR8995|IS11PT|P2030|P6010|P8000|PT002|IS06|CDM8999|P9050|PT001|TXT8040|P2020|P9020|P2000|P7040|P7000|C790",
                            "Fly": "IQ230|IQ444|IQ450|IQ440|IQ442|IQ441|IQ245|IQ256|IQ236|IQ255|IQ235|IQ245|IQ275|IQ240|IQ285|IQ280|IQ270|IQ260|IQ250",
                            "Wiko": "KITE 4G|HIGHWAY|GETAWAY|STAIRWAY|DARKSIDE|DARKFULL|DARKNIGHT|DARKMOON|SLIDE|WAX 4G|RAINBOW|BLOOM|SUNSET|GOA(?!nna)|LENNY|BARRY|IGGY|OZZY|CINK FIVE|CINK PEAX|CINK PEAX 2|CINK SLIM|CINK SLIM 2|CINK +|CINK KING|CINK PEAX|CINK SLIM|SUBLIM",
                            "iMobile": "i-mobile (IQ|i-STYLE|idea|ZAA|Hitz)",
                            "SimValley": "\\b(SP-80|XT-930|SX-340|XT-930|SX-310|SP-360|SP60|SPT-800|SP-120|SPT-800|SP-140|SPX-5|SPX-8|SP-100|SPX-8|SPX-12)\\b",
                            "Wolfgang": "AT-B24D|AT-AS50HD|AT-AS40W|AT-AS55HD|AT-AS45q2|AT-B26D|AT-AS50Q",
                            "Alcatel": "Alcatel",
                            "Nintendo": "Nintendo 3DS",
                            "Amoi": "Amoi",
                            "INQ": "INQ",
                            "GenericPhone": "Tapatalk|PDA;|SAGEM|\\bmmp\\b|pocket|\\bpsp\\b|symbian|Smartphone|smartfon|treo|up.browser|up.link|vodafone|\\bwap\\b|nokia|Series40|Series60|S60|SonyEricsson|N900|MAUI.*WAP.*Browser"
                        },
                        "tablets": {
                            "iPad": "iPad|iPad.*Mobile",
                            "NexusTablet": "Android.*Nexus[\\s]+(7|9|10)",
                            "SamsungTablet": "SAMSUNG.*Tablet|Galaxy.*Tab|SC-01C|GT-P1000|GT-P1003|GT-P1010|GT-P3105|GT-P6210|GT-P6800|GT-P6810|GT-P7100|GT-P7300|GT-P7310|GT-P7500|GT-P7510|SCH-I800|SCH-I815|SCH-I905|SGH-I957|SGH-I987|SGH-T849|SGH-T859|SGH-T869|SPH-P100|GT-P3100|GT-P3108|GT-P3110|GT-P5100|GT-P5110|GT-P6200|GT-P7320|GT-P7511|GT-N8000|GT-P8510|SGH-I497|SPH-P500|SGH-T779|SCH-I705|SCH-I915|GT-N8013|GT-P3113|GT-P5113|GT-P8110|GT-N8010|GT-N8005|GT-N8020|GT-P1013|GT-P6201|GT-P7501|GT-N5100|GT-N5105|GT-N5110|SHV-E140K|SHV-E140L|SHV-E140S|SHV-E150S|SHV-E230K|SHV-E230L|SHV-E230S|SHW-M180K|SHW-M180L|SHW-M180S|SHW-M180W|SHW-M300W|SHW-M305W|SHW-M380K|SHW-M380S|SHW-M380W|SHW-M430W|SHW-M480K|SHW-M480S|SHW-M480W|SHW-M485W|SHW-M486W|SHW-M500W|GT-I9228|SCH-P739|SCH-I925|GT-I9200|GT-P5200|GT-P5210|GT-P5210X|SM-T311|SM-T310|SM-T310X|SM-T210|SM-T210R|SM-T211|SM-P600|SM-P601|SM-P605|SM-P900|SM-P901|SM-T217|SM-T217A|SM-T217S|SM-P6000|SM-T3100|SGH-I467|XE500|SM-T110|GT-P5220|GT-I9200X|GT-N5110X|GT-N5120|SM-P905|SM-T111|SM-T2105|SM-T315|SM-T320|SM-T320X|SM-T321|SM-T520|SM-T525|SM-T530NU|SM-T230NU|SM-T330NU|SM-T900|XE500T1C|SM-P605V|SM-P905V|SM-T337V|SM-T537V|SM-T707V|SM-T807V|SM-P600X|SM-P900X|SM-T210X|SM-T230|SM-T230X|SM-T325|GT-P7503|SM-T531|SM-T330|SM-T530|SM-T705|SM-T705C|SM-T535|SM-T331|SM-T800|SM-T700|SM-T537|SM-T807|SM-P907A|SM-T337A|SM-T537A|SM-T707A|SM-T807A|SM-T237|SM-T807P|SM-P607T|SM-T217T|SM-T337T|SM-T807T|SM-T116NQ|SM-T116BU|SM-P550|SM-T350|SM-T550|SM-T9000|SM-P9000|SM-T705Y|SM-T805|GT-P3113|SM-T710|SM-T810|SM-T815|SM-T360|SM-T533|SM-T113|SM-T335|SM-T715|SM-T560|SM-T670|SM-T677|SM-T377|SM-T567|SM-T357T|SM-T555|SM-T561|SM-T713|SM-T719|SM-T813|SM-T819|SM-T580|SM-T355Y?|SM-T280|SM-T817A|SM-T820|SM-W700|SM-P580|SM-T587|SM-P350|SM-P555M|SM-P355M|SM-T113NU|SM-T815Y",
                            "Kindle": "Kindle|Silk.*Accelerated|Android.*\\b(KFOT|KFTT|KFJWI|KFJWA|KFOTE|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|WFJWAE|KFSAWA|KFSAWI|KFASWI|KFARWI|KFFOWI|KFGIWI|KFMEWI)\\b|Android.*Silk\/[0-9.]+ like Chrome\/[0-9.]+ (?!Mobile)",
                            "SurfaceTablet": "Windows NT [0-9.]+; ARM;.*(Tablet|ARMBJS)",
                            "HPTablet": "HP Slate (7|8|10)|HP ElitePad 900|hp-tablet|EliteBook.*Touch|HP 8|Slate 21|HP SlateBook 10",
                            "AsusTablet": "^.*PadFone((?!Mobile).)*$|Transformer|TF101|TF101G|TF300T|TF300TG|TF300TL|TF700T|TF700KL|TF701T|TF810C|ME171|ME301T|ME302C|ME371MG|ME370T|ME372MG|ME172V|ME173X|ME400C|Slider SL101|\\bK00F\\b|\\bK00C\\b|\\bK00E\\b|\\bK00L\\b|TX201LA|ME176C|ME102A|\\bM80TA\\b|ME372CL|ME560CG|ME372CG|ME302KL| K010 | K011 | K017 | K01E |ME572C|ME103K|ME170C|ME171C|\\bME70C\\b|ME581C|ME581CL|ME8510C|ME181C|P01Y|PO1MA|P01Z|\\bP027\\b",
                            "BlackBerryTablet": "PlayBook|RIM Tablet",
                            "HTCtablet": "HTC_Flyer_P512|HTC Flyer|HTC Jetstream|HTC-P715a|HTC EVO View 4G|PG41200|PG09410",
                            "MotorolaTablet": "xoom|sholest|MZ615|MZ605|MZ505|MZ601|MZ602|MZ603|MZ604|MZ606|MZ607|MZ608|MZ609|MZ615|MZ616|MZ617",
                            "NookTablet": "Android.*Nook|NookColor|nook browser|BNRV200|BNRV200A|BNTV250|BNTV250A|BNTV400|BNTV600|LogicPD Zoom2",
                            "AcerTablet": "Android.*; \\b(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700|A701|W500|W500P|W501|W501P|W510|W511|W700|G100|G100W|B1-A71|B1-710|B1-711|A1-810|A1-811|A1-830)\\b|W3-810|\\bA3-A10\\b|\\bA3-A11\\b|\\bA3-A20\\b|\\bA3-A30",
                            "ToshibaTablet": "Android.*(AT100|AT105|AT200|AT205|AT270|AT275|AT300|AT305|AT1S5|AT500|AT570|AT700|AT830)|TOSHIBA.*FOLIO",
                            "LGTablet": "\\bL-06C|LG-V909|LG-V900|LG-V700|LG-V510|LG-V500|LG-V410|LG-V400|LG-VK810\\b",
                            "FujitsuTablet": "Android.*\\b(F-01D|F-02F|F-05E|F-10D|M532|Q572)\\b",
                            "PrestigioTablet": "PMP3170B|PMP3270B|PMP3470B|PMP7170B|PMP3370B|PMP3570C|PMP5870C|PMP3670B|PMP5570C|PMP5770D|PMP3970B|PMP3870C|PMP5580C|PMP5880D|PMP5780D|PMP5588C|PMP7280C|PMP7280C3G|PMP7280|PMP7880D|PMP5597D|PMP5597|PMP7100D|PER3464|PER3274|PER3574|PER3884|PER5274|PER5474|PMP5097CPRO|PMP5097|PMP7380D|PMP5297C|PMP5297C_QUAD|PMP812E|PMP812E3G|PMP812F|PMP810E|PMP880TD|PMT3017|PMT3037|PMT3047|PMT3057|PMT7008|PMT5887|PMT5001|PMT5002",
                            "LenovoTablet": "Lenovo TAB|Idea(Tab|Pad)( A1|A10| K1|)|ThinkPad([ ]+)?Tablet|YT3-850M|YT3-X90L|YT3-X90F|YT3-X90X|Lenovo.*(S2109|S2110|S5000|S6000|K3011|A3000|A3500|A1000|A2107|A2109|A1107|A5500|A7600|B6000|B8000|B8080)(-|)(FL|F|HV|H|)",
                            "DellTablet": "Venue 11|Venue 8|Venue 7|Dell Streak 10|Dell Streak 7",
                            "YarvikTablet": "Android.*\\b(TAB210|TAB211|TAB224|TAB250|TAB260|TAB264|TAB310|TAB360|TAB364|TAB410|TAB411|TAB420|TAB424|TAB450|TAB460|TAB461|TAB464|TAB465|TAB467|TAB468|TAB07-100|TAB07-101|TAB07-150|TAB07-151|TAB07-152|TAB07-200|TAB07-201-3G|TAB07-210|TAB07-211|TAB07-212|TAB07-214|TAB07-220|TAB07-400|TAB07-485|TAB08-150|TAB08-200|TAB08-201-3G|TAB08-201-30|TAB09-100|TAB09-211|TAB09-410|TAB10-150|TAB10-201|TAB10-211|TAB10-400|TAB10-410|TAB13-201|TAB274EUK|TAB275EUK|TAB374EUK|TAB462EUK|TAB474EUK|TAB9-200)\\b",
                            "MedionTablet": "Android.*\\bOYO\\b|LIFE.*(P9212|P9514|P9516|S9512)|LIFETAB",
                            "ArnovaTablet": "97G4|AN10G2|AN7bG3|AN7fG3|AN8G3|AN8cG3|AN7G3|AN9G3|AN7dG3|AN7dG3ST|AN7dG3ChildPad|AN10bG3|AN10bG3DT|AN9G2",
                            "IntensoTablet": "INM8002KP|INM1010FP|INM805ND|Intenso Tab|TAB1004",
                            "IRUTablet": "M702pro",
                            "MegafonTablet": "MegaFon V9|\\bZTE V9\\b|Android.*\\bMT7A\\b",
                            "EbodaTablet": "E-Boda (Supreme|Impresspeed|Izzycomm|Essential)",
                            "AllViewTablet": "Allview.*(Viva|Alldro|City|Speed|All TV|Frenzy|Quasar|Shine|TX1|AX1|AX2)",
                            "ArchosTablet": "\\b(101G9|80G9|A101IT)\\b|Qilive 97R|Archos5|\\bARCHOS (70|79|80|90|97|101|FAMILYPAD|)(b|c|)(G10| Cobalt| TITANIUM(HD|)| Xenon| Neon|XSK| 2| XS 2| PLATINUM| CARBON|GAMEPAD)\\b",
                            "AinolTablet": "NOVO7|NOVO8|NOVO10|Novo7Aurora|Novo7Basic|NOVO7PALADIN|novo9-Spark",
                            "NokiaLumiaTablet": "Lumia 2520",
                            "SonyTablet": "Sony.*Tablet|Xperia Tablet|Sony Tablet S|SO-03E|SGPT12|SGPT13|SGPT114|SGPT121|SGPT122|SGPT123|SGPT111|SGPT112|SGPT113|SGPT131|SGPT132|SGPT133|SGPT211|SGPT212|SGPT213|SGP311|SGP312|SGP321|EBRD1101|EBRD1102|EBRD1201|SGP351|SGP341|SGP511|SGP512|SGP521|SGP541|SGP551|SGP621|SGP612|SOT31",
                            "PhilipsTablet": "\\b(PI2010|PI3000|PI3100|PI3105|PI3110|PI3205|PI3210|PI3900|PI4010|PI7000|PI7100)\\b",
                            "CubeTablet": "Android.*(K8GT|U9GT|U10GT|U16GT|U17GT|U18GT|U19GT|U20GT|U23GT|U30GT)|CUBE U8GT",
                            "CobyTablet": "MID1042|MID1045|MID1125|MID1126|MID7012|MID7014|MID7015|MID7034|MID7035|MID7036|MID7042|MID7048|MID7127|MID8042|MID8048|MID8127|MID9042|MID9740|MID9742|MID7022|MID7010",
                            "MIDTablet": "M9701|M9000|M9100|M806|M1052|M806|T703|MID701|MID713|MID710|MID727|MID760|MID830|MID728|MID933|MID125|MID810|MID732|MID120|MID930|MID800|MID731|MID900|MID100|MID820|MID735|MID980|MID130|MID833|MID737|MID960|MID135|MID860|MID736|MID140|MID930|MID835|MID733|MID4X10",
                            "MSITablet": "MSI \\b(Primo 73K|Primo 73L|Primo 81L|Primo 77|Primo 93|Primo 75|Primo 76|Primo 73|Primo 81|Primo 91|Primo 90|Enjoy 71|Enjoy 7|Enjoy 10)\\b",
                            "SMiTTablet": "Android.*(\\bMID\\b|MID-560|MTV-T1200|MTV-PND531|MTV-P1101|MTV-PND530)",
                            "RockChipTablet": "Android.*(RK2818|RK2808A|RK2918|RK3066)|RK2738|RK2808A",
                            "FlyTablet": "IQ310|Fly Vision",
                            "bqTablet": "Android.*(bq)?.*(Elcano|Curie|Edison|Maxwell|Kepler|Pascal|Tesla|Hypatia|Platon|Newton|Livingstone|Cervantes|Avant|Aquaris ([E|M]10|M8))|Maxwell.*Lite|Maxwell.*Plus",
                            "HuaweiTablet": "MediaPad|MediaPad 7 Youth|IDEOS S7|S7-201c|S7-202u|S7-101|S7-103|S7-104|S7-105|S7-106|S7-201|S7-Slim",
                            "NecTablet": "\\bN-06D|\\bN-08D",
                            "PantechTablet": "Pantech.*P4100",
                            "BronchoTablet": "Broncho.*(N701|N708|N802|a710)",
                            "VersusTablet": "TOUCHPAD.*[78910]|\\bTOUCHTAB\\b",
                            "ZyncTablet": "z1000|Z99 2G|z99|z930|z999|z990|z909|Z919|z900",
                            "PositivoTablet": "TB07STA|TB10STA|TB07FTA|TB10FTA",
                            "NabiTablet": "Android.*\\bNabi",
                            "KoboTablet": "Kobo Touch|\\bK080\\b|\\bVox\\b Build|\\bArc\\b Build",
                            "DanewTablet": "DSlide.*\\b(700|701R|702|703R|704|802|970|971|972|973|974|1010|1012)\\b",
                            "TexetTablet": "NaviPad|TB-772A|TM-7045|TM-7055|TM-9750|TM-7016|TM-7024|TM-7026|TM-7041|TM-7043|TM-7047|TM-8041|TM-9741|TM-9747|TM-9748|TM-9751|TM-7022|TM-7021|TM-7020|TM-7011|TM-7010|TM-7023|TM-7025|TM-7037W|TM-7038W|TM-7027W|TM-9720|TM-9725|TM-9737W|TM-1020|TM-9738W|TM-9740|TM-9743W|TB-807A|TB-771A|TB-727A|TB-725A|TB-719A|TB-823A|TB-805A|TB-723A|TB-715A|TB-707A|TB-705A|TB-709A|TB-711A|TB-890HD|TB-880HD|TB-790HD|TB-780HD|TB-770HD|TB-721HD|TB-710HD|TB-434HD|TB-860HD|TB-840HD|TB-760HD|TB-750HD|TB-740HD|TB-730HD|TB-722HD|TB-720HD|TB-700HD|TB-500HD|TB-470HD|TB-431HD|TB-430HD|TB-506|TB-504|TB-446|TB-436|TB-416|TB-146SE|TB-126SE",
                            "PlaystationTablet": "Playstation.*(Portable|Vita)",
                            "TrekstorTablet": "ST10416-1|VT10416-1|ST70408-1|ST702xx-1|ST702xx-2|ST80208|ST97216|ST70104-2|VT10416-2|ST10216-2A|SurfTab",
                            "PyleAudioTablet": "\\b(PTBL10CEU|PTBL10C|PTBL72BC|PTBL72BCEU|PTBL7CEU|PTBL7C|PTBL92BC|PTBL92BCEU|PTBL9CEU|PTBL9CUK|PTBL9C)\\b",
                            "AdvanTablet": "Android.* \\b(E3A|T3X|T5C|T5B|T3E|T3C|T3B|T1J|T1F|T2A|T1H|T1i|E1C|T1-E|T5-A|T4|E1-B|T2Ci|T1-B|T1-D|O1-A|E1-A|T1-A|T3A|T4i)\\b ",
                            "DanyTechTablet": "Genius Tab G3|Genius Tab S2|Genius Tab Q3|Genius Tab G4|Genius Tab Q4|Genius Tab G-II|Genius TAB GII|Genius TAB GIII|Genius Tab S1",
                            "GalapadTablet": "Android.*\\bG1\\b",
                            "MicromaxTablet": "Funbook|Micromax.*\\b(P250|P560|P360|P362|P600|P300|P350|P500|P275)\\b",
                            "KarbonnTablet": "Android.*\\b(A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2)\\b",
                            "AllFineTablet": "Fine7 Genius|Fine7 Shine|Fine7 Air|Fine8 Style|Fine9 More|Fine10 Joy|Fine11 Wide",
                            "PROSCANTablet": "\\b(PEM63|PLT1023G|PLT1041|PLT1044|PLT1044G|PLT1091|PLT4311|PLT4311PL|PLT4315|PLT7030|PLT7033|PLT7033D|PLT7035|PLT7035D|PLT7044K|PLT7045K|PLT7045KB|PLT7071KG|PLT7072|PLT7223G|PLT7225G|PLT7777G|PLT7810K|PLT7849G|PLT7851G|PLT7852G|PLT8015|PLT8031|PLT8034|PLT8036|PLT8080K|PLT8082|PLT8088|PLT8223G|PLT8234G|PLT8235G|PLT8816K|PLT9011|PLT9045K|PLT9233G|PLT9735|PLT9760G|PLT9770G)\\b",
                            "YONESTablet": "BQ1078|BC1003|BC1077|RK9702|BC9730|BC9001|IT9001|BC7008|BC7010|BC708|BC728|BC7012|BC7030|BC7027|BC7026",
                            "ChangJiaTablet": "TPC7102|TPC7103|TPC7105|TPC7106|TPC7107|TPC7201|TPC7203|TPC7205|TPC7210|TPC7708|TPC7709|TPC7712|TPC7110|TPC8101|TPC8103|TPC8105|TPC8106|TPC8203|TPC8205|TPC8503|TPC9106|TPC9701|TPC97101|TPC97103|TPC97105|TPC97106|TPC97111|TPC97113|TPC97203|TPC97603|TPC97809|TPC97205|TPC10101|TPC10103|TPC10106|TPC10111|TPC10203|TPC10205|TPC10503",
                            "GUTablet": "TX-A1301|TX-M9002|Q702|kf026",
                            "PointOfViewTablet": "TAB-P506|TAB-navi-7-3G-M|TAB-P517|TAB-P-527|TAB-P701|TAB-P703|TAB-P721|TAB-P731N|TAB-P741|TAB-P825|TAB-P905|TAB-P925|TAB-PR945|TAB-PL1015|TAB-P1025|TAB-PI1045|TAB-P1325|TAB-PROTAB[0-9]+|TAB-PROTAB25|TAB-PROTAB26|TAB-PROTAB27|TAB-PROTAB26XL|TAB-PROTAB2-IPS9|TAB-PROTAB30-IPS9|TAB-PROTAB25XXL|TAB-PROTAB26-IPS10|TAB-PROTAB30-IPS10",
                            "OvermaxTablet": "OV-(SteelCore|NewBase|Basecore|Baseone|Exellen|Quattor|EduTab|Solution|ACTION|BasicTab|TeddyTab|MagicTab|Stream|TB-08|TB-09)|Qualcore 1027",
                            "HCLTablet": "HCL.*Tablet|Connect-3G-2.0|Connect-2G-2.0|ME Tablet U1|ME Tablet U2|ME Tablet G1|ME Tablet X1|ME Tablet Y2|ME Tablet Sync",
                            "DPSTablet": "DPS Dream 9|DPS Dual 7",
                            "VistureTablet": "V97 HD|i75 3G|Visture V4( HD)?|Visture V5( HD)?|Visture V10",
                            "CrestaTablet": "CTP(-)?810|CTP(-)?818|CTP(-)?828|CTP(-)?838|CTP(-)?888|CTP(-)?978|CTP(-)?980|CTP(-)?987|CTP(-)?988|CTP(-)?989",
                            "MediatekTablet": "\\bMT8125|MT8389|MT8135|MT8377\\b",
                            "ConcordeTablet": "Concorde([ ]+)?Tab|ConCorde ReadMan",
                            "GoCleverTablet": "GOCLEVER TAB|A7GOCLEVER|M1042|M7841|M742|R1042BK|R1041|TAB A975|TAB A7842|TAB A741|TAB A741L|TAB M723G|TAB M721|TAB A1021|TAB I921|TAB R721|TAB I720|TAB T76|TAB R70|TAB R76.2|TAB R106|TAB R83.2|TAB M813G|TAB I721|GCTA722|TAB I70|TAB I71|TAB S73|TAB R73|TAB R74|TAB R93|TAB R75|TAB R76.1|TAB A73|TAB A93|TAB A93.2|TAB T72|TAB R83|TAB R974|TAB R973|TAB A101|TAB A103|TAB A104|TAB A104.2|R105BK|M713G|A972BK|TAB A971|TAB R974.2|TAB R104|TAB R83.3|TAB A1042",
                            "ModecomTablet": "FreeTAB 9000|FreeTAB 7.4|FreeTAB 7004|FreeTAB 7800|FreeTAB 2096|FreeTAB 7.5|FreeTAB 1014|FreeTAB 1001 |FreeTAB 8001|FreeTAB 9706|FreeTAB 9702|FreeTAB 7003|FreeTAB 7002|FreeTAB 1002|FreeTAB 7801|FreeTAB 1331|FreeTAB 1004|FreeTAB 8002|FreeTAB 8014|FreeTAB 9704|FreeTAB 1003",
                            "VoninoTablet": "\\b(Argus[ _]?S|Diamond[ _]?79HD|Emerald[ _]?78E|Luna[ _]?70C|Onyx[ _]?S|Onyx[ _]?Z|Orin[ _]?HD|Orin[ _]?S|Otis[ _]?S|SpeedStar[ _]?S|Magnet[ _]?M9|Primus[ _]?94[ _]?3G|Primus[ _]?94HD|Primus[ _]?QS|Android.*\\bQ8\\b|Sirius[ _]?EVO[ _]?QS|Sirius[ _]?QS|Spirit[ _]?S)\\b",
                            "ECSTablet": "V07OT2|TM105A|S10OT1|TR10CS1",
                            "StorexTablet": "eZee[_']?(Tab|Go)[0-9]+|TabLC7|Looney Tunes Tab",
                            "VodafoneTablet": "SmartTab([ ]+)?[0-9]+|SmartTabII10|SmartTabII7|VF-1497",
                            "EssentielBTablet": "Smart[ ']?TAB[ ]+?[0-9]+|Family[ ']?TAB2",
                            "RossMoorTablet": "RM-790|RM-997|RMD-878G|RMD-974R|RMT-705A|RMT-701|RME-601|RMT-501|RMT-711",
                            "iMobileTablet": "i-mobile i-note",
                            "TolinoTablet": "tolino tab [0-9.]+|tolino shine",
                            "AudioSonicTablet": "\\bC-22Q|T7-QC|T-17B|T-17P\\b",
                            "AMPETablet": "Android.* A78 ",
                            "SkkTablet": "Android.* (SKYPAD|PHOENIX|CYCLOPS)",
                            "TecnoTablet": "TECNO P9",
                            "JXDTablet": "Android.* \\b(F3000|A3300|JXD5000|JXD3000|JXD2000|JXD300B|JXD300|S5800|S7800|S602b|S5110b|S7300|S5300|S602|S603|S5100|S5110|S601|S7100a|P3000F|P3000s|P101|P200s|P1000m|P200m|P9100|P1000s|S6600b|S908|P1000|P300|S18|S6600|S9100)\\b",
                            "iJoyTablet": "Tablet (Spirit 7|Essentia|Galatea|Fusion|Onix 7|Landa|Titan|Scooby|Deox|Stella|Themis|Argon|Unique 7|Sygnus|Hexen|Finity 7|Cream|Cream X2|Jade|Neon 7|Neron 7|Kandy|Scape|Saphyr 7|Rebel|Biox|Rebel|Rebel 8GB|Myst|Draco 7|Myst|Tab7-004|Myst|Tadeo Jones|Tablet Boing|Arrow|Draco Dual Cam|Aurix|Mint|Amity|Revolution|Finity 9|Neon 9|T9w|Amity 4GB Dual Cam|Stone 4GB|Stone 8GB|Andromeda|Silken|X2|Andromeda II|Halley|Flame|Saphyr 9,7|Touch 8|Planet|Triton|Unique 10|Hexen 10|Memphis 4GB|Memphis 8GB|Onix 10)",
                            "FX2Tablet": "FX2 PAD7|FX2 PAD10",
                            "XoroTablet": "KidsPAD 701|PAD[ ]?712|PAD[ ]?714|PAD[ ]?716|PAD[ ]?717|PAD[ ]?718|PAD[ ]?720|PAD[ ]?721|PAD[ ]?722|PAD[ ]?790|PAD[ ]?792|PAD[ ]?900|PAD[ ]?9715D|PAD[ ]?9716DR|PAD[ ]?9718DR|PAD[ ]?9719QR|PAD[ ]?9720QR|TelePAD1030|Telepad1032|TelePAD730|TelePAD731|TelePAD732|TelePAD735Q|TelePAD830|TelePAD9730|TelePAD795|MegaPAD 1331|MegaPAD 1851|MegaPAD 2151",
                            "ViewsonicTablet": "ViewPad 10pi|ViewPad 10e|ViewPad 10s|ViewPad E72|ViewPad7|ViewPad E100|ViewPad 7e|ViewSonic VB733|VB100a",
                            "OdysTablet": "LOOX|XENO10|ODYS[ -](Space|EVO|Xpress|NOON)|\\bXELIO\\b|Xelio10Pro|XELIO7PHONETAB|XELIO10EXTREME|XELIOPT2|NEO_QUAD10",
                            "CaptivaTablet": "CAPTIVA PAD",
                            "IconbitTablet": "NetTAB|NT-3702|NT-3702S|NT-3702S|NT-3603P|NT-3603P|NT-0704S|NT-0704S|NT-3805C|NT-3805C|NT-0806C|NT-0806C|NT-0909T|NT-0909T|NT-0907S|NT-0907S|NT-0902S|NT-0902S",
                            "TeclastTablet": "T98 4G|\\bP80\\b|\\bX90HD\\b|X98 Air|X98 Air 3G|\\bX89\\b|P80 3G|\\bX80h\\b|P98 Air|\\bX89HD\\b|P98 3G|\\bP90HD\\b|P89 3G|X98 3G|\\bP70h\\b|P79HD 3G|G18d 3G|\\bP79HD\\b|\\bP89s\\b|\\bA88\\b|\\bP10HD\\b|\\bP19HD\\b|G18 3G|\\bP78HD\\b|\\bA78\\b|\\bP75\\b|G17s 3G|G17h 3G|\\bP85t\\b|\\bP90\\b|\\bP11\\b|\\bP98t\\b|\\bP98HD\\b|\\bG18d\\b|\\bP85s\\b|\\bP11HD\\b|\\bP88s\\b|\\bA80HD\\b|\\bA80se\\b|\\bA10h\\b|\\bP89\\b|\\bP78s\\b|\\bG18\\b|\\bP85\\b|\\bA70h\\b|\\bA70\\b|\\bG17\\b|\\bP18\\b|\\bA80s\\b|\\bA11s\\b|\\bP88HD\\b|\\bA80h\\b|\\bP76s\\b|\\bP76h\\b|\\bP98\\b|\\bA10HD\\b|\\bP78\\b|\\bP88\\b|\\bA11\\b|\\bA10t\\b|\\bP76a\\b|\\bP76t\\b|\\bP76e\\b|\\bP85HD\\b|\\bP85a\\b|\\bP86\\b|\\bP75HD\\b|\\bP76v\\b|\\bA12\\b|\\bP75a\\b|\\bA15\\b|\\bP76Ti\\b|\\bP81HD\\b|\\bA10\\b|\\bT760VE\\b|\\bT720HD\\b|\\bP76\\b|\\bP73\\b|\\bP71\\b|\\bP72\\b|\\bT720SE\\b|\\bC520Ti\\b|\\bT760\\b|\\bT720VE\\b|T720-3GE|T720-WiFi",
                            "OndaTablet": "\\b(V975i|Vi30|VX530|V701|Vi60|V701s|Vi50|V801s|V719|Vx610w|VX610W|V819i|Vi10|VX580W|Vi10|V711s|V813|V811|V820w|V820|Vi20|V711|VI30W|V712|V891w|V972|V819w|V820w|Vi60|V820w|V711|V813s|V801|V819|V975s|V801|V819|V819|V818|V811|V712|V975m|V101w|V961w|V812|V818|V971|V971s|V919|V989|V116w|V102w|V973|Vi40)\\b[\\s]+",
                            "JaytechTablet": "TPC-PA762",
                            "BlaupunktTablet": "Endeavour 800NG|Endeavour 1010",
                            "DigmaTablet": "\\b(iDx10|iDx9|iDx8|iDx7|iDxD7|iDxD8|iDsQ8|iDsQ7|iDsQ8|iDsD10|iDnD7|3TS804H|iDsQ11|iDj7|iDs10)\\b",
                            "EvolioTablet": "ARIA_Mini_wifi|Aria[ _]Mini|Evolio X10|Evolio X7|Evolio X8|\\bEvotab\\b|\\bNeura\\b",
                            "LavaTablet": "QPAD E704|\\bIvoryS\\b|E-TAB IVORY|\\bE-TAB\\b",
                            "AocTablet": "MW0811|MW0812|MW0922|MTK8382|MW1031|MW0831|MW0821|MW0931|MW0712",
                            "MpmanTablet": "MP11 OCTA|MP10 OCTA|MPQC1114|MPQC1004|MPQC994|MPQC974|MPQC973|MPQC804|MPQC784|MPQC780|\\bMPG7\\b|MPDCG75|MPDCG71|MPDC1006|MP101DC|MPDC9000|MPDC905|MPDC706HD|MPDC706|MPDC705|MPDC110|MPDC100|MPDC99|MPDC97|MPDC88|MPDC8|MPDC77|MP709|MID701|MID711|MID170|MPDC703|MPQC1010",
                            "CelkonTablet": "CT695|CT888|CT[\\s]?910|CT7 Tab|CT9 Tab|CT3 Tab|CT2 Tab|CT1 Tab|C820|C720|\\bCT-1\\b",
                            "WolderTablet": "miTab \\b(DIAMOND|SPACE|BROOKLYN|NEO|FLY|MANHATTAN|FUNK|EVOLUTION|SKY|GOCAR|IRON|GENIUS|POP|MINT|EPSILON|BROADWAY|JUMP|HOP|LEGEND|NEW AGE|LINE|ADVANCE|FEEL|FOLLOW|LIKE|LINK|LIVE|THINK|FREEDOM|CHICAGO|CLEVELAND|BALTIMORE-GH|IOWA|BOSTON|SEATTLE|PHOENIX|DALLAS|IN 101|MasterChef)\\b",
                            "MiTablet": "\\bMI PAD\\b|\\bHM NOTE 1W\\b",
                            "NibiruTablet": "Nibiru M1|Nibiru Jupiter One",
                            "NexoTablet": "NEXO NOVA|NEXO 10|NEXO AVIO|NEXO FREE|NEXO GO|NEXO EVO|NEXO 3G|NEXO SMART|NEXO KIDDO|NEXO MOBI",
                            "LeaderTablet": "TBLT10Q|TBLT10I|TBL-10WDKB|TBL-10WDKBO2013|TBL-W230V2|TBL-W450|TBL-W500|SV572|TBLT7I|TBA-AC7-8G|TBLT79|TBL-8W16|TBL-10W32|TBL-10WKB|TBL-W100",
                            "UbislateTablet": "UbiSlate[\\s]?7C",
                            "PocketBookTablet": "Pocketbook",
                            "KocasoTablet": "\\b(TB-1207)\\b",
                            "HisenseTablet": "\\b(F5281|E2371)\\b",
                            "Hudl": "Hudl HT7S3|Hudl 2",
                            "TelstraTablet": "T-Hub2",
                            "GenericTablet": "Android.*\\b97D\\b|Tablet(?!.*PC)|BNTV250A|MID-WCDMA|LogicPD Zoom2|\\bA7EB\\b|CatNova8|A1_07|CT704|CT1002|\\bM721\\b|rk30sdk|\\bEVOTAB\\b|M758A|ET904|ALUMIUM10|Smartfren Tab|Endeavour 1010|Tablet-PC-4|Tagi Tab|\\bM6pro\\b|CT1020W|arc 10HD|\\bTP750\\b|\\bQTAQZ3\\b"
                        },
                        "oss": {
                            "AndroidOS": "Android",
                            "BlackBerryOS": "blackberry|\\bBB10\\b|rim tablet os",
                            "PalmOS": "PalmOS|avantgo|blazer|elaine|hiptop|palm|plucker|xiino",
                            "SymbianOS": "Symbian|SymbOS|Series60|Series40|SYB-[0-9]+|\\bS60\\b",
                            "WindowsMobileOS": "Windows CE.*(PPC|Smartphone|Mobile|[0-9]{3}x[0-9]{3})|Window Mobile|Windows Phone [0-9.]+|WCE;",
                            "WindowsPhoneOS": "Windows Phone 10.0|Windows Phone 8.1|Windows Phone 8.0|Windows Phone OS|XBLWP7|ZuneWP7|Windows NT 6.[23]; ARM;",
                            "iOS": "\\biPhone.*Mobile|\\biPod|\\biPad",
                            "MeeGoOS": "MeeGo",
                            "MaemoOS": "Maemo",
                            "JavaOS": "J2ME\/|\\bMIDP\\b|\\bCLDC\\b",
                            "webOS": "webOS|hpwOS",
                            "badaOS": "\\bBada\\b",
                            "BREWOS": "BREW"
                        },
                        "uas": {
                            "Chrome": "\\bCrMo\\b|CriOS|Android.*Chrome\/[.0-9]* (Mobile)?",
                            "Dolfin": "\\bDolfin\\b",
                            "Opera": "Opera.*Mini|Opera.*Mobi|Android.*Opera|Mobile.*OPR\/[0-9.]+|Coast\/[0-9.]+",
                            "Skyfire": "Skyfire",
                            "Edge": "Mobile Safari\/[.0-9]* Edge",
                            "IE": "IEMobile|MSIEMobile",
                            "Firefox": "fennec|firefox.*maemo|(Mobile|Tablet).*Firefox|Firefox.*Mobile|FxiOS",
                            "Bolt": "bolt",
                            "TeaShark": "teashark",
                            "Blazer": "Blazer",
                            "Safari": "Version.*Mobile.*Safari|Safari.*Mobile|MobileSafari",
                            "UCBrowser": "UC.*Browser|UCWEB",
                            "baiduboxapp": "baiduboxapp",
                            "baidubrowser": "baidubrowser",
                            "DiigoBrowser": "DiigoBrowser",
                            "Puffin": "Puffin",
                            "Mercury": "\\bMercury\\b",
                            "ObigoBrowser": "Obigo",
                            "NetFront": "NF-Browser",
                            "GenericBrowser": "NokiaBrowser|OviBrowser|OneBrowser|TwonkyBeamBrowser|SEMC.*Browser|FlyFlow|Minimo|NetFront|Novarra-Vision|MQQBrowser|MicroMessenger",
                            "PaleMoon": "Android.*PaleMoon|Mobile.*PaleMoon"
                        },
                        "props": {
                            "Mobile": "Mobile\/[VER]",
                            "Build": "Build\/[VER]",
                            "Version": "Version\/[VER]",
                            "VendorID": "VendorID\/[VER]",
                            "iPad": "iPad.*CPU[a-z ]+[VER]",
                            "iPhone": "iPhone.*CPU[a-z ]+[VER]",
                            "iPod": "iPod.*CPU[a-z ]+[VER]",
                            "Kindle": "Kindle\/[VER]",
                            "Chrome": [
                                "Chrome\/[VER]",
                                "CriOS\/[VER]",
                                "CrMo\/[VER]"
                            ],
                            "Coast": [
                                "Coast\/[VER]"
                            ],
                            "Dolfin": "Dolfin\/[VER]",
                            "Firefox": [
                                "Firefox\/[VER]",
                                "FxiOS\/[VER]"
                            ],
                            "Fennec": "Fennec\/[VER]",
                            "Edge": "Edge\/[VER]",
                            "IE": [
                                "IEMobile\/[VER];",
                                "IEMobile [VER]",
                                "MSIE [VER];",
                                "Trident\/[0-9.]+;.*rv:[VER]"
                            ],
                            "NetFront": "NetFront\/[VER]",
                            "NokiaBrowser": "NokiaBrowser\/[VER]",
                            "Opera": [
                                " OPR\/[VER]",
                                "Opera Mini\/[VER]",
                                "Version\/[VER]"
                            ],
                            "Opera Mini": "Opera Mini\/[VER]",
                            "Opera Mobi": "Version\/[VER]",
                            "UC Browser": "UC Browser[VER]",
                            "MQQBrowser": "MQQBrowser\/[VER]",
                            "MicroMessenger": "MicroMessenger\/[VER]",
                            "baiduboxapp": "baiduboxapp\/[VER]",
                            "baidubrowser": "baidubrowser\/[VER]",
                            "SamsungBrowser": "SamsungBrowser\/[VER]",
                            "Iron": "Iron\/[VER]",
                            "Safari": [
                                "Version\/[VER]",
                                "Safari\/[VER]"
                            ],
                            "Skyfire": "Skyfire\/[VER]",
                            "Tizen": "Tizen\/[VER]",
                            "Webkit": "webkit[ \/][VER]",
                            "PaleMoon": "PaleMoon\/[VER]",
                            "Gecko": "Gecko\/[VER]",
                            "Trident": "Trident\/[VER]",
                            "Presto": "Presto\/[VER]",
                            "Goanna": "Goanna\/[VER]",
                            "iOS": " \\bi?OS\\b [VER][ ;]{1}",
                            "Android": "Android [VER]",
                            "BlackBerry": [
                                "BlackBerry[\\w]+\/[VER]",
                                "BlackBerry.*Version\/[VER]",
                                "Version\/[VER]"
                            ],
                            "BREW": "BREW [VER]",
                            "Java": "Java\/[VER]",
                            "Windows Phone OS": [
                                "Windows Phone OS [VER]",
                                "Windows Phone [VER]"
                            ],
                            "Windows Phone": "Windows Phone [VER]",
                            "Windows CE": "Windows CE\/[VER]",
                            "Windows NT": "Windows NT [VER]",
                            "Symbian": [
                                "SymbianOS\/[VER]",
                                "Symbian\/[VER]"
                            ],
                            "webOS": [
                                "webOS\/[VER]",
                                "hpwOS\/[VER];"
                            ]
                        },
                        "utils": {
                            "Bot": "Googlebot|facebookexternalhit|AdsBot-Google|Google Keyword Suggestion|Facebot|YandexBot|YandexMobileBot|bingbot|ia_archiver|AhrefsBot|Ezooms|GSLFbot|WBSearchBot|Twitterbot|TweetmemeBot|Twikle|PaperLiBot|Wotbox|UnwindFetchor|Exabot|MJ12bot|YandexImages|TurnitinBot|Pingdom",
                            "MobileBot": "Googlebot-Mobile|AdsBot-Google-Mobile|YahooSeeker\/M1A1-R2D2",
                            "DesktopMode": "WPDesktop",
                            "TV": "SonyDTV|HbbTV",
                            "WebKit": "(webkit)[ \/]([\\w.]+)",
                            "Console": "\\b(Nintendo|Nintendo WiiU|Nintendo 3DS|PLAYSTATION|Xbox)\\b",
                            "Watch": "SM-V700"
                        }
                    };

                    // following patterns come from http://detectmobilebrowsers.com/
                    impl.detectMobileBrowsers = {
                        fullPattern: /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,
                        shortPattern: /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i,
                        tabletPattern: /android|ipad|playbook|silk/i
                    };

                    var hasOwnProp = Object.prototype.hasOwnProperty,
                        isArray;

                    impl.FALLBACK_PHONE = 'UnknownPhone';
                    impl.FALLBACK_TABLET = 'UnknownTablet';
                    impl.FALLBACK_MOBILE = 'UnknownMobile';

                    isArray = ('isArray' in Array) ?
                        Array.isArray : function(value) {
                            return Object.prototype.toString.call(value) === '[object Array]';
                        };

                    function equalIC(a, b) {
                        return a != null && b != null && a.toLowerCase() === b.toLowerCase();
                    }

                    function containsIC(array, value) {
                        var valueLC, i, len = array.length;
                        if (!len || !value) {
                            return false;
                        }
                        valueLC = value.toLowerCase();
                        for (i = 0; i < len; ++i) {
                            if (valueLC === array[i].toLowerCase()) {
                                return true;
                            }
                        }
                        return false;
                    }

                    function convertPropsToRegExp(object) {
                        for (var key in object) {
                            if (hasOwnProp.call(object, key)) {
                                object[key] = new RegExp(object[key], 'i');
                            }
                        }
                    }

                    function prepareUserAgent(userAgent) {
                        return (userAgent || '').substr(0, 500); // mitigate vulnerable to ReDoS
                    }

                    (function init() {
                        var key, values, value, i, len, verPos, mobileDetectRules = impl.mobileDetectRules;
                        for (key in mobileDetectRules.props) {
                            if (hasOwnProp.call(mobileDetectRules.props, key)) {
                                values = mobileDetectRules.props[key];
                                if (!isArray(values)) {
                                    values = [values];
                                }
                                len = values.length;
                                for (i = 0; i < len; ++i) {
                                    value = values[i];
                                    verPos = value.indexOf('[VER]');
                                    if (verPos >= 0) {
                                        value = value.substring(0, verPos) + '([\\w._\\+]+)' + value.substring(verPos + 5);
                                    }
                                    values[i] = new RegExp(value, 'i');
                                }
                                mobileDetectRules.props[key] = values;
                            }
                        }
                        convertPropsToRegExp(mobileDetectRules.oss);
                        convertPropsToRegExp(mobileDetectRules.phones);
                        convertPropsToRegExp(mobileDetectRules.tablets);
                        convertPropsToRegExp(mobileDetectRules.uas);
                        convertPropsToRegExp(mobileDetectRules.utils);

                        // copy some patterns to oss0 which are tested first (see issue#15)
                        mobileDetectRules.oss0 = {
                            WindowsPhoneOS: mobileDetectRules.oss.WindowsPhoneOS,
                            WindowsMobileOS: mobileDetectRules.oss.WindowsMobileOS
                        };
                    }());

                    /**
                     * Test userAgent string against a set of rules and find the first matched key.
                     * @param {Object} rules (key is String, value is RegExp)
                     * @param {String} userAgent the navigator.userAgent (or HTTP-Header 'User-Agent').
                     * @returns {String|null} the matched key if found, otherwise <tt>null</tt>
                     * @private
                     */
                    impl.findMatch = function(rules, userAgent) {
                        for (var key in rules) {
                            if (hasOwnProp.call(rules, key)) {
                                if (rules[key].test(userAgent)) {
                                    return key;
                                }
                            }
                        }
                        return null;
                    };

                    /**
                     * Test userAgent string against a set of rules and return an array of matched keys.
                     * @param {Object} rules (key is String, value is RegExp)
                     * @param {String} userAgent the navigator.userAgent (or HTTP-Header 'User-Agent').
                     * @returns {Array} an array of matched keys, may be empty when there is no match, but not <tt>null</tt>
                     * @private
                     */
                    impl.findMatches = function(rules, userAgent) {
                        var result = [];
                        for (var key in rules) {
                            if (hasOwnProp.call(rules, key)) {
                                if (rules[key].test(userAgent)) {
                                    result.push(key);
                                }
                            }
                        }
                        return result;
                    };

                    /**
                     * Check the version of the given property in the User-Agent.
                     *
                     * @param {String} propertyName
                     * @param {String} userAgent
                     * @return {String} version or <tt>null</tt> if version not found
                     * @private
                     */
                    impl.getVersionStr = function(propertyName, userAgent) {
                        var props = impl.mobileDetectRules.props,
                            patterns, i, len, match;
                        if (hasOwnProp.call(props, propertyName)) {
                            patterns = props[propertyName];
                            len = patterns.length;
                            for (i = 0; i < len; ++i) {
                                match = patterns[i].exec(userAgent);
                                if (match !== null) {
                                    return match[1];
                                }
                            }
                        }
                        return null;
                    };

                    /**
                     * Check the version of the given property in the User-Agent.
                     * Will return a float number. (eg. 2_0 will return 2.0, 4.3.1 will return 4.31)
                     *
                     * @param {String} propertyName
                     * @param {String} userAgent
                     * @return {Number} version or <tt>NaN</tt> if version not found
                     * @private
                     */
                    impl.getVersion = function(propertyName, userAgent) {
                        var version = impl.getVersionStr(propertyName, userAgent);
                        return version ? impl.prepareVersionNo(version) : NaN;
                    };

                    /**
                     * Prepare the version number.
                     *
                     * @param {String} version
                     * @return {Number} the version number as a floating number
                     * @private
                     */
                    impl.prepareVersionNo = function(version) {
                        var numbers;

                        numbers = version.split(/[a-z._ \/\-]/i);
                        if (numbers.length === 1) {
                            version = numbers[0];
                        }
                        if (numbers.length > 1) {
                            version = numbers[0] + '.';
                            numbers.shift();
                            version += numbers.join('');
                        }
                        return Number(version);
                    };

                    impl.isMobileFallback = function(userAgent) {
                        return impl.detectMobileBrowsers.fullPattern.test(userAgent) ||
                            impl.detectMobileBrowsers.shortPattern.test(userAgent.substr(0, 4));
                    };

                    impl.isTabletFallback = function(userAgent) {
                        return impl.detectMobileBrowsers.tabletPattern.test(userAgent);
                    };

                    impl.prepareDetectionCache = function(cache, userAgent, maxPhoneWidth) {
                        if (cache.mobile !== undefined) {
                            return;
                        }
                        var phone, tablet, phoneSized;

                        // first check for stronger tablet rules, then phone (see issue#5)
                        tablet = impl.findMatch(impl.mobileDetectRules.tablets, userAgent);
                        if (tablet) {
                            cache.mobile = cache.tablet = tablet;
                            cache.phone = null;
                            return; // unambiguously identified as tablet
                        }

                        phone = impl.findMatch(impl.mobileDetectRules.phones, userAgent);
                        if (phone) {
                            cache.mobile = cache.phone = phone;
                            cache.tablet = null;
                            return; // unambiguously identified as phone
                        }

                        // our rules haven't found a match -> try more general fallback rules
                        if (impl.isMobileFallback(userAgent)) {
                            phoneSized = MobileDetect.isPhoneSized(maxPhoneWidth);
                            if (phoneSized === undefined) {
                                cache.mobile = impl.FALLBACK_MOBILE;
                                cache.tablet = cache.phone = null;
                            } else if (phoneSized) {
                                cache.mobile = cache.phone = impl.FALLBACK_PHONE;
                                cache.tablet = null;
                            } else {
                                cache.mobile = cache.tablet = impl.FALLBACK_TABLET;
                                cache.phone = null;
                            }
                        } else if (impl.isTabletFallback(userAgent)) {
                            cache.mobile = cache.tablet = impl.FALLBACK_TABLET;
                            cache.phone = null;
                        } else {
                            // not mobile at all!
                            cache.mobile = cache.tablet = cache.phone = null;
                        }
                    };

                    // t is a reference to a MobileDetect instance
                    impl.mobileGrade = function(t) {
                        // impl note:
                        // To keep in sync w/ Mobile_Detect.php easily, the following code is tightly aligned to the PHP version.
                        // When changes are made in Mobile_Detect.php, copy this method and replace:
                        //     $this-> / t.
                        //     self::MOBILE_GRADE_(.) / '$1'
                        //     , self::VERSION_TYPE_FLOAT / (nothing)
                        //     isIOS() / os('iOS')
                        //     [reg] / (nothing)   <-- jsdelivr complaining about unescaped unicode character U+00AE
                        var $isMobile = t.mobile() !== null;

                        if (
                            // Apple iOS 3.2-5.1 - Tested on the original iPad (4.3 / 5.0), iPad 2 (4.3), iPad 3 (5.1), original iPhone (3.1), iPhone 3 (3.2), 3GS (4.3), 4 (4.3 / 5.0), and 4S (5.1)
                            t.os('iOS') && t.version('iPad') >= 4.3 ||
                            t.os('iOS') && t.version('iPhone') >= 3.1 ||
                            t.os('iOS') && t.version('iPod') >= 3.1 ||

                            // Android 2.1-2.3 - Tested on the HTC Incredible (2.2), original Droid (2.2), HTC Aria (2.1), Google Nexus S (2.3). Functional on 1.5 & 1.6 but performance may be sluggish, tested on Google G1 (1.5)
                            // Android 3.1 (Honeycomb)  - Tested on the Samsung Galaxy Tab 10.1 and Motorola XOOM
                            // Android 4.0 (ICS)  - Tested on a Galaxy Nexus. Note: transition performance can be poor on upgraded devices
                            // Android 4.1 (Jelly Bean)  - Tested on a Galaxy Nexus and Galaxy 7
                            (t.version('Android') > 2.1 && t.is('Webkit')) ||

                            // Windows Phone 7-7.5 - Tested on the HTC Surround (7.0) HTC Trophy (7.5), LG-E900 (7.5), Nokia Lumia 800
                            t.version('Windows Phone OS') >= 7.0 ||

                            // Blackberry 7 - Tested on BlackBerry Torch 9810
                            // Blackberry 6.0 - Tested on the Torch 9800 and Style 9670
                            t.is('BlackBerry') && t.version('BlackBerry') >= 6.0 ||
                            // Blackberry Playbook (1.0-2.0) - Tested on PlayBook
                            t.match('Playbook.*Tablet') ||

                            // Palm WebOS (1.4-2.0) - Tested on the Palm Pixi (1.4), Pre (1.4), Pre 2 (2.0)
                            (t.version('webOS') >= 1.4 && t.match('Palm|Pre|Pixi')) ||
                            // Palm WebOS 3.0  - Tested on HP TouchPad
                            t.match('hp.*TouchPad') ||

                            // Firefox Mobile (12 Beta) - Tested on Android 2.3 device
                            (t.is('Firefox') && t.version('Firefox') >= 12) ||

                            // Chrome for Android - Tested on Android 4.0, 4.1 device
                            (t.is('Chrome') && t.is('AndroidOS') && t.version('Android') >= 4.0) ||

                            // Skyfire 4.1 - Tested on Android 2.3 device
                            (t.is('Skyfire') && t.version('Skyfire') >= 4.1 && t.is('AndroidOS') && t.version('Android') >= 2.3) ||

                            // Opera Mobile 11.5-12: Tested on Android 2.3
                            (t.is('Opera') && t.version('Opera Mobi') > 11 && t.is('AndroidOS')) ||

                            // Meego 1.2 - Tested on Nokia 950 and N9
                            t.is('MeeGoOS') ||

                            // Tizen (pre-release) - Tested on early hardware
                            t.is('Tizen') ||

                            // Samsung Bada 2.0 - Tested on a Samsung Wave 3, Dolphin browser
                            // @todo: more tests here!
                            t.is('Dolfin') && t.version('Bada') >= 2.0 ||

                            // UC Browser - Tested on Android 2.3 device
                            ((t.is('UC Browser') || t.is('Dolfin')) && t.version('Android') >= 2.3) ||

                            // Kindle 3 and Fire  - Tested on the built-in WebKit browser for each
                            (t.match('Kindle Fire') ||
                                t.is('Kindle') && t.version('Kindle') >= 3.0) ||

                            // Nook Color 1.4.1 - Tested on original Nook Color, not Nook Tablet
                            t.is('AndroidOS') && t.is('NookTablet') ||

                            // Chrome Desktop 11-21 - Tested on OS X 10.7 and Windows 7
                            t.version('Chrome') >= 11 && !$isMobile ||

                            // Safari Desktop 4-5 - Tested on OS X 10.7 and Windows 7
                            t.version('Safari') >= 5.0 && !$isMobile ||

                            // Firefox Desktop 4-13 - Tested on OS X 10.7 and Windows 7
                            t.version('Firefox') >= 4.0 && !$isMobile ||

                            // Internet Explorer 7-9 - Tested on Windows XP, Vista and 7
                            t.version('MSIE') >= 7.0 && !$isMobile ||

                            // Opera Desktop 10-12 - Tested on OS X 10.7 and Windows 7
                            // @reference: http://my.opera.com/community/openweb/idopera/
                            t.version('Opera') >= 10 && !$isMobile

                        ) {
                            return 'A';
                        }

                        if (
                            t.os('iOS') && t.version('iPad') < 4.3 ||
                            t.os('iOS') && t.version('iPhone') < 3.1 ||
                            t.os('iOS') && t.version('iPod') < 3.1 ||

                            // Blackberry 5.0: Tested on the Storm 2 9550, Bold 9770
                            t.is('Blackberry') && t.version('BlackBerry') >= 5 && t.version('BlackBerry') < 6 ||

                            //Opera Mini (5.0-6.5) - Tested on iOS 3.2/4.3 and Android 2.3
                            (t.version('Opera Mini') >= 5.0 && t.version('Opera Mini') <= 6.5 &&
                                (t.version('Android') >= 2.3 || t.is('iOS'))) ||

                            // Nokia Symbian^3 - Tested on Nokia N8 (Symbian^3), C7 (Symbian^3), also works on N97 (Symbian^1)
                            t.match('NokiaN8|NokiaC7|N97.*Series60|Symbian/3') ||

                            // @todo: report this (tested on Nokia N71)
                            t.version('Opera Mobi') >= 11 && t.is('SymbianOS')
                        ) {
                            return 'B';
                        }

                        if (
                            // Blackberry 4.x - Tested on the Curve 8330
                            t.version('BlackBerry') < 5.0 ||
                            // Windows Mobile - Tested on the HTC Leo (WinMo 5.2)
                            t.match('MSIEMobile|Windows CE.*Mobile') || t.version('Windows Mobile') <= 5.2

                        ) {
                            return 'C';
                        }

                        //All older smartphone platforms and featurephones - Any device that doesn't support media queries
                        //will receive the basic, C grade experience.
                        return 'C';
                    };

                    impl.detectOS = function(ua) {
                        return impl.findMatch(impl.mobileDetectRules.oss0, ua) ||
                            impl.findMatch(impl.mobileDetectRules.oss, ua);
                    };

                    impl.getDeviceSmallerSide = function() {
                        return window.screen.width < window.screen.height ?
                            window.screen.width :
                            window.screen.height;
                    };

                    /**
                     * Constructor for MobileDetect object.
                     * <br>
                     * Such an object will keep a reference to the given user-agent string and cache most of the detect queries.<br>
                     * <div style="background-color: #d9edf7; border: 1px solid #bce8f1; color: #3a87ad; padding: 14px; border-radius: 2px; margin-top: 20px">
                     *     <strong>Find information how to download and install:</strong>
                     *     <a href="https://github.com/hgoebl/mobile-detect.js/">github.com/hgoebl/mobile-detect.js/</a>
                     * </div>
                     *
                     * @example <pre>
                     *     var md = new MobileDetect(window.navigator.userAgent);
                     *     if (md.mobile()) {
                     *         location.href = (md.mobileGrade() === 'A') ? '/mobile/' : '/lynx/';
                     *     }
                     * </pre>
                     *
                     * @param {string} userAgent typically taken from window.navigator.userAgent or http_header['User-Agent']
                     * @param {number} [maxPhoneWidth=600] <strong>only for browsers</strong> specify a value for the maximum
                     *        width of smallest device side (in logical "CSS" pixels) until a device detected as mobile will be handled
                     *        as phone.
                     *        This is only used in cases where the device cannot be classified as phone or tablet.<br>
                     *        See <a href="http://developer.android.com/guide/practices/screens_support.html">Declaring Tablet Layouts
                     *        for Android</a>.<br>
                     *        If you provide a value < 0, then this "fuzzy" check is disabled.
                     * @constructor
                     * @global
                     */
                    function MobileDetect(userAgent, maxPhoneWidth) {
                        this.ua = prepareUserAgent(userAgent);
                        this._cache = {};
                        //600dp is typical 7" tablet minimum width
                        this.maxPhoneWidth = maxPhoneWidth || 600;
                    }

                    MobileDetect.prototype = {
                        constructor: MobileDetect,

                        /**
                         * Returns the detected phone or tablet type or <tt>null</tt> if it is not a mobile device.
                         * <br>
                         * For a list of possible return values see {@link MobileDetect#phone} and {@link MobileDetect#tablet}.<br>
                         * <br>
                         * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against
                         * the patterns of <a href="http://detectmobilebrowsers.com/">detectmobilebrowsers.com</a>. If this test
                         * is positive, a value of <code>UnknownPhone</code>, <code>UnknownTablet</code> or
                         * <code>UnknownMobile</code> is returned.<br>
                         * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>
                         * <br>
                         * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>
                         * and <code>UnknownMobile</code>, so you will get <code>UnknownMobile</code> here.<br>
                         * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:
                         * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.
                         * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.
                         * <br>
                         * In most cases you will use the return value just as a boolean.
                         *
                         * @returns {String} the key for the phone family or tablet family, e.g. "Nexus".
                         * @function MobileDetect#mobile
                         */
                        mobile: function() {
                            impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);
                            return this._cache.mobile;
                        },

                        /**
                         * Returns the detected phone type/family string or <tt>null</tt>.
                         * <br>
                         * The returned tablet (family or producer) is one of following keys:<br>
                         * <br><tt>iPhone, BlackBerry, HTC, Nexus, Dell, Motorola, Samsung, LG, Sony, Asus,
                         * NokiaLumia, Micromax, Palm, Vertu, Pantech, Fly, Wiko, iMobile, SimValley,
                         * Wolfgang, Alcatel, Nintendo, Amoi, INQ, GenericPhone</tt><br>
                         * <br>
                         * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against
                         * the patterns of <a href="http://detectmobilebrowsers.com/">detectmobilebrowsers.com</a>. If this test
                         * is positive, a value of <code>UnknownPhone</code> or <code>UnknownMobile</code> is returned.<br>
                         * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>
                         * <br>
                         * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>
                         * and <code>UnknownMobile</code>, so you will get <code>null</code> here, while {@link MobileDetect#mobile}
                         * will return <code>UnknownMobile</code>.<br>
                         * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:
                         * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.
                         * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.
                         * <br>
                         * In most cases you will use the return value just as a boolean.
                         *
                         * @returns {String} the key of the phone family or producer, e.g. "iPhone"
                         * @function MobileDetect#phone
                         */
                        phone: function() {
                            impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);
                            return this._cache.phone;
                        },

                        /**
                         * Returns the detected tablet type/family string or <tt>null</tt>.
                         * <br>
                         * The returned tablet (family or producer) is one of following keys:<br>
                         * <br><tt>iPad, NexusTablet, SamsungTablet, Kindle, SurfaceTablet, HPTablet, AsusTablet,
                         * BlackBerryTablet, HTCtablet, MotorolaTablet, NookTablet, AcerTablet,
                         * ToshibaTablet, LGTablet, FujitsuTablet, PrestigioTablet, LenovoTablet,
                         * DellTablet, YarvikTablet, MedionTablet, ArnovaTablet, IntensoTablet, IRUTablet,
                         * MegafonTablet, EbodaTablet, AllViewTablet, ArchosTablet, AinolTablet,
                         * NokiaLumiaTablet, SonyTablet, PhilipsTablet, CubeTablet, CobyTablet, MIDTablet,
                         * MSITablet, SMiTTablet, RockChipTablet, FlyTablet, bqTablet, HuaweiTablet,
                         * NecTablet, PantechTablet, BronchoTablet, VersusTablet, ZyncTablet,
                         * PositivoTablet, NabiTablet, KoboTablet, DanewTablet, TexetTablet,
                         * PlaystationTablet, TrekstorTablet, PyleAudioTablet, AdvanTablet,
                         * DanyTechTablet, GalapadTablet, MicromaxTablet, KarbonnTablet, AllFineTablet,
                         * PROSCANTablet, YONESTablet, ChangJiaTablet, GUTablet, PointOfViewTablet,
                         * OvermaxTablet, HCLTablet, DPSTablet, VistureTablet, CrestaTablet,
                         * MediatekTablet, ConcordeTablet, GoCleverTablet, ModecomTablet, VoninoTablet,
                         * ECSTablet, StorexTablet, VodafoneTablet, EssentielBTablet, RossMoorTablet,
                         * iMobileTablet, TolinoTablet, AudioSonicTablet, AMPETablet, SkkTablet,
                         * TecnoTablet, JXDTablet, iJoyTablet, FX2Tablet, XoroTablet, ViewsonicTablet,
                         * OdysTablet, CaptivaTablet, IconbitTablet, TeclastTablet, OndaTablet,
                         * JaytechTablet, BlaupunktTablet, DigmaTablet, EvolioTablet, LavaTablet,
                         * AocTablet, MpmanTablet, CelkonTablet, WolderTablet, MiTablet, NibiruTablet,
                         * NexoTablet, LeaderTablet, UbislateTablet, PocketBookTablet, KocasoTablet,
                         * HisenseTablet, Hudl, TelstraTablet, GenericTablet</tt><br>
                         * <br>
                         * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against
                         * the patterns of <a href="http://detectmobilebrowsers.com/">detectmobilebrowsers.com</a>. If this test
                         * is positive, a value of <code>UnknownTablet</code> or <code>UnknownMobile</code> is returned.<br>
                         * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>
                         * <br>
                         * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>
                         * and <code>UnknownMobile</code>, so you will get <code>null</code> here, while {@link MobileDetect#mobile}
                         * will return <code>UnknownMobile</code>.<br>
                         * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:
                         * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.
                         * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.
                         * <br>
                         * In most cases you will use the return value just as a boolean.
                         *
                         * @returns {String} the key of the tablet family or producer, e.g. "SamsungTablet"
                         * @function MobileDetect#tablet
                         */
                        tablet: function() {
                            impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);
                            return this._cache.tablet;
                        },

                        /**
                         * Returns the (first) detected user-agent string or <tt>null</tt>.
                         * <br>
                         * The returned user-agent is one of following keys:<br>
                         * <br><tt>Chrome, Dolfin, Opera, Skyfire, Edge, IE, Firefox, Bolt, TeaShark, Blazer,
                         * Safari, UCBrowser, baiduboxapp, baidubrowser, DiigoBrowser, Puffin, Mercury,
                         * ObigoBrowser, NetFront, GenericBrowser, PaleMoon</tt><br>
                         * <br>
                         * In most cases calling {@link MobileDetect#userAgent} will be sufficient. But there are rare
                         * cases where a mobile device pretends to be more than one particular browser. You can get the
                         * list of all matches with {@link MobileDetect#userAgents} or check for a particular value by
                         * providing one of the defined keys as first argument to {@link MobileDetect#is}.
                         *
                         * @returns {String} the key for the detected user-agent or <tt>null</tt>
                         * @function MobileDetect#userAgent
                         */
                        userAgent: function() {
                            if (this._cache.userAgent === undefined) {
                                this._cache.userAgent = impl.findMatch(impl.mobileDetectRules.uas, this.ua);
                            }
                            return this._cache.userAgent;
                        },

                        /**
                         * Returns all detected user-agent strings.
                         * <br>
                         * The array is empty or contains one or more of following keys:<br>
                         * <br><tt>Chrome, Dolfin, Opera, Skyfire, Edge, IE, Firefox, Bolt, TeaShark, Blazer,
                         * Safari, UCBrowser, baiduboxapp, baidubrowser, DiigoBrowser, Puffin, Mercury,
                         * ObigoBrowser, NetFront, GenericBrowser, PaleMoon</tt><br>
                         * <br>
                         * In most cases calling {@link MobileDetect#userAgent} will be sufficient. But there are rare
                         * cases where a mobile device pretends to be more than one particular browser. You can get the
                         * list of all matches with {@link MobileDetect#userAgents} or check for a particular value by
                         * providing one of the defined keys as first argument to {@link MobileDetect#is}.
                         *
                         * @returns {Array} the array of detected user-agent keys or <tt>[]</tt>
                         * @function MobileDetect#userAgents
                         */
                        userAgents: function() {
                            if (this._cache.userAgents === undefined) {
                                this._cache.userAgents = impl.findMatches(impl.mobileDetectRules.uas, this.ua);
                            }
                            return this._cache.userAgents;
                        },

                        /**
                         * Returns the detected operating system string or <tt>null</tt>.
                         * <br>
                         * The operating system is one of following keys:<br>
                         * <br><tt>AndroidOS, BlackBerryOS, PalmOS, SymbianOS, WindowsMobileOS, WindowsPhoneOS,
                         * iOS, MeeGoOS, MaemoOS, JavaOS, webOS, badaOS, BREWOS</tt><br>
                         *
                         * @returns {String} the key for the detected operating system.
                         * @function MobileDetect#os
                         */
                        os: function() {
                            if (this._cache.os === undefined) {
                                this._cache.os = impl.detectOS(this.ua);
                            }
                            return this._cache.os;
                        },

                        /**
                         * Get the version (as Number) of the given property in the User-Agent.
                         * <br>
                         * Will return a float number. (eg. 2_0 will return 2.0, 4.3.1 will return 4.31)
                         *
                         * @param {String} key a key defining a thing which has a version.<br>
                         *        You can use one of following keys:<br>
                         * <br><tt>Mobile, Build, Version, VendorID, iPad, iPhone, iPod, Kindle, Chrome, Coast,
                         * Dolfin, Firefox, Fennec, Edge, IE, NetFront, NokiaBrowser, Opera, Opera Mini,
                         * Opera Mobi, UC Browser, MQQBrowser, MicroMessenger, baiduboxapp, baidubrowser,
                         * SamsungBrowser, Iron, Safari, Skyfire, Tizen, Webkit, PaleMoon, Gecko, Trident,
                         * Presto, Goanna, iOS, Android, BlackBerry, BREW, Java, Windows Phone OS, Windows
                         * Phone, Windows CE, Windows NT, Symbian, webOS</tt><br>
                         *
                         * @returns {Number} the version as float or <tt>NaN</tt> if User-Agent doesn't contain this version.
                         *          Be careful when comparing this value with '==' operator!
                         * @function MobileDetect#version
                         */
                        version: function(key) {
                            return impl.getVersion(key, this.ua);
                        },

                        /**
                         * Get the version (as String) of the given property in the User-Agent.
                         * <br>
                         *
                         * @param {String} key a key defining a thing which has a version.<br>
                         *        You can use one of following keys:<br>
                         * <br><tt>Mobile, Build, Version, VendorID, iPad, iPhone, iPod, Kindle, Chrome, Coast,
                         * Dolfin, Firefox, Fennec, Edge, IE, NetFront, NokiaBrowser, Opera, Opera Mini,
                         * Opera Mobi, UC Browser, MQQBrowser, MicroMessenger, baiduboxapp, baidubrowser,
                         * SamsungBrowser, Iron, Safari, Skyfire, Tizen, Webkit, PaleMoon, Gecko, Trident,
                         * Presto, Goanna, iOS, Android, BlackBerry, BREW, Java, Windows Phone OS, Windows
                         * Phone, Windows CE, Windows NT, Symbian, webOS</tt><br>
                         *
                         * @returns {String} the "raw" version as String or <tt>null</tt> if User-Agent doesn't contain this version.
                         *
                         * @function MobileDetect#versionStr
                         */
                        versionStr: function(key) {
                            return impl.getVersionStr(key, this.ua);
                        },

                        /**
                         * Global test key against userAgent, os, phone, tablet and some other properties of userAgent string.
                         *
                         * @param {String} key the key (case-insensitive) of a userAgent, an operating system, phone or
                         *        tablet family.<br>
                         *        For a complete list of possible values, see {@link MobileDetect#userAgent},
                         *        {@link MobileDetect#os}, {@link MobileDetect#phone}, {@link MobileDetect#tablet}.<br>
                         *        Additionally you have following keys:<br>
                         * <br><tt>Bot, MobileBot, DesktopMode, TV, WebKit, Console, Watch</tt><br>
                         *
                         * @returns {boolean} <tt>true</tt> when the given key is one of the defined keys of userAgent, os, phone,
                         *                    tablet or one of the listed additional keys, otherwise <tt>false</tt>
                         * @function MobileDetect#is
                         */
                        is: function(key) {
                            return containsIC(this.userAgents(), key) ||
                                equalIC(key, this.os()) ||
                                equalIC(key, this.phone()) ||
                                equalIC(key, this.tablet()) ||
                                containsIC(impl.findMatches(impl.mobileDetectRules.utils, this.ua), key);
                        },

                        /**
                         * Do a quick test against navigator::userAgent.
                         *
                         * @param {String|RegExp} pattern the pattern, either as String or RegExp
                         *                        (a string will be converted to a case-insensitive RegExp).
                         * @returns {boolean} <tt>true</tt> when the pattern matches, otherwise <tt>false</tt>
                         * @function MobileDetect#match
                         */
                        match: function(pattern) {
                            if (!(pattern instanceof RegExp)) {
                                pattern = new RegExp(pattern, 'i');
                            }
                            return pattern.test(this.ua);
                        },

                        /**
                         * Checks whether the mobile device can be considered as phone regarding <code>screen.width</code>.
                         * <br>
                         * Obviously this method makes sense in browser environments only (not for Node.js)!
                         * @param {number} [maxPhoneWidth] the maximum logical pixels (aka. CSS-pixels) to be considered as phone.<br>
                         *        The argument is optional and if not present or falsy, the value of the constructor is taken.
                         * @returns {boolean|undefined} <code>undefined</code> if screen size wasn't detectable, else <code>true</code>
                         *          when screen.width is less or equal to maxPhoneWidth, otherwise <code>false</code>.<br>
                         *          Will always return <code>undefined</code> server-side.
                         */
                        isPhoneSized: function(maxPhoneWidth) {
                            return MobileDetect.isPhoneSized(maxPhoneWidth || this.maxPhoneWidth);
                        },

                        /**
                         * Returns the mobile grade ('A', 'B', 'C').
                         *
                         * @returns {String} one of the mobile grades ('A', 'B', 'C').
                         * @function MobileDetect#mobileGrade
                         */
                        mobileGrade: function() {
                            if (this._cache.grade === undefined) {
                                this._cache.grade = impl.mobileGrade(this);
                            }
                            return this._cache.grade;
                        }
                    };

                    // environment-dependent
                    if (typeof window !== 'undefined' && window.screen) {
                        MobileDetect.isPhoneSized = function(maxPhoneWidth) {
                            return maxPhoneWidth < 0 ? undefined : impl.getDeviceSmallerSide() <= maxPhoneWidth;
                        };
                    } else {
                        MobileDetect.isPhoneSized = function() {};
                    }

                    // should not be replaced by a completely new object - just overwrite existing methods
                    MobileDetect._impl = impl;

                    MobileDetect.version = '1.4.0 2017-12-09';

                    return MobileDetect;
                }); // end of call of define()
            })((function(undefined) {
                if (typeof module !== 'undefined' && module.exports) {
                    return function(factory) {
                        module.exports = factory();
                    };
                } else if (true) {
                    return __webpack_require__(117);
                } else if (typeof window !== 'undefined') {
                    return function(factory) {
                        window.MobileDetect = factory();
                    };
                } else {
                    // please file a bug if you get this error!
                    throw new Error('unknown environment');
                }
            })());

            /***/
        },
        /* 117 */
        /***/
        function(module, exports) {

            module.exports = function() {
                throw new Error("define cannot be used indirect");
            };


            /***/
        },
        /* 118 */
        /***/
        function(module, exports, __webpack_require__) {

            'use strict';

            Object.defineProperty(exports, "__esModule", {
                value: true
            });

            var _constants = __webpack_require__(90);

            exports.default = {
                getVars: function getVars() {
                    var vars = {};
                    var elements = document.getElementsByClassName(_constants.SIGN_UP_VAR_CLASS);

                    for (var i = 0; i < elements.length; i += 1) {
                        var element = elements[i];

                        var name = element.getAttribute(_constants.DATA_VAR_NAME);
                        var attribute = element.getAttribute(_constants.DATA_VAR_VALUE);
                        var value = attribute != null ? element[attribute] : null;

                        if (element.nodeName === _constants.FORM_ELEMENT) {
                            value = this.getCheckedValue(name);
                        }

                        if (name != null && value != null) {
                            vars[name] = value;
                        }
                    }

                    return vars;
                },
                getCheckedValue: function getCheckedValue(groupName) {
                    var radios = document.getElementsByName(groupName);
                    for (var i = 0; i < radios.length; i += 1) {
                        if (radios[i].checked) {
                            return radios[i].value;
                        }
                    }
                    return null;
                }
            };

            /***/
        },
        /* 119 */
        /***/
        function(module, exports, __webpack_require__) {

            /* WEBPACK VAR INJECTION */
            (function(fetch) {
                'use strict';

                Object.defineProperty(exports, "__esModule", {
                    value: true
                });

                var _stringify = __webpack_require__(86);

                var _stringify2 = _interopRequireDefault(_stringify);

                var _extends2 = __webpack_require__(3);

                var _extends3 = _interopRequireDefault(_extends2);

                __webpack_require__(88);

                var _uuidUtil = __webpack_require__(120);

                var _uuidUtil2 = _interopRequireDefault(_uuidUtil);

                var _cookies = __webpack_require__(89);

                var _cookies2 = _interopRequireDefault(_cookies);

                var _constants = __webpack_require__(90);

                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule ? obj : {
                        default: obj
                    };
                }

                var config = void 0;

                function getEventData(type, overlay) {
                    var data = {
                        apiUrl: config.overlayTrackDomain + '/v1/overlay/' + type,
                        overlay_id: overlay.overlay_id,
                        target_audience: overlay.target_audience,
                        visitor_id: _cookies2.default.read('sailthru_visitor'),
                        sticky: !!_uuidUtil2.default.parseUuidsList(_cookies2.default.read(_constants.SESSION_OVERLAY_COOKIE))[0]
                    };

                    if (overlay.target_audience === 'lists') {
                        data.lists = overlay.lists;
                    }

                    if (overlay.experiment_id) {
                        data.experiment_id = overlay.experiment_id;
                        data.variant_id = overlay.variant_id;
                    }

                    var horizonId = _cookies2.default.read('sailthru_hid');
                    if (horizonId !== undefined && horizonId.length > 0) {
                        data.user_id_key = 'hid';
                        data.user_id_value = horizonId;
                    }
                    return data;
                }

                function trackEvent(options) {
                    var data = (0, _extends3.default)({}, options);

                    delete data.apiUrl;

                    if (data.onSuccess) {
                        delete data.onSuccess;
                    }

                    if (data.onError) {
                        delete data.onError;
                    }

                    data = (0, _stringify2.default)(data);

                    return fetch(options.apiUrl, {
                        method: 'POST',
                        headers: {
                            Accept: 'application/json',
                            'Content-Type': 'application/json',
                            'X-Lib-Version': config.VERSION,
                            Authorization: 'Bearer ' + config.customerId
                        },
                        body: data
                    }).then(function(response) {
                        return response.json();
                    }).then(function(json) {
                        if (json && (json.error || json.message)) {
                            throw json;
                        }

                        if (options.onSuccess) {
                            options.onSuccess(json);
                        }
                    }).catch(function(json) {
                        var responseText = void 0;

                        if (json && json.responseText) {
                            responseText = JSON.parse(json.responseText);
                            console.error('You have the following overlay track error: ' + responseText.message);
                        }

                        if (options.onError) {
                            options.onError(json);
                        }
                    });
                }

                var defaultFn = function defaultFn(options) {
                    config = options;

                    return {
                        view: function view(overlay) {
                            var data = getEventData('view', overlay);
                            return trackEvent(data);
                        },
                        conversion: function conversion(overlay, email) {
                            var data = getEventData('conversion', overlay);
                            data.email = email;
                            return trackEvent(data);
                        },
                        click: function click(overlay) {
                            var data = getEventData('click', overlay);
                            return trackEvent(data);
                        }
                    };
                };

                exports.default = defaultFn;
                /* WEBPACK VAR INJECTION */
            }.call(exports, __webpack_require__(42)))

            /***/
        },
        /* 120 */
        /***/
        function(module, exports) {

            'use strict';

            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.default = {
                parseUuidsList: function parseUuidsList(uuidListStr) {
                    if (uuidListStr === undefined || uuidListStr === null || uuidListStr == '') {
                        return [];
                    }
                    var UUID_LENGTH = 36; /* 32 info characters and 4 dashes */
                    var splitByComma = uuidListStr.length > 36 && uuidListStr.charAt(UUID_LENGTH) === ',';
                    if (splitByComma) {
                        return uuidListStr.split(',');
                    }
                    var result = [];
                    for (var index = 0; index <= uuidListStr.length - UUID_LENGTH; index += UUID_LENGTH) {
                        result.push(uuidListStr.substring(index, index + UUID_LENGTH));
                    }
                    return result;
                },
                isUuid: function isUuid(uuid) {
                    var regex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;
                    return !!uuid.match(regex);
                }
            };

            /***/
        },
        /* 121 */
        /***/
        function(module, exports, __webpack_require__) {

            'use strict';

            Object.defineProperty(exports, "__esModule", {
                value: true
            });

            __webpack_require__(88);

            var _cookies = __webpack_require__(89);

            var _cookies2 = _interopRequireDefault(_cookies);

            var _urlUtil = __webpack_require__(93);

            var _urlUtil2 = _interopRequireDefault(_urlUtil);

            var _uuidUtil = __webpack_require__(120);

            var _uuidUtil2 = _interopRequireDefault(_uuidUtil);

            var _constants = __webpack_require__(90);

            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default: obj
                };
            }

            var stickyOverlayId = void 0;
            var urlUtility = void 0;

            function createOrUpdateOverlayDismissCookie(overlayId) {
                var dismissedOverlaysString = _cookies2.default.read(_constants.DISMISSED_OVERLAYS_COOKIE);
                var dismissedOverlayIds = _uuidUtil2.default.parseUuidsList(dismissedOverlaysString);
                if (dismissedOverlayIds.indexOf(overlayId) !== -1) {
                    return;
                }
                if (dismissedOverlaysString) {
                    _cookies2.default.create(_constants.DISMISSED_OVERLAYS_COOKIE, '' + overlayId + dismissedOverlaysString);
                } else {
                    _cookies2.default.create(_constants.DISMISSED_OVERLAYS_COOKIE, overlayId);
                }
            }

            function deleteDismissCookie(overlayId) {
                var dismissedOverlaysString = _cookies2.default.read(_constants.DISMISSED_OVERLAYS_COOKIE);
                var dismissedOverlayIds = _uuidUtil2.default.parseUuidsList(dismissedOverlaysString);
                if (!dismissedOverlaysString || dismissedOverlayIds.indexOf(overlayId) === -1) {
                    return;
                }
                if (dismissedOverlaysString === overlayId) {
                    _cookies2.default.delete(_constants.DISMISSED_OVERLAYS_COOKIE);
                } else {
                    _cookies2.default.create(_constants.DISMISSED_OVERLAYS_COOKIE, dismissedOverlaysString.replace(overlayId, ''));
                }
            }

            function setSticky(sessionOverlay) {
                stickyOverlayId = sessionOverlay;
                _cookies2.default.create(_constants.SESSION_OVERLAY_COOKIE, sessionOverlay);
            }

            function triggerStickyOverlay() {
                var urlParamSessionOverlay = urlUtility.getUrlParam(_constants.OVERLAY_PARAM_STICKY);
                if (urlParamSessionOverlay === '') {
                    console.error('Empty overlay id. Please specify a valid uuid.');
                    return undefined;
                }

                var cookieSessionOverlay = _uuidUtil2.default.parseUuidsList(_cookies2.default.read(_constants.SESSION_OVERLAY_COOKIE))[0];
                if (urlParamSessionOverlay && !_uuidUtil2.default.isUuid(urlParamSessionOverlay) && !cookieSessionOverlay) {
                    console.error('Invalid id: ' + urlParamSessionOverlay + '. Please specify a valid uuid.');
                    return undefined;
                }

                if (urlParamSessionOverlay) {
                    deleteDismissCookie(urlParamSessionOverlay);
                    _cookies2.default.create(_constants.SESS_OVERLAY_PARAMS_COOKIE_NAME, window.location.search);
                    setSticky(urlParamSessionOverlay);
                    return urlParamSessionOverlay;
                }

                var dismissedOverlayIds = _uuidUtil2.default.parseUuidsList(_cookies2.default.read(_constants.DISMISSED_OVERLAYS_COOKIE));
                if (cookieSessionOverlay && dismissedOverlayIds.indexOf(cookieSessionOverlay) === -1) {
                    setSticky(cookieSessionOverlay);
                    return cookieSessionOverlay;
                }
                return undefined;
            }

            function getStickyOverlayId() {
                return stickyOverlayId;
            }

            function dismiss(overlayId) {
                if (_uuidUtil2.default.isUuid(overlayId)) {
                    _cookies2.default.delete(_constants.SESS_OVERLAY_PARAMS_COOKIE_NAME);
                    _cookies2.default.delete(_constants.SESSION_OVERLAY_COOKIE);
                    createOrUpdateOverlayDismissCookie(overlayId);
                } else {
                    console.error('Invalid id: ' + overlayId + '. Please specify a valid uuid.');
                }
            }

            var defaultFn = function defaultFn() {
                urlUtility = (0, _urlUtil2.default)();
                return {
                    triggerStickyOverlay: triggerStickyOverlay,
                    getStickyOverlayId: getStickyOverlayId,
                    dismiss: dismiss
                };
            };

            exports.default = defaultFn;

            /***/
        },
        /* 122 */
        /***/
        function(module, exports, __webpack_require__) {

            'use strict';

            Object.defineProperty(exports, "__esModule", {
                value: true
            });

            var _keys = __webpack_require__(47);

            var _keys2 = _interopRequireDefault(_keys);

            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default: obj
                };
            }

            var timeId = void 0;
            var displayOverlayFunction = void 0;

            var eventListeners = [];

            function cancelTimer() {
                clearTimeout(timeId);
                eventListeners.forEach(function(listener) {
                    document.removeEventListener(listener.event, listener.handler);
                });
            }

            function startTimer(overlay, thresholdMs) {
                timeId = setTimeout(function() {
                    displayOverlayFunction(overlay);
                    cancelTimer(timeId);
                }, thresholdMs);
            }

            function resetTimer(overlay, thresholdMs) {
                clearTimeout(timeId);
                startTimer(overlay, thresholdMs);
            }

            function setupEventHandler(eventHandler, overlay, thresholdMs) {
                var type = overlay.timer.event_handler[eventHandler];
                if (eventHandler === 'page_interaction') {
                    (function() {
                        var handler = void 0;
                        if (type === 'reset') {
                            handler = function handler() {
                                resetTimer(overlay, thresholdMs);
                            };
                        }

                        if (type === 'cancel') {
                            handler = function handler() {
                                cancelTimer();
                            };
                        }

                        if (handler) {
                            ['mousemove', 'mousedown', 'click', 'scroll', 'keydown'].forEach(function(event) {
                                eventListeners.push({
                                    event: event,
                                    handler: handler
                                });
                                document.addEventListener(event, handler);
                            });

                            startTimer(overlay, thresholdMs);
                        }
                    })();
                }
            }

            function renderTimeDelayedOverlay(overlay) {
                var scope = overlay.timer.scope;
                if (scope === 'page') {
                    var thresholdMs = overlay.timer.threshold_ms || 0;

                    if (!overlay.timer.event_handler) {
                        // time-on-page
                        setTimeout(function() {
                            displayOverlayFunction(overlay);
                        }, thresholdMs);
                    } else {
                        var eventHandlers = (0, _keys2.default)(overlay.timer.event_handler);
                        for (var i = 0; i < eventHandlers.length; i += 1) {
                            setupEventHandler(eventHandlers[i], overlay, thresholdMs);
                        }
                    }
                } else {
                    displayOverlayFunction(overlay);
                }
            }

            var defaultFn = function defaultFn(displayPersonalizedOverlayHTML) {
                displayOverlayFunction = displayPersonalizedOverlayHTML;
                return {
                    renderTimeDelayedOverlay: renderTimeDelayedOverlay
                };
            };

            exports.default = defaultFn;

            /***/
        },
        /* 123 */
        /***/
        function(module, exports, __webpack_require__) {

            'use strict';

            Object.defineProperty(exports, "__esModule", {
                value: true
            });

            var _extends2 = __webpack_require__(3);

            var _extends3 = _interopRequireDefault(_extends2);

            var _stringify = __webpack_require__(86);

            var _stringify2 = _interopRequireDefault(_stringify);

            var _keys = __webpack_require__(47);

            var _keys2 = _interopRequireDefault(_keys);

            var _promise = __webpack_require__(102);

            var _promise2 = _interopRequireDefault(_promise);

            __webpack_require__(88);

            var _cookies = __webpack_require__(89);

            var _cookies2 = _interopRequireDefault(_cookies);

            var _urlUtil = __webpack_require__(93);

            var _urlUtil2 = _interopRequireDefault(_urlUtil);

            var _utility = __webpack_require__(95);

            var _utility2 = _interopRequireDefault(_utility);

            var _overlay = __webpack_require__(101);

            var _overlay2 = _interopRequireDefault(_overlay);

            var _contentBlockedUtil = __webpack_require__(124);

            var _contentBlockedUtil2 = _interopRequireDefault(_contentBlockedUtil);

            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default: obj
                };
            }

            var _Promise = typeof _promise2.default === 'undefined' ? __webpack_require__(44).Promise : _promise2.default;

            var config = void 0;
            var overlay = void 0;
            var SPMUtility = void 0;
            var urlUtility = void 0;

            function buildPersonalizeUrl(isCustom) {
                var domainAndPath = config.personalizeDomain + '/v1/personalize';
                var params = [];

                if (isCustom) {
                    domainAndPath += '?';
                    params.push('sections=' + (0, _keys2.default)(config.requestedSections).join());

                    if (config.userVars) {
                        params.push('vars=' + encodeURIComponent((0, _stringify2.default)(config.userVars)));
                    }
                } else {
                    domainAndPath += '/simple?';

                    params = overlay.getUrlParameters();

                    var visitorId = _cookies2.default.read('sailthru_visitor');
                    if (visitorId) {
                        params.push('visitorId=' + visitorId);
                    }

                    var messageId = _cookies2.default.read('sailthru_bid');
                    if (messageId) {
                        params.push('messageId=' + messageId);
                    }
                }

                params = urlUtility.pushUserIdKeyAndUserIdValue(config, params);

                var content = _cookies2.default.read('sailthru_content');
                if (content) {
                    params.push('content=' + content);
                }

                var testCookie = _cookies2.default.read('sailthru_test_id');
                if (testCookie) {
                    params.push('testId=' + testCookie);
                }

                if (config.checkBlocked) {
                    return (0, _contentBlockedUtil2.default)(config.assetsPath).then(function(isBlocked) {
                        if (isBlocked) {
                            params.push('blocked=true');
                        }
                        return domainAndPath + params.join('&');
                    });
                }

                return _Promise.resolve(domainAndPath + params.join('&'));
            }

            function personalize(options) {
                var sections = options.sections,
                    onSuccess = options.onSuccess,
                    onError = options.onError;

                var callbacks = {
                    onSuccess: onSuccess,
                    onError: onError,
                    sections: sections
                };

                if (!sections || !sections.length) {
                    throw Error('Please add sections before personalize');
                }

                if (options && options.vars) {
                    config.userVars = {
                        vars: options.vars
                    };
                }

                sections.forEach(function(section) {
                    config.requestedSections[section.id] = (0, _extends3.default)({}, section);
                });
                return buildPersonalizeUrl(true).then(function(url) {
                    return SPMUtility.fetchPersonalize(url, window.location, callbacks);
                });
            }

            var defaultFn = function defaultFn(options) {
                config = options;
                overlay = (0, _overlay2.default)(config);
                SPMUtility = (0, _utility2.default)(config);
                urlUtility = (0, _urlUtil2.default)();

                return {
                    personalize: personalize,
                    buildPersonalizeUrl: buildPersonalizeUrl,
                    overlay: overlay
                };
            };

            exports.default = defaultFn;

            /***/
        },
        /* 124 */
        /***/
        function(module, exports, __webpack_require__) {

            /* WEBPACK VAR INJECTION */
            (function(fetch) {
                'use strict';

                Object.defineProperty(exports, "__esModule", {
                    value: true
                });

                exports.default = function(assetsPath) {
                    return fetch(assetsPath + 'awepop.js', {
                        mode: 'no-cors'
                    }).then(function() {
                        return false;
                    }).catch(function(error) {
                        return error.message === 'Failed to fetch';
                    });
                };
                /* WEBPACK VAR INJECTION */
            }.call(exports, __webpack_require__(42)))

            /***/
        }
        /******/
    ])
});;


// WEBPACK FOOTER //
// spm.v1.min.js