import _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';
import _extends from '@babel/runtime/helpers/esm/extends';
import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';
import _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';
import React, {
    Component,
    PureComponent
} from 'react';
import immer from 'immer';

var RenderPure =
    /*#__PURE__*/
    function(_PureComponent) {
        _inheritsLoose(RenderPure, _PureComponent);

        function RenderPure() {
            return _PureComponent.apply(this, arguments) || this;
        }

        var _proto = RenderPure.prototype;

        _proto.render = function render() {
            var _this$props = this.props,
                children = _this$props.children,
                props = _objectWithoutPropertiesLoose(_this$props, ["children"]);

            return typeof children === 'function' ? children(props) : children;
        };

        return RenderPure;
    }(PureComponent);

function index(actions) {
    var Context = React.createContext();
    var res = {
        Consumer: function Consumer(_ref) {
            var _ref$select = _ref.select,
                select = _ref$select === void 0 ? function(props) {
                    return props;
                } : _ref$select,
                children = _ref.children;

            var fn = function fn(_ref2) {
                var __obj = _ref2.__obj,
                    rest = _objectWithoutPropertiesLoose(_ref2, ["__obj"]);

                return children(__obj ? rest : rest.pick);
            };

            return React.createElement(Context.Consumer, {
                children: function children(store) {
                    var pick = select(store);
                    var isObject = pick === Object(pick) && !Array.isArray(pick);
                    var props = isObject ? pick : {
                        pick: pick
                    };
                    return React.createElement(RenderPure, _extends({
                        __obj: isObject
                    }, props, {
                        children: fn
                    }));
                }
            });
        },
        Provider:
            /*#__PURE__*/
            function(_Component) {
                _inheritsLoose(Provider, _Component);

                function Provider(_ref3) {
                    var _this;

                    var value = _ref3.value;
                    _this = _Component.call(this) || this;

                    _this.getState = function(fn) {
                        return !_this.unmounted && _Component.prototype.setState.call(_assertThisInitialized(_this), {}, function() {
                            return fn(_this.state);
                        });
                    };

                    _this.setState = function(fn, cb) {
                        return !_this.unmounted && _Component.prototype.setState.call(_assertThisInitialized(_this), function(s) {
                            return typeof fn === 'function' ? immer(s, fn) : fn;
                        }, cb);
                    };

                    var input = value || actions;
                    _this.state = typeof input === 'function' ? input(_this.setState, _this.getState) : input;
                    return _this;
                }

                var _proto2 = Provider.prototype;

                _proto2.componentWillUnmount = function componentWillUnmount() {
                    this.unmounted = true;
                };

                _proto2.render = function render() {
                    return React.createElement(Context.Provider, {
                        value: this.state,
                        children: React.createElement(RenderPure, {
                            children: this.props.children
                        })
                    });
                };

                return Provider;
            }(Component),
        hoc: function hoc(_select) {
            if (_select === void 0) {
                _select = function select(props) {
                    return props;
                };
            }

            return function(Component$$1) {
                return function(props) {
                    return React.createElement(res.Consumer, {
                        select: function select(state) {
                            return _select(state, props);
                        },
                        children: function children(selectedProps) {
                            return React.createElement(Component$$1, _extends({}, props, selectedProps));
                        }
                    });
                };
            };
        }
    };
    return res;
}

export default index;